// Compiled by ClojureScript 0.0-2727 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2727";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__24471__delegate = function (args){
return console.log.apply(console,(function (){var G__24470 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__24470) : cljs.core.into_array.call(null,G__24470));
})());
};
var G__24471 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24472__i = 0, G__24472__a = new Array(arguments.length -  0);
while (G__24472__i < G__24472__a.length) {G__24472__a[G__24472__i] = arguments[G__24472__i + 0]; ++G__24472__i;}
  args = new cljs.core.IndexedSeq(G__24472__a,0);
} 
return G__24471__delegate.call(this,args);};
G__24471.cljs$lang$maxFixedArity = 0;
G__24471.cljs$lang$applyTo = (function (arglist__24473){
var args = cljs.core.seq(arglist__24473);
return G__24471__delegate(args);
});
G__24471.cljs$core$IFn$_invoke$arity$variadic = G__24471__delegate;
return G__24471;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__24475 = x;
return goog.isString(G__24475);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__24477 = x__$1;
return goog.typeOf(G__24477);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__17943__auto__ = ty;
if(cljs.core.truth_(and__17943__auto__)){
return ty.cljs$lang$type;
} else {
return and__17943__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__24479 = obj;
return goog.typeOf(G__24479);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__24481 = Symbol;
return goog.typeOf(G__24481);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__18842__auto___24483 = len;
var i_24484 = (0);
while(true){
if((i_24484 < n__18842__auto___24483)){
(new_arr[i_24484] = (arr[i_24484]));

var G__24485 = (i_24484 + (1));
i_24484 = G__24485;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__24486 = (i + (1));
i = G__24486;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__24495__delegate = function (array,i,idxs){
var G__24492 = aget;
var G__24493 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__24494 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__24492,G__24493,G__24494) : cljs.core.apply.call(null,G__24492,G__24493,G__24494));
};
var G__24495 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__24496__i = 0, G__24496__a = new Array(arguments.length -  2);
while (G__24496__i < G__24496__a.length) {G__24496__a[G__24496__i] = arguments[G__24496__i + 2]; ++G__24496__i;}
  idxs = new cljs.core.IndexedSeq(G__24496__a,0);
} 
return G__24495__delegate.call(this,array,i,idxs);};
G__24495.cljs$lang$maxFixedArity = 2;
G__24495.cljs$lang$applyTo = (function (arglist__24497){
var array = cljs.core.first(arglist__24497);
arglist__24497 = cljs.core.next(arglist__24497);
var i = cljs.core.first(arglist__24497);
var idxs = cljs.core.rest(arglist__24497);
return G__24495__delegate(array,i,idxs);
});
G__24495.cljs$core$IFn$_invoke$arity$variadic = G__24495__delegate;
return G__24495;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__24498 = null;
if (arguments.length > 2) {
var G__24499__i = 0, G__24499__a = new Array(arguments.length -  2);
while (G__24499__i < G__24499__a.length) {G__24499__a[G__24499__i] = arguments[G__24499__i + 2]; ++G__24499__i;}
G__24498 = new cljs.core.IndexedSeq(G__24499__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__24498);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__24508__delegate = function (array,idx,idx2,idxv){
var G__24504 = aset;
var G__24505 = (array[idx]);
var G__24506 = idx2;
var G__24507 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__24504,G__24505,G__24506,G__24507) : cljs.core.apply.call(null,G__24504,G__24505,G__24506,G__24507));
};
var G__24508 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__24509__i = 0, G__24509__a = new Array(arguments.length -  3);
while (G__24509__i < G__24509__a.length) {G__24509__a[G__24509__i] = arguments[G__24509__i + 3]; ++G__24509__i;}
  idxv = new cljs.core.IndexedSeq(G__24509__a,0);
} 
return G__24508__delegate.call(this,array,idx,idx2,idxv);};
G__24508.cljs$lang$maxFixedArity = 3;
G__24508.cljs$lang$applyTo = (function (arglist__24510){
var array = cljs.core.first(arglist__24510);
arglist__24510 = cljs.core.next(arglist__24510);
var idx = cljs.core.first(arglist__24510);
arglist__24510 = cljs.core.next(arglist__24510);
var idx2 = cljs.core.first(arglist__24510);
var idxv = cljs.core.rest(arglist__24510);
return G__24508__delegate(array,idx,idx2,idxv);
});
G__24508.cljs$core$IFn$_invoke$arity$variadic = G__24508__delegate;
return G__24508;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__24511 = null;
if (arguments.length > 3) {
var G__24512__i = 0, G__24512__a = new Array(arguments.length -  3);
while (G__24512__i < G__24512__a.length) {G__24512__a[G__24512__i] = arguments[G__24512__i + 3]; ++G__24512__i;}
G__24511 = new cljs.core.IndexedSeq(G__24512__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__24511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__24518 = (function (a,x){
a.push(x);

return a;
});
var G__24519 = [];
var G__24520 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24518,G__24519,G__24520) : cljs.core.reduce.call(null,G__24518,G__24519,G__24520));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__24521__i = 0, G__24521__a = new Array(arguments.length -  2);
while (G__24521__i < G__24521__a.length) {G__24521__a[G__24521__i] = arguments[G__24521__i + 2]; ++G__24521__i;}
  args = new cljs.core.IndexedSeq(G__24521__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__24522){
var obj = cljs.core.first(arglist__24522);
arglist__24522 = cljs.core.next(arglist__24522);
var s = cljs.core.first(arglist__24522);
var args = cljs.core.rest(arglist__24522);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj24524 = {};
return obj24524;
})();


cljs.core.IFn = (function (){var obj24526 = {};
return obj24526;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24572 = x__18599__auto__;
return goog.typeOf(G__24572);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24574 = x__18599__auto__;
return goog.typeOf(G__24574);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24576 = x__18599__auto__;
return goog.typeOf(G__24576);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24578 = x__18599__auto__;
return goog.typeOf(G__24578);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24580 = x__18599__auto__;
return goog.typeOf(G__24580);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24582 = x__18599__auto__;
return goog.typeOf(G__24582);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24584 = x__18599__auto__;
return goog.typeOf(G__24584);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24586 = x__18599__auto__;
return goog.typeOf(G__24586);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24588 = x__18599__auto__;
return goog.typeOf(G__24588);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24590 = x__18599__auto__;
return goog.typeOf(G__24590);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24592 = x__18599__auto__;
return goog.typeOf(G__24592);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24594 = x__18599__auto__;
return goog.typeOf(G__24594);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24596 = x__18599__auto__;
return goog.typeOf(G__24596);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24598 = x__18599__auto__;
return goog.typeOf(G__24598);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24600 = x__18599__auto__;
return goog.typeOf(G__24600);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24602 = x__18599__auto__;
return goog.typeOf(G__24602);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24604 = x__18599__auto__;
return goog.typeOf(G__24604);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24606 = x__18599__auto__;
return goog.typeOf(G__24606);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24608 = x__18599__auto__;
return goog.typeOf(G__24608);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24610 = x__18599__auto__;
return goog.typeOf(G__24610);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24612 = x__18599__auto__;
return goog.typeOf(G__24612);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._invoke[(function (){var G__24614 = x__18599__auto__;
return goog.typeOf(G__24614);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._invoke["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj24616 = {};
return obj24616;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__17943__auto__ = value;
if(and__17943__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__17943__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__18599__auto__ = (((value == null))?null:value);
return (function (){var or__17955__auto__ = (cljs.core._clone[(function (){var G__24620 = x__18599__auto__;
return goog.typeOf(G__24620);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._clone["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj24622 = {};
return obj24622;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._count[(function (){var G__24626 = x__18599__auto__;
return goog.typeOf(G__24626);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._count["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj24628 = {};
return obj24628;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._empty[(function (){var G__24632 = x__18599__auto__;
return goog.typeOf(G__24632);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._empty["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj24634 = {};
return obj24634;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._conj[(function (){var G__24638 = x__18599__auto__;
return goog.typeOf(G__24638);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._conj["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj24640 = {};
return obj24640;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._nth[(function (){var G__24646 = x__18599__auto__;
return goog.typeOf(G__24646);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._nth["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._nth[(function (){var G__24648 = x__18599__auto__;
return goog.typeOf(G__24648);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._nth["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj24650 = {};
return obj24650;
})();


cljs.core.ISeq = (function (){var obj24652 = {};
return obj24652;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._first[(function (){var G__24656 = x__18599__auto__;
return goog.typeOf(G__24656);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._first["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._rest[(function (){var G__24660 = x__18599__auto__;
return goog.typeOf(G__24660);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._rest["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj24662 = {};
return obj24662;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._next[(function (){var G__24666 = x__18599__auto__;
return goog.typeOf(G__24666);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._next["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj24668 = {};
return obj24668;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._lookup[(function (){var G__24674 = x__18599__auto__;
return goog.typeOf(G__24674);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._lookup["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._lookup[(function (){var G__24676 = x__18599__auto__;
return goog.typeOf(G__24676);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._lookup["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj24678 = {};
return obj24678;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__24682 = x__18599__auto__;
return goog.typeOf(G__24682);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._assoc[(function (){var G__24686 = x__18599__auto__;
return goog.typeOf(G__24686);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._assoc["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj24688 = {};
return obj24688;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._dissoc[(function (){var G__24692 = x__18599__auto__;
return goog.typeOf(G__24692);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._dissoc["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj24694 = {};
return obj24694;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._key[(function (){var G__24698 = x__18599__auto__;
return goog.typeOf(G__24698);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._key["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._val[(function (){var G__24702 = x__18599__auto__;
return goog.typeOf(G__24702);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._val["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj24704 = {};
return obj24704;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._disjoin[(function (){var G__24708 = x__18599__auto__;
return goog.typeOf(G__24708);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._disjoin["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj24710 = {};
return obj24710;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._peek[(function (){var G__24714 = x__18599__auto__;
return goog.typeOf(G__24714);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._peek["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._pop[(function (){var G__24718 = x__18599__auto__;
return goog.typeOf(G__24718);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._pop["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj24720 = {};
return obj24720;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._assoc_n[(function (){var G__24724 = x__18599__auto__;
return goog.typeOf(G__24724);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj24726 = {};
return obj24726;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._deref[(function (){var G__24730 = x__18599__auto__;
return goog.typeOf(G__24730);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._deref["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj24732 = {};
return obj24732;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._deref_with_timeout[(function (){var G__24736 = x__18599__auto__;
return goog.typeOf(G__24736);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj24738 = {};
return obj24738;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._meta[(function (){var G__24742 = x__18599__auto__;
return goog.typeOf(G__24742);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._meta["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj24744 = {};
return obj24744;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._with_meta[(function (){var G__24748 = x__18599__auto__;
return goog.typeOf(G__24748);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._with_meta["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj24750 = {};
return obj24750;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._reduce[(function (){var G__24756 = x__18599__auto__;
return goog.typeOf(G__24756);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._reduce["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._reduce[(function (){var G__24758 = x__18599__auto__;
return goog.typeOf(G__24758);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._reduce["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj24760 = {};
return obj24760;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._kv_reduce[(function (){var G__24764 = x__18599__auto__;
return goog.typeOf(G__24764);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj24766 = {};
return obj24766;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._equiv[(function (){var G__24770 = x__18599__auto__;
return goog.typeOf(G__24770);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._equiv["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj24772 = {};
return obj24772;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._hash[(function (){var G__24776 = x__18599__auto__;
return goog.typeOf(G__24776);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._hash["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj24778 = {};
return obj24778;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._seq[(function (){var G__24782 = x__18599__auto__;
return goog.typeOf(G__24782);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._seq["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj24784 = {};
return obj24784;
})();


cljs.core.IList = (function (){var obj24786 = {};
return obj24786;
})();


cljs.core.IRecord = (function (){var obj24788 = {};
return obj24788;
})();


cljs.core.IReversible = (function (){var obj24790 = {};
return obj24790;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._rseq[(function (){var G__24794 = x__18599__auto__;
return goog.typeOf(G__24794);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._rseq["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj24796 = {};
return obj24796;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._sorted_seq[(function (){var G__24800 = x__18599__auto__;
return goog.typeOf(G__24800);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._sorted_seq_from[(function (){var G__24804 = x__18599__auto__;
return goog.typeOf(G__24804);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._entry_key[(function (){var G__24808 = x__18599__auto__;
return goog.typeOf(G__24808);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._entry_key["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._comparator[(function (){var G__24812 = x__18599__auto__;
return goog.typeOf(G__24812);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._comparator["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj24814 = {};
return obj24814;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__17943__auto__ = writer;
if(and__17943__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__17943__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__18599__auto__ = (((writer == null))?null:writer);
return (function (){var or__17955__auto__ = (cljs.core._write[(function (){var G__24818 = x__18599__auto__;
return goog.typeOf(G__24818);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._write["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__17943__auto__ = writer;
if(and__17943__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__17943__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__18599__auto__ = (((writer == null))?null:writer);
return (function (){var or__17955__auto__ = (cljs.core._flush[(function (){var G__24822 = x__18599__auto__;
return goog.typeOf(G__24822);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._flush["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj24824 = {};
return obj24824;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._pr_writer[(function (){var G__24828 = x__18599__auto__;
return goog.typeOf(G__24828);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj24830 = {};
return obj24830;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__17943__auto__ = d;
if(and__17943__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__17943__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__18599__auto__ = (((d == null))?null:d);
return (function (){var or__17955__auto__ = (cljs.core._realized_QMARK_[(function (){var G__24834 = x__18599__auto__;
return goog.typeOf(G__24834);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj24836 = {};
return obj24836;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._notify_watches[(function (){var G__24840 = x__18599__auto__;
return goog.typeOf(G__24840);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._add_watch[(function (){var G__24844 = x__18599__auto__;
return goog.typeOf(G__24844);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._add_watch["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__17943__auto__ = this$;
if(and__17943__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__17943__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__18599__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17955__auto__ = (cljs.core._remove_watch[(function (){var G__24848 = x__18599__auto__;
return goog.typeOf(G__24848);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj24850 = {};
return obj24850;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._as_transient[(function (){var G__24854 = x__18599__auto__;
return goog.typeOf(G__24854);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._as_transient["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj24856 = {};
return obj24856;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._conj_BANG_[(function (){var G__24860 = x__18599__auto__;
return goog.typeOf(G__24860);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._persistent_BANG_[(function (){var G__24864 = x__18599__auto__;
return goog.typeOf(G__24864);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj24866 = {};
return obj24866;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._assoc_BANG_[(function (){var G__24870 = x__18599__auto__;
return goog.typeOf(G__24870);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj24872 = {};
return obj24872;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__24876 = x__18599__auto__;
return goog.typeOf(G__24876);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj24878 = {};
return obj24878;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__24882 = x__18599__auto__;
return goog.typeOf(G__24882);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._pop_BANG_[(function (){var G__24886 = x__18599__auto__;
return goog.typeOf(G__24886);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj24888 = {};
return obj24888;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__17943__auto__ = tcoll;
if(and__17943__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__18599__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17955__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__24892 = x__18599__auto__;
return goog.typeOf(G__24892);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj24894 = {};
return obj24894;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__17943__auto__ = x;
if(and__17943__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__17943__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__18599__auto__ = (((x == null))?null:x);
return (function (){var or__17955__auto__ = (cljs.core._compare[(function (){var G__24898 = x__18599__auto__;
return goog.typeOf(G__24898);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._compare["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj24900 = {};
return obj24900;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._drop_first[(function (){var G__24904 = x__18599__auto__;
return goog.typeOf(G__24904);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._drop_first["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj24906 = {};
return obj24906;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._chunked_first[(function (){var G__24910 = x__18599__auto__;
return goog.typeOf(G__24910);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._chunked_rest[(function (){var G__24914 = x__18599__auto__;
return goog.typeOf(G__24914);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj24916 = {};
return obj24916;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._chunked_next[(function (){var G__24920 = x__18599__auto__;
return goog.typeOf(G__24920);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj24922 = {};
return obj24922;
})();

cljs.core._name = (function _name(x){
if((function (){var and__17943__auto__ = x;
if(and__17943__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__17943__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__18599__auto__ = (((x == null))?null:x);
return (function (){var or__17955__auto__ = (cljs.core._name[(function (){var G__24926 = x__18599__auto__;
return goog.typeOf(G__24926);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._name["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__17943__auto__ = x;
if(and__17943__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__17943__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__18599__auto__ = (((x == null))?null:x);
return (function (){var or__17955__auto__ = (cljs.core._namespace[(function (){var G__24930 = x__18599__auto__;
return goog.typeOf(G__24930);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._namespace["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj24932 = {};
return obj24932;
})();


cljs.core.IReset = (function (){var obj24934 = {};
return obj24934;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._reset_BANG_[(function (){var G__24938 = x__18599__auto__;
return goog.typeOf(G__24938);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj24940 = {};
return obj24940;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._swap_BANG_[(function (){var G__24950 = x__18599__auto__;
return goog.typeOf(G__24950);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._swap_BANG_[(function (){var G__24952 = x__18599__auto__;
return goog.typeOf(G__24952);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._swap_BANG_[(function (){var G__24954 = x__18599__auto__;
return goog.typeOf(G__24954);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._swap_BANG_[(function (){var G__24956 = x__18599__auto__;
return goog.typeOf(G__24956);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj24958 = {};
return obj24958;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__17943__auto__ = o;
if(and__17943__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__17943__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__18599__auto__ = (((o == null))?null:o);
return (function (){var or__17955__auto__ = (cljs.core._vreset_BANG_[(function (){var G__24962 = x__18599__auto__;
return goog.typeOf(G__24962);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj24964 = {};
return obj24964;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__17943__auto__ = coll;
if(and__17943__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__17943__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__18599__auto__ = (((coll == null))?null:coll);
return (function (){var or__17955__auto__ = (cljs.core._iterator[(function (){var G__24968 = x__18599__auto__;
return goog.typeOf(G__24968);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._iterator["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__24971 = (4294967295);
var G__24972 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24971,G__24972) : Math.imul.call(null,G__24971,G__24972));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__24975 = a;
var G__24976 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24975,G__24976) : Math.imul.call(null,G__24975,G__24976));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__24977 = (i + (2));
var G__24978 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__24977;
h1 = G__24978;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj24980 = {};
return obj24980;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__24981 = (i + (1));
var G__24982 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__24981;
hash = G__24982;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj24986 = {};
return obj24986;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__24989 = o;
if(G__24989){
var bit__18629__auto__ = (G__24989.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__18629__auto__) || (G__24989.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__24990 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24990) : Math.floor.call(null,G__24990));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17943__auto__ = cljs.core.not(a.ns);
if(and__17943__auto__){
return b.ns;
} else {
return and__17943__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24997 = a.ns;
var G__24998 = b.ns;
return goog.array.defaultCompare(G__24997,G__24998);
})();
if(((0) === nsc)){
var G__24999 = a.name;
var G__25000 = b.name;
return goog.array.defaultCompare(G__24999,G__25000);
} else {
return nsc;
}
}
} else {
var G__25001 = a.name;
var G__25002 = b.name;
return goog.array.defaultCompare(G__25001,G__25002);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__18376__auto__ = self__._hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__25004 = null;
var G__25004__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__25004__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__25004 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__25004__2.call(this,self__,coll);
case 3:
return G__25004__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25004.cljs$core$IFn$_invoke$arity$2 = G__25004__2;
G__25004.cljs$core$IFn$_invoke$arity$3 = G__25004__3;
return G__25004;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args25003){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25003)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__25052 = null;
var G__25052__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__25052__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__25052__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__25052__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__25052__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__25052__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__25052__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__25052__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__25052__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__25052__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__25052__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__25052__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__25052__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__25052__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__25052__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__25052__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__25052__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__25052__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__25052__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__25052__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__25052__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__25052__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25008 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__25009 = a;
var G__25010 = b;
var G__25011 = c;
var G__25012 = d;
var G__25013 = e;
var G__25014 = f;
var G__25015 = g;
var G__25016 = h;
var G__25017 = i;
var G__25018 = j;
var G__25019 = k;
var G__25020 = l;
var G__25021 = m;
var G__25022 = n;
var G__25023 = o;
var G__25024 = p;
var G__25025 = q;
var G__25026 = r;
var G__25027 = s;
var G__25028 = t;
var G__25029 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029) : cljs.core.apply.call(null,G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029));
});
G__25052 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25052__1.call(this,self__);
case 2:
return G__25052__2.call(this,self__,a);
case 3:
return G__25052__3.call(this,self__,a,b);
case 4:
return G__25052__4.call(this,self__,a,b,c);
case 5:
return G__25052__5.call(this,self__,a,b,c,d);
case 6:
return G__25052__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25052__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25052__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25052__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25052__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25052__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25052__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25052__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25052__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25052__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25052__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25052__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25052__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25052__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25052__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25052__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25052__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25052.cljs$core$IFn$_invoke$arity$1 = G__25052__1;
G__25052.cljs$core$IFn$_invoke$arity$2 = G__25052__2;
G__25052.cljs$core$IFn$_invoke$arity$3 = G__25052__3;
G__25052.cljs$core$IFn$_invoke$arity$4 = G__25052__4;
G__25052.cljs$core$IFn$_invoke$arity$5 = G__25052__5;
G__25052.cljs$core$IFn$_invoke$arity$6 = G__25052__6;
G__25052.cljs$core$IFn$_invoke$arity$7 = G__25052__7;
G__25052.cljs$core$IFn$_invoke$arity$8 = G__25052__8;
G__25052.cljs$core$IFn$_invoke$arity$9 = G__25052__9;
G__25052.cljs$core$IFn$_invoke$arity$10 = G__25052__10;
G__25052.cljs$core$IFn$_invoke$arity$11 = G__25052__11;
G__25052.cljs$core$IFn$_invoke$arity$12 = G__25052__12;
G__25052.cljs$core$IFn$_invoke$arity$13 = G__25052__13;
G__25052.cljs$core$IFn$_invoke$arity$14 = G__25052__14;
G__25052.cljs$core$IFn$_invoke$arity$15 = G__25052__15;
G__25052.cljs$core$IFn$_invoke$arity$16 = G__25052__16;
G__25052.cljs$core$IFn$_invoke$arity$17 = G__25052__17;
G__25052.cljs$core$IFn$_invoke$arity$18 = G__25052__18;
G__25052.cljs$core$IFn$_invoke$arity$19 = G__25052__19;
G__25052.cljs$core$IFn$_invoke$arity$20 = G__25052__20;
G__25052.cljs$core$IFn$_invoke$arity$21 = G__25052__21;
G__25052.cljs$core$IFn$_invoke$arity$22 = G__25052__22;
return G__25052;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args25007){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25007)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__25030 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__25031 = a;
var G__25032 = b;
var G__25033 = c;
var G__25034 = d;
var G__25035 = e;
var G__25036 = f;
var G__25037 = g;
var G__25038 = h;
var G__25039 = i;
var G__25040 = j;
var G__25041 = k;
var G__25042 = l;
var G__25043 = m;
var G__25044 = n;
var G__25045 = o;
var G__25046 = p;
var G__25047 = q;
var G__25048 = r;
var G__25049 = s;
var G__25050 = t;
var G__25051 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051) : cljs.core.apply.call(null,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__25054 = x;
if(G__25054){
var bit__18636__auto__ = null;
if(cljs.core.truth_((function (){var or__17955__auto__ = bit__18636__auto__;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return G__25054.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__25054.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__25054);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__25054);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__25056 = value;
if(G__25056){
var bit__18636__auto__ = (G__25056.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__18636__auto__) || (G__25056.cljs$core$ICloneable$)){
return true;
} else {
if((!G__25056.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__25056);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__25056);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__25058 = coll;
if(G__25058){
var bit__18629__auto__ = (G__25058.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18629__auto__) || (G__25058.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__25060 = coll;
if(G__25060){
var bit__18629__auto__ = (G__25060.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18629__auto__) || (G__25060.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__25062 = coll;
if(G__25062){
var bit__18629__auto__ = (G__25062.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18629__auto__) || (G__25062.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__25064 = coll;
if(G__25064){
var bit__18629__auto__ = (G__25064.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18629__auto__) || (G__25064.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__25069__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__25070 = y;
var G__25071 = cljs.core.first(more);
var G__25072 = cljs.core.next(more);
x = G__25070;
y = G__25071;
more = G__25072;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25069 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25073__i = 0, G__25073__a = new Array(arguments.length -  2);
while (G__25073__i < G__25073__a.length) {G__25073__a[G__25073__i] = arguments[G__25073__i + 2]; ++G__25073__i;}
  more = new cljs.core.IndexedSeq(G__25073__a,0);
} 
return G__25069__delegate.call(this,x,y,more);};
G__25069.cljs$lang$maxFixedArity = 2;
G__25069.cljs$lang$applyTo = (function (arglist__25074){
var x = cljs.core.first(arglist__25074);
arglist__25074 = cljs.core.next(arglist__25074);
var y = cljs.core.first(arglist__25074);
var more = cljs.core.rest(arglist__25074);
return G__25069__delegate(x,y,more);
});
G__25069.cljs$core$IFn$_invoke$arity$variadic = G__25069__delegate;
return G__25069;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__25075 = null;
if (arguments.length > 2) {
var G__25076__i = 0, G__25076__a = new Array(arguments.length -  2);
while (G__25076__i < G__25076__a.length) {G__25076__a[G__25076__i] = arguments[G__25076__i + 2]; ++G__25076__i;}
G__25075 = new cljs.core.IndexedSeq(G__25076__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__25077 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__25077) : cljs.core.es6_iterator_seq.call(null,G__25077));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__25078 = (n + (1));
var G__25079 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__25080 = cljs.core.next(coll__$1);
n = G__25078;
hash_code = G__25079;
coll__$1 = G__25080;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__25081 = (n + (1));
var G__25082 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__25083 = cljs.core.next(coll__$1);
n = G__25081;
hash_code = G__25082;
coll__$1 = G__25083;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__25084 = o;
return goog.getUid(G__25084);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__25086 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25086) : cljs.core.deref.call(null,G__25086));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__25093 = val;
var G__25094 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25093,G__25094) : f.call(null,G__25093,G__25094));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25099 = nval;
var G__25100 = (n + (1));
val = G__25099;
n = G__25100;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__25095 = val__$1;
var G__25096 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25095,G__25096) : f.call(null,G__25095,G__25096));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25101 = nval;
var G__25102 = (n + (1));
val__$1 = G__25101;
n = G__25102;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__25097 = val__$1;
var G__25098 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25097,G__25098) : f.call(null,G__25097,G__25098));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25103 = nval;
var G__25104 = (n + (1));
val__$1 = G__25103;
n = G__25104;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__25111 = val;
var G__25112 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25111,G__25112) : f.call(null,G__25111,G__25112));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25117 = nval;
var G__25118 = (n + (1));
val = G__25117;
n = G__25118;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__25113 = val__$1;
var G__25114 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25113,G__25114) : f.call(null,G__25113,G__25114));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25119 = nval;
var G__25120 = (n + (1));
val__$1 = G__25119;
n = G__25120;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__25115 = val__$1;
var G__25116 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25115,G__25116) : f.call(null,G__25115,G__25116));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25121 = nval;
var G__25122 = (n + (1));
val__$1 = G__25121;
n = G__25122;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__25124 = x;
if(G__25124){
var bit__18636__auto__ = (G__25124.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18636__auto__) || (G__25124.cljs$core$ICounted$)){
return true;
} else {
if((!G__25124.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__25124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__25124);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__25126 = x;
if(G__25126){
var bit__18636__auto__ = (G__25126.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18636__auto__) || (G__25126.cljs$core$IIndexed$)){
return true;
} else {
if((!G__25126.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__25126);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__25126);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__25127 = coll__$1;
var G__25128 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__25127,G__25128) : cljs.core.equiv_sequential.call(null,G__25127,G__25128));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__25129 = o;
var G__25130 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__25129,G__25130) : cljs.core.cons.call(null,G__25129,G__25130));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__25133 = coll__$1;
var G__25134 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__25133,G__25134) : cljs.core.equiv_sequential.call(null,G__25133,G__25134));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__25135 = cljs.core.List.EMPTY;
var G__25136 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__25135,G__25136) : cljs.core.with_meta.call(null,G__25135,G__25136));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__25137 = f;
var G__25138 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__25137,G__25138) : cljs.core.seq_reduce.call(null,G__25137,G__25138));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__25139 = f;
var G__25140 = start;
var G__25141 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__25139,G__25140,G__25141) : cljs.core.seq_reduce.call(null,G__25139,G__25140,G__25141));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__25142 = o;
var G__25143 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__25142,G__25143) : cljs.core.cons.call(null,G__25142,G__25143));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__25144 = sn;
s = G__25144;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__25149__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__25150 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__25151 = cljs.core.first(xs);
var G__25152 = cljs.core.next(xs);
coll = G__25150;
x = G__25151;
xs = G__25152;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__25149 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__25153__i = 0, G__25153__a = new Array(arguments.length -  2);
while (G__25153__i < G__25153__a.length) {G__25153__a[G__25153__i] = arguments[G__25153__i + 2]; ++G__25153__i;}
  xs = new cljs.core.IndexedSeq(G__25153__a,0);
} 
return G__25149__delegate.call(this,coll,x,xs);};
G__25149.cljs$lang$maxFixedArity = 2;
G__25149.cljs$lang$applyTo = (function (arglist__25154){
var coll = cljs.core.first(arglist__25154);
arglist__25154 = cljs.core.next(arglist__25154);
var x = cljs.core.first(arglist__25154);
var xs = cljs.core.rest(arglist__25154);
return G__25149__delegate(coll,x,xs);
});
G__25149.cljs$core$IFn$_invoke$arity$variadic = G__25149__delegate;
return G__25149;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__25155 = null;
if (arguments.length > 2) {
var G__25156__i = 0, G__25156__a = new Array(arguments.length -  2);
while (G__25156__i < G__25156__a.length) {G__25156__a[G__25156__i] = arguments[G__25156__i + 2]; ++G__25156__i;}
G__25155 = new cljs.core.IndexedSeq(G__25156__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__25155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__25157 = cljs.core.next(s);
var G__25158 = (acc + (1));
s = G__25157;
acc = G__25158;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__25160 = coll;
if(G__25160){
var bit__18629__auto__ = (G__25160.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18629__auto__) || (G__25160.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__25161 = cljs.core.next(coll);
var G__25162 = (n - (1));
coll = G__25161;
n = G__25162;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__25163 = cljs.core.next(coll);
var G__25164 = (n - (1));
var G__25165 = not_found;
coll = G__25163;
n = G__25164;
not_found = G__25165;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__25170 = coll;
if(G__25170){
var bit__18629__auto__ = (G__25170.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18629__auto__) || (G__25170.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__25171 = coll;
if(G__25171){
var bit__18636__auto__ = (G__25171.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18636__auto__) || (G__25171.cljs$core$ISeq$)){
return true;
} else {
if((!G__25171.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25171);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__25172 = coll;
if(G__25172){
var bit__18629__auto__ = (G__25172.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18629__auto__) || (G__25172.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__25173 = coll;
if(G__25173){
var bit__18636__auto__ = (G__25173.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18636__auto__) || (G__25173.cljs$core$ISeq$)){
return true;
} else {
if((!G__25173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25173);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__25174 = (n__$1 - (1));
var G__25175 = cljs.core.rest(xs);
n__$1 = G__25174;
xs = G__25175;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__25178 = o;
if(G__25178){
var bit__18629__auto__ = (G__25178.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18629__auto__) || (G__25178.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__25179 = o;
if(G__25179){
var bit__18629__auto__ = (G__25179.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18629__auto__) || (G__25179.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__25183__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__25184 = ret;
var G__25185 = cljs.core.first(kvs);
var G__25186 = cljs.core.second(kvs);
var G__25187 = cljs.core.nnext(kvs);
coll = G__25184;
k = G__25185;
v = G__25186;
kvs = G__25187;
continue;
} else {
return ret;
}
break;
}
};
var G__25183 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__25188__i = 0, G__25188__a = new Array(arguments.length -  3);
while (G__25188__i < G__25188__a.length) {G__25188__a[G__25188__i] = arguments[G__25188__i + 3]; ++G__25188__i;}
  kvs = new cljs.core.IndexedSeq(G__25188__a,0);
} 
return G__25183__delegate.call(this,coll,k,v,kvs);};
G__25183.cljs$lang$maxFixedArity = 3;
G__25183.cljs$lang$applyTo = (function (arglist__25189){
var coll = cljs.core.first(arglist__25189);
arglist__25189 = cljs.core.next(arglist__25189);
var k = cljs.core.first(arglist__25189);
arglist__25189 = cljs.core.next(arglist__25189);
var v = cljs.core.first(arglist__25189);
var kvs = cljs.core.rest(arglist__25189);
return G__25183__delegate(coll,k,v,kvs);
});
G__25183.cljs$core$IFn$_invoke$arity$variadic = G__25183__delegate;
return G__25183;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__25190 = null;
if (arguments.length > 3) {
var G__25191__i = 0, G__25191__a = new Array(arguments.length -  3);
while (G__25191__i < G__25191__a.length) {G__25191__a[G__25191__i] = arguments[G__25191__i + 3]; ++G__25191__i;}
G__25190 = new cljs.core.IndexedSeq(G__25191__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__25190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__25194__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__25195 = ret;
var G__25196 = cljs.core.first(ks);
var G__25197 = cljs.core.next(ks);
coll = G__25195;
k = G__25196;
ks = G__25197;
continue;
} else {
return ret;
}
}
break;
}
};
var G__25194 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25198__i = 0, G__25198__a = new Array(arguments.length -  2);
while (G__25198__i < G__25198__a.length) {G__25198__a[G__25198__i] = arguments[G__25198__i + 2]; ++G__25198__i;}
  ks = new cljs.core.IndexedSeq(G__25198__a,0);
} 
return G__25194__delegate.call(this,coll,k,ks);};
G__25194.cljs$lang$maxFixedArity = 2;
G__25194.cljs$lang$applyTo = (function (arglist__25199){
var coll = cljs.core.first(arglist__25199);
arglist__25199 = cljs.core.next(arglist__25199);
var k = cljs.core.first(arglist__25199);
var ks = cljs.core.rest(arglist__25199);
return G__25194__delegate(coll,k,ks);
});
G__25194.cljs$core$IFn$_invoke$arity$variadic = G__25194__delegate;
return G__25194;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__25200 = null;
if (arguments.length > 2) {
var G__25201__i = 0, G__25201__a = new Array(arguments.length -  2);
while (G__25201__i < G__25201__a.length) {G__25201__a[G__25201__i] = arguments[G__25201__i + 2]; ++G__25201__i;}
G__25200 = new cljs.core.IndexedSeq(G__25201__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__25200);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__17955__auto__ = (function (){var G__25206 = f;
return goog.isFunction(G__25206);
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var G__25207 = f;
if(G__25207){
var bit__18636__auto__ = null;
if(cljs.core.truth_((function (){var or__17955__auto____$1 = bit__18636__auto__;
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
return G__25207.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__25207.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__25207);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__25207);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__25673 = null;
var G__25673__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__25673__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25209 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__25209) : self__.afn.call(null,G__25209));
});
var G__25673__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25210 = a;
var G__25211 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__25210,G__25211) : self__.afn.call(null,G__25210,G__25211));
});
var G__25673__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25212 = a;
var G__25213 = b;
var G__25214 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__25212,G__25213,G__25214) : self__.afn.call(null,G__25212,G__25213,G__25214));
});
var G__25673__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25215 = a;
var G__25216 = b;
var G__25217 = c;
var G__25218 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__25215,G__25216,G__25217,G__25218) : self__.afn.call(null,G__25215,G__25216,G__25217,G__25218));
});
var G__25673__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25219 = a;
var G__25220 = b;
var G__25221 = c;
var G__25222 = d;
var G__25223 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__25219,G__25220,G__25221,G__25222,G__25223) : self__.afn.call(null,G__25219,G__25220,G__25221,G__25222,G__25223));
});
var G__25673__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25224 = a;
var G__25225 = b;
var G__25226 = c;
var G__25227 = d;
var G__25228 = e;
var G__25229 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__25224,G__25225,G__25226,G__25227,G__25228,G__25229) : self__.afn.call(null,G__25224,G__25225,G__25226,G__25227,G__25228,G__25229));
});
var G__25673__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25230 = a;
var G__25231 = b;
var G__25232 = c;
var G__25233 = d;
var G__25234 = e;
var G__25235 = f;
var G__25236 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__25230,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236) : self__.afn.call(null,G__25230,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236));
});
var G__25673__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25237 = a;
var G__25238 = b;
var G__25239 = c;
var G__25240 = d;
var G__25241 = e;
var G__25242 = f;
var G__25243 = g;
var G__25244 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244) : self__.afn.call(null,G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244));
});
var G__25673__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25245 = a;
var G__25246 = b;
var G__25247 = c;
var G__25248 = d;
var G__25249 = e;
var G__25250 = f;
var G__25251 = g;
var G__25252 = h;
var G__25253 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__25245,G__25246,G__25247,G__25248,G__25249,G__25250,G__25251,G__25252,G__25253) : self__.afn.call(null,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250,G__25251,G__25252,G__25253));
});
var G__25673__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25254 = a;
var G__25255 = b;
var G__25256 = c;
var G__25257 = d;
var G__25258 = e;
var G__25259 = f;
var G__25260 = g;
var G__25261 = h;
var G__25262 = i;
var G__25263 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263) : self__.afn.call(null,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263));
});
var G__25673__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25264 = a;
var G__25265 = b;
var G__25266 = c;
var G__25267 = d;
var G__25268 = e;
var G__25269 = f;
var G__25270 = g;
var G__25271 = h;
var G__25272 = i;
var G__25273 = j;
var G__25274 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__25264,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274) : self__.afn.call(null,G__25264,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274));
});
var G__25673__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25275 = a;
var G__25276 = b;
var G__25277 = c;
var G__25278 = d;
var G__25279 = e;
var G__25280 = f;
var G__25281 = g;
var G__25282 = h;
var G__25283 = i;
var G__25284 = j;
var G__25285 = k;
var G__25286 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__25275,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283,G__25284,G__25285,G__25286) : self__.afn.call(null,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283,G__25284,G__25285,G__25286));
});
var G__25673__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25287 = a;
var G__25288 = b;
var G__25289 = c;
var G__25290 = d;
var G__25291 = e;
var G__25292 = f;
var G__25293 = g;
var G__25294 = h;
var G__25295 = i;
var G__25296 = j;
var G__25297 = k;
var G__25298 = l;
var G__25299 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296,G__25297,G__25298,G__25299) : self__.afn.call(null,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296,G__25297,G__25298,G__25299));
});
var G__25673__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25300 = a;
var G__25301 = b;
var G__25302 = c;
var G__25303 = d;
var G__25304 = e;
var G__25305 = f;
var G__25306 = g;
var G__25307 = h;
var G__25308 = i;
var G__25309 = j;
var G__25310 = k;
var G__25311 = l;
var G__25312 = m;
var G__25313 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__25300,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313) : self__.afn.call(null,G__25300,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313));
});
var G__25673__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25314 = a;
var G__25315 = b;
var G__25316 = c;
var G__25317 = d;
var G__25318 = e;
var G__25319 = f;
var G__25320 = g;
var G__25321 = h;
var G__25322 = i;
var G__25323 = j;
var G__25324 = k;
var G__25325 = l;
var G__25326 = m;
var G__25327 = n;
var G__25328 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328) : self__.afn.call(null,G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328));
});
var G__25673__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25329 = a;
var G__25330 = b;
var G__25331 = c;
var G__25332 = d;
var G__25333 = e;
var G__25334 = f;
var G__25335 = g;
var G__25336 = h;
var G__25337 = i;
var G__25338 = j;
var G__25339 = k;
var G__25340 = l;
var G__25341 = m;
var G__25342 = n;
var G__25343 = o;
var G__25344 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344) : self__.afn.call(null,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344));
});
var G__25673__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25345 = a;
var G__25346 = b;
var G__25347 = c;
var G__25348 = d;
var G__25349 = e;
var G__25350 = f;
var G__25351 = g;
var G__25352 = h;
var G__25353 = i;
var G__25354 = j;
var G__25355 = k;
var G__25356 = l;
var G__25357 = m;
var G__25358 = n;
var G__25359 = o;
var G__25360 = p;
var G__25361 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__25345,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361) : self__.afn.call(null,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361));
});
var G__25673__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25362 = a;
var G__25363 = b;
var G__25364 = c;
var G__25365 = d;
var G__25366 = e;
var G__25367 = f;
var G__25368 = g;
var G__25369 = h;
var G__25370 = i;
var G__25371 = j;
var G__25372 = k;
var G__25373 = l;
var G__25374 = m;
var G__25375 = n;
var G__25376 = o;
var G__25377 = p;
var G__25378 = q;
var G__25379 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__25362,G__25363,G__25364,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376,G__25377,G__25378,G__25379) : self__.afn.call(null,G__25362,G__25363,G__25364,G__25365,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376,G__25377,G__25378,G__25379));
});
var G__25673__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25380 = a;
var G__25381 = b;
var G__25382 = c;
var G__25383 = d;
var G__25384 = e;
var G__25385 = f;
var G__25386 = g;
var G__25387 = h;
var G__25388 = i;
var G__25389 = j;
var G__25390 = k;
var G__25391 = l;
var G__25392 = m;
var G__25393 = n;
var G__25394 = o;
var G__25395 = p;
var G__25396 = q;
var G__25397 = r;
var G__25398 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__25380,G__25381,G__25382,G__25383,G__25384,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396,G__25397,G__25398) : self__.afn.call(null,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396,G__25397,G__25398));
});
var G__25673__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25399 = a;
var G__25400 = b;
var G__25401 = c;
var G__25402 = d;
var G__25403 = e;
var G__25404 = f;
var G__25405 = g;
var G__25406 = h;
var G__25407 = i;
var G__25408 = j;
var G__25409 = k;
var G__25410 = l;
var G__25411 = m;
var G__25412 = n;
var G__25413 = o;
var G__25414 = p;
var G__25415 = q;
var G__25416 = r;
var G__25417 = s;
var G__25418 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418) : self__.afn.call(null,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418));
});
var G__25673__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__25419 = self__.afn;
var G__25420 = a;
var G__25421 = b;
var G__25422 = c;
var G__25423 = d;
var G__25424 = e;
var G__25425 = f;
var G__25426 = g;
var G__25427 = h;
var G__25428 = i;
var G__25429 = j;
var G__25430 = k;
var G__25431 = l;
var G__25432 = m;
var G__25433 = n;
var G__25434 = o;
var G__25435 = p;
var G__25436 = q;
var G__25437 = r;
var G__25438 = s;
var G__25439 = t;
var G__25440 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440) : cljs.core.apply.call(null,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440));
});
G__25673 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25673__1.call(this,self__);
case 2:
return G__25673__2.call(this,self__,a);
case 3:
return G__25673__3.call(this,self__,a,b);
case 4:
return G__25673__4.call(this,self__,a,b,c);
case 5:
return G__25673__5.call(this,self__,a,b,c,d);
case 6:
return G__25673__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25673__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25673__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25673__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25673__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25673__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25673__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25673__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25673__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25673__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25673__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25673__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25673__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25673__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25673__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25673__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25673__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25673.cljs$core$IFn$_invoke$arity$1 = G__25673__1;
G__25673.cljs$core$IFn$_invoke$arity$2 = G__25673__2;
G__25673.cljs$core$IFn$_invoke$arity$3 = G__25673__3;
G__25673.cljs$core$IFn$_invoke$arity$4 = G__25673__4;
G__25673.cljs$core$IFn$_invoke$arity$5 = G__25673__5;
G__25673.cljs$core$IFn$_invoke$arity$6 = G__25673__6;
G__25673.cljs$core$IFn$_invoke$arity$7 = G__25673__7;
G__25673.cljs$core$IFn$_invoke$arity$8 = G__25673__8;
G__25673.cljs$core$IFn$_invoke$arity$9 = G__25673__9;
G__25673.cljs$core$IFn$_invoke$arity$10 = G__25673__10;
G__25673.cljs$core$IFn$_invoke$arity$11 = G__25673__11;
G__25673.cljs$core$IFn$_invoke$arity$12 = G__25673__12;
G__25673.cljs$core$IFn$_invoke$arity$13 = G__25673__13;
G__25673.cljs$core$IFn$_invoke$arity$14 = G__25673__14;
G__25673.cljs$core$IFn$_invoke$arity$15 = G__25673__15;
G__25673.cljs$core$IFn$_invoke$arity$16 = G__25673__16;
G__25673.cljs$core$IFn$_invoke$arity$17 = G__25673__17;
G__25673.cljs$core$IFn$_invoke$arity$18 = G__25673__18;
G__25673.cljs$core$IFn$_invoke$arity$19 = G__25673__19;
G__25673.cljs$core$IFn$_invoke$arity$20 = G__25673__20;
G__25673.cljs$core$IFn$_invoke$arity$21 = G__25673__21;
G__25673.cljs$core$IFn$_invoke$arity$22 = G__25673__22;
return G__25673;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args25208){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25208)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__25441 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__25441) : self__.afn.call(null,G__25441));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__25442 = a;
var G__25443 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__25442,G__25443) : self__.afn.call(null,G__25442,G__25443));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__25444 = a;
var G__25445 = b;
var G__25446 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__25444,G__25445,G__25446) : self__.afn.call(null,G__25444,G__25445,G__25446));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__25447 = a;
var G__25448 = b;
var G__25449 = c;
var G__25450 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__25447,G__25448,G__25449,G__25450) : self__.afn.call(null,G__25447,G__25448,G__25449,G__25450));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__25451 = a;
var G__25452 = b;
var G__25453 = c;
var G__25454 = d;
var G__25455 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__25451,G__25452,G__25453,G__25454,G__25455) : self__.afn.call(null,G__25451,G__25452,G__25453,G__25454,G__25455));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__25456 = a;
var G__25457 = b;
var G__25458 = c;
var G__25459 = d;
var G__25460 = e;
var G__25461 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__25456,G__25457,G__25458,G__25459,G__25460,G__25461) : self__.afn.call(null,G__25456,G__25457,G__25458,G__25459,G__25460,G__25461));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__25462 = a;
var G__25463 = b;
var G__25464 = c;
var G__25465 = d;
var G__25466 = e;
var G__25467 = f;
var G__25468 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__25462,G__25463,G__25464,G__25465,G__25466,G__25467,G__25468) : self__.afn.call(null,G__25462,G__25463,G__25464,G__25465,G__25466,G__25467,G__25468));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__25469 = a;
var G__25470 = b;
var G__25471 = c;
var G__25472 = d;
var G__25473 = e;
var G__25474 = f;
var G__25475 = g;
var G__25476 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__25469,G__25470,G__25471,G__25472,G__25473,G__25474,G__25475,G__25476) : self__.afn.call(null,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474,G__25475,G__25476));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__25477 = a;
var G__25478 = b;
var G__25479 = c;
var G__25480 = d;
var G__25481 = e;
var G__25482 = f;
var G__25483 = g;
var G__25484 = h;
var G__25485 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483,G__25484,G__25485) : self__.afn.call(null,G__25477,G__25478,G__25479,G__25480,G__25481,G__25482,G__25483,G__25484,G__25485));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__25486 = a;
var G__25487 = b;
var G__25488 = c;
var G__25489 = d;
var G__25490 = e;
var G__25491 = f;
var G__25492 = g;
var G__25493 = h;
var G__25494 = i;
var G__25495 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__25486,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495) : self__.afn.call(null,G__25486,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494,G__25495));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__25496 = a;
var G__25497 = b;
var G__25498 = c;
var G__25499 = d;
var G__25500 = e;
var G__25501 = f;
var G__25502 = g;
var G__25503 = h;
var G__25504 = i;
var G__25505 = j;
var G__25506 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502,G__25503,G__25504,G__25505,G__25506) : self__.afn.call(null,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502,G__25503,G__25504,G__25505,G__25506));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__25507 = a;
var G__25508 = b;
var G__25509 = c;
var G__25510 = d;
var G__25511 = e;
var G__25512 = f;
var G__25513 = g;
var G__25514 = h;
var G__25515 = i;
var G__25516 = j;
var G__25517 = k;
var G__25518 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518) : self__.afn.call(null,G__25507,G__25508,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__25519 = a;
var G__25520 = b;
var G__25521 = c;
var G__25522 = d;
var G__25523 = e;
var G__25524 = f;
var G__25525 = g;
var G__25526 = h;
var G__25527 = i;
var G__25528 = j;
var G__25529 = k;
var G__25530 = l;
var G__25531 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531) : self__.afn.call(null,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__25532 = a;
var G__25533 = b;
var G__25534 = c;
var G__25535 = d;
var G__25536 = e;
var G__25537 = f;
var G__25538 = g;
var G__25539 = h;
var G__25540 = i;
var G__25541 = j;
var G__25542 = k;
var G__25543 = l;
var G__25544 = m;
var G__25545 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__25532,G__25533,G__25534,G__25535,G__25536,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545) : self__.afn.call(null,G__25532,G__25533,G__25534,G__25535,G__25536,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544,G__25545));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__25546 = a;
var G__25547 = b;
var G__25548 = c;
var G__25549 = d;
var G__25550 = e;
var G__25551 = f;
var G__25552 = g;
var G__25553 = h;
var G__25554 = i;
var G__25555 = j;
var G__25556 = k;
var G__25557 = l;
var G__25558 = m;
var G__25559 = n;
var G__25560 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560) : self__.afn.call(null,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__25561 = a;
var G__25562 = b;
var G__25563 = c;
var G__25564 = d;
var G__25565 = e;
var G__25566 = f;
var G__25567 = g;
var G__25568 = h;
var G__25569 = i;
var G__25570 = j;
var G__25571 = k;
var G__25572 = l;
var G__25573 = m;
var G__25574 = n;
var G__25575 = o;
var G__25576 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573,G__25574,G__25575,G__25576) : self__.afn.call(null,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573,G__25574,G__25575,G__25576));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__25577 = a;
var G__25578 = b;
var G__25579 = c;
var G__25580 = d;
var G__25581 = e;
var G__25582 = f;
var G__25583 = g;
var G__25584 = h;
var G__25585 = i;
var G__25586 = j;
var G__25587 = k;
var G__25588 = l;
var G__25589 = m;
var G__25590 = n;
var G__25591 = o;
var G__25592 = p;
var G__25593 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590,G__25591,G__25592,G__25593) : self__.afn.call(null,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590,G__25591,G__25592,G__25593));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__25594 = a;
var G__25595 = b;
var G__25596 = c;
var G__25597 = d;
var G__25598 = e;
var G__25599 = f;
var G__25600 = g;
var G__25601 = h;
var G__25602 = i;
var G__25603 = j;
var G__25604 = k;
var G__25605 = l;
var G__25606 = m;
var G__25607 = n;
var G__25608 = o;
var G__25609 = p;
var G__25610 = q;
var G__25611 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611) : self__.afn.call(null,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__25612 = a;
var G__25613 = b;
var G__25614 = c;
var G__25615 = d;
var G__25616 = e;
var G__25617 = f;
var G__25618 = g;
var G__25619 = h;
var G__25620 = i;
var G__25621 = j;
var G__25622 = k;
var G__25623 = l;
var G__25624 = m;
var G__25625 = n;
var G__25626 = o;
var G__25627 = p;
var G__25628 = q;
var G__25629 = r;
var G__25630 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626,G__25627,G__25628,G__25629,G__25630) : self__.afn.call(null,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626,G__25627,G__25628,G__25629,G__25630));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__25631 = a;
var G__25632 = b;
var G__25633 = c;
var G__25634 = d;
var G__25635 = e;
var G__25636 = f;
var G__25637 = g;
var G__25638 = h;
var G__25639 = i;
var G__25640 = j;
var G__25641 = k;
var G__25642 = l;
var G__25643 = m;
var G__25644 = n;
var G__25645 = o;
var G__25646 = p;
var G__25647 = q;
var G__25648 = r;
var G__25649 = s;
var G__25650 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644,G__25645,G__25646,G__25647,G__25648,G__25649,G__25650) : self__.afn.call(null,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644,G__25645,G__25646,G__25647,G__25648,G__25649,G__25650));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__25651 = self__.afn;
var G__25652 = a;
var G__25653 = b;
var G__25654 = c;
var G__25655 = d;
var G__25656 = e;
var G__25657 = f;
var G__25658 = g;
var G__25659 = h;
var G__25660 = i;
var G__25661 = j;
var G__25662 = k;
var G__25663 = l;
var G__25664 = m;
var G__25665 = n;
var G__25666 = o;
var G__25667 = p;
var G__25668 = q;
var G__25669 = r;
var G__25670 = s;
var G__25671 = t;
var G__25672 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25651,G__25652,G__25653,G__25654,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664,G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672) : cljs.core.apply.call(null,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664,G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__25678 = o;
if(G__25678){
var bit__18636__auto__ = (G__25678.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__18636__auto__) || (G__25678.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__25678.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25678);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25678);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__17943__auto__ = !((o == null));
if(and__17943__auto__){
var G__25682 = o;
if(G__25682){
var bit__18636__auto__ = (G__25682.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18636__auto__) || (G__25682.cljs$core$IMeta$)){
return true;
} else {
if((!G__25682.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25682);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25682);
}
} else {
return and__17943__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__25685__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__25686 = ret;
var G__25687 = cljs.core.first(ks);
var G__25688 = cljs.core.next(ks);
coll = G__25686;
k = G__25687;
ks = G__25688;
continue;
} else {
return ret;
}
}
break;
}
};
var G__25685 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25689__i = 0, G__25689__a = new Array(arguments.length -  2);
while (G__25689__i < G__25689__a.length) {G__25689__a[G__25689__i] = arguments[G__25689__i + 2]; ++G__25689__i;}
  ks = new cljs.core.IndexedSeq(G__25689__a,0);
} 
return G__25685__delegate.call(this,coll,k,ks);};
G__25685.cljs$lang$maxFixedArity = 2;
G__25685.cljs$lang$applyTo = (function (arglist__25690){
var coll = cljs.core.first(arglist__25690);
arglist__25690 = cljs.core.next(arglist__25690);
var k = cljs.core.first(arglist__25690);
var ks = cljs.core.rest(arglist__25690);
return G__25685__delegate(coll,k,ks);
});
G__25685.cljs$core$IFn$_invoke$arity$variadic = G__25685__delegate;
return G__25685;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__25691 = null;
if (arguments.length > 2) {
var G__25692__i = 0, G__25692__a = new Array(arguments.length -  2);
while (G__25692__i < G__25692__a.length) {G__25692__a[G__25692__i] = arguments[G__25692__i + 2]; ++G__25692__i;}
G__25691 = new cljs.core.IndexedSeq(G__25692__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__25691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25694 = x;
if(G__25694){
var bit__18636__auto__ = (G__25694.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__18636__auto__) || (G__25694.cljs$core$ICollection$)){
return true;
} else {
if((!G__25694.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25694);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25694);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25696 = x;
if(G__25696){
var bit__18636__auto__ = (G__25696.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__18636__auto__) || (G__25696.cljs$core$ISet$)){
return true;
} else {
if((!G__25696.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25696);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25696);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__25698 = x;
if(G__25698){
var bit__18636__auto__ = (G__25698.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__18636__auto__) || (G__25698.cljs$core$IAssociative$)){
return true;
} else {
if((!G__25698.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25698);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25698);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__25700 = x;
if(G__25700){
var bit__18636__auto__ = (G__25700.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__18636__auto__) || (G__25700.cljs$core$ISequential$)){
return true;
} else {
if((!G__25700.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25700);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25700);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__25702 = x;
if(G__25702){
var bit__18636__auto__ = (G__25702.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__18636__auto__) || (G__25702.cljs$core$ISorted$)){
return true;
} else {
if((!G__25702.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25702);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25702);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__25704 = x;
if(G__25704){
var bit__18636__auto__ = (G__25704.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18636__auto__) || (G__25704.cljs$core$IReduce$)){
return true;
} else {
if((!G__25704.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25704);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25704);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25706 = x;
if(G__25706){
var bit__18636__auto__ = (G__25706.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18636__auto__) || (G__25706.cljs$core$IMap$)){
return true;
} else {
if((!G__25706.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25706);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25706);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__25708 = x;
if(G__25708){
var bit__18636__auto__ = (G__25708.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__18636__auto__) || (G__25708.cljs$core$IVector$)){
return true;
} else {
if((!G__25708.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25708);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25708);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__25710 = x;
if(G__25710){
var bit__18629__auto__ = (G__25710.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__18629__auto__) || (G__25710.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj25716 = {};
return obj25716;
});
var js_obj__1 = (function() { 
var G__25719__delegate = function (keyvals){
var G__25717 = goog.object.create;
var G__25718 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__25717,G__25718) : cljs.core.apply.call(null,G__25717,G__25718));
};
var G__25719 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25720__i = 0, G__25720__a = new Array(arguments.length -  0);
while (G__25720__i < G__25720__a.length) {G__25720__a[G__25720__i] = arguments[G__25720__i + 0]; ++G__25720__i;}
  keyvals = new cljs.core.IndexedSeq(G__25720__a,0);
} 
return G__25719__delegate.call(this,keyvals);};
G__25719.cljs$lang$maxFixedArity = 0;
G__25719.cljs$lang$applyTo = (function (arglist__25721){
var keyvals = cljs.core.seq(arglist__25721);
return G__25719__delegate(keyvals);
});
G__25719.cljs$core$IFn$_invoke$arity$variadic = G__25719__delegate;
return G__25719;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__25722 = null;
if (arguments.length > 0) {
var G__25723__i = 0, G__25723__a = new Array(arguments.length -  0);
while (G__25723__i < G__25723__a.length) {G__25723__a[G__25723__i] = arguments[G__25723__i + 0]; ++G__25723__i;}
G__25722 = new cljs.core.IndexedSeq(G__25723__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__25722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__25726_25728 = obj;
var G__25727_25729 = ((function (G__25726_25728,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__25726_25728,keys))
;
goog.object.forEach(G__25726_25728,G__25727_25729);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25730 = (i__$1 + (1));
var G__25731 = (j__$1 + (1));
var G__25732 = (len__$1 - (1));
i__$1 = G__25730;
j__$1 = G__25731;
len__$1 = G__25732;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25733 = (i__$1 - (1));
var G__25734 = (j__$1 - (1));
var G__25735 = (len__$1 - (1));
i__$1 = G__25733;
j__$1 = G__25734;
len__$1 = G__25735;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj25737 = {};
return obj25737;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__25739 = s;
if(G__25739){
var bit__18636__auto__ = (G__25739.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18636__auto__) || (G__25739.cljs$core$ISeq$)){
return true;
} else {
if((!G__25739.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25739);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25739);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__25741 = s;
if(G__25741){
var bit__18636__auto__ = (G__25741.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18636__auto__) || (G__25741.cljs$core$ISeqable$)){
return true;
} else {
if((!G__25741.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25741);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25741);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__17955__auto__ = cljs.core.fn_QMARK_(f);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var G__25745 = f;
if(G__25745){
var bit__18636__auto__ = (G__25745.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__18636__auto__) || (G__25745.cljs$core$IFn$)){
return true;
} else {
if((!G__25745.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25745);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25745);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__25758 = n;
return isNaN(G__25758);
})())) && (!((n === Infinity))) && (((function (){var G__25759 = n;
return parseFloat(G__25759);
})() === (function (){var G__25760 = n;
var G__25761 = (10);
return parseInt(G__25760,G__25761);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__25762__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__25763 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__25764 = etc;
s = G__25763;
xs = G__25764;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__25762 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25765__i = 0, G__25765__a = new Array(arguments.length -  2);
while (G__25765__i < G__25765__a.length) {G__25765__a[G__25765__i] = arguments[G__25765__i + 2]; ++G__25765__i;}
  more = new cljs.core.IndexedSeq(G__25765__a,0);
} 
return G__25762__delegate.call(this,x,y,more);};
G__25762.cljs$lang$maxFixedArity = 2;
G__25762.cljs$lang$applyTo = (function (arglist__25766){
var x = cljs.core.first(arglist__25766);
arglist__25766 = cljs.core.next(arglist__25766);
var y = cljs.core.first(arglist__25766);
var more = cljs.core.rest(arglist__25766);
return G__25762__delegate(x,y,more);
});
G__25762.cljs$core$IFn$_invoke$arity$variadic = G__25762__delegate;
return G__25762;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__25767 = null;
if (arguments.length > 2) {
var G__25768__i = 0, G__25768__a = new Array(arguments.length -  2);
while (G__25768__i < G__25768__a.length) {G__25768__a[G__25768__i] = arguments[G__25768__i + 2]; ++G__25768__i;}
G__25767 = new cljs.core.IndexedSeq(G__25768__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__25772 = x;
if(G__25772){
var bit__18629__auto__ = (G__25772.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__18629__auto__) || (G__25772.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__25773 = x;
var G__25774 = y;
return goog.array.defaultCompare(G__25773,G__25774);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__25779 = xs;
var G__25780 = ys;
var G__25781 = len;
var G__25782 = (n + (1));
xs = G__25779;
ys = G__25780;
len = G__25781;
n = G__25782;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__25787 = x;
var G__25788 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25787,G__25788) : f.call(null,G__25787,G__25788));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25789 = y;
var G__25790 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25789,G__25790) : f.call(null,G__25789,G__25790));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__25796 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25796) : cljs.core.to_array.call(null,G__25796));
})();
var G__25797_25799 = a;
var G__25798_25800 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__25797_25799,G__25798_25800);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__25806 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25806) : keyfn.call(null,G__25806));
})(),(function (){var G__25807 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25807) : keyfn.call(null,G__25807));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__25813 = f;
var G__25814 = cljs.core.first(s);
var G__25815 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25813,G__25814,G__25815) : cljs.core.reduce.call(null,G__25813,G__25814,G__25815));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__25816 = val__$1;
var G__25817 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25816,G__25817) : f.call(null,G__25816,G__25817));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25818 = nval;
var G__25819 = cljs.core.next(coll__$1);
val__$1 = G__25818;
coll__$1 = G__25819;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__25823 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25823) : cljs.core.to_array.call(null,G__25823));
})();
var G__25824_25826 = a;
goog.array.shuffle(G__25824_25826);

var G__25825 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__25825) : cljs.core.vec.call(null,G__25825));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__25829 = coll;
if(G__25829){
var bit__18629__auto__ = (G__25829.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18629__auto__) || (G__25829.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__25830 = coll;
if(G__25830){
var bit__18629__auto__ = (G__25830.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18629__auto__) || (G__25830.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__25839 = null;
var G__25839__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__25839__1 = (function (x){
var G__25836 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__25836) : cf.call(null,G__25836));
});
var G__25839__2 = (function (x,y){
var G__25837 = x;
var G__25838 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25837,G__25838) : f.call(null,G__25837,G__25838));
});
G__25839 = function(x,y){
switch(arguments.length){
case 0:
return G__25839__0.call(this);
case 1:
return G__25839__1.call(this,x);
case 2:
return G__25839__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25839.cljs$core$IFn$_invoke$arity$0 = G__25839__0;
G__25839.cljs$core$IFn$_invoke$arity$1 = G__25839__1;
G__25839.cljs$core$IFn$_invoke$arity$2 = G__25839__2;
return G__25839;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__25846 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25846) : xform.call(null,G__25846));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__25847 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__25847) : f__$1.call(null,G__25847));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__25848__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__25848 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25849__i = 0, G__25849__a = new Array(arguments.length -  2);
while (G__25849__i < G__25849__a.length) {G__25849__a[G__25849__i] = arguments[G__25849__i + 2]; ++G__25849__i;}
  more = new cljs.core.IndexedSeq(G__25849__a,0);
} 
return G__25848__delegate.call(this,x,y,more);};
G__25848.cljs$lang$maxFixedArity = 2;
G__25848.cljs$lang$applyTo = (function (arglist__25850){
var x = cljs.core.first(arglist__25850);
arglist__25850 = cljs.core.next(arglist__25850);
var y = cljs.core.first(arglist__25850);
var more = cljs.core.rest(arglist__25850);
return G__25848__delegate(x,y,more);
});
G__25848.cljs$core$IFn$_invoke$arity$variadic = G__25848__delegate;
return G__25848;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__25851 = null;
if (arguments.length > 2) {
var G__25852__i = 0, G__25852__a = new Array(arguments.length -  2);
while (G__25852__i < G__25852__a.length) {G__25852__a[G__25852__i] = arguments[G__25852__i + 2]; ++G__25852__i;}
G__25851 = new cljs.core.IndexedSeq(G__25852__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__25853__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__25853 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25854__i = 0, G__25854__a = new Array(arguments.length -  2);
while (G__25854__i < G__25854__a.length) {G__25854__a[G__25854__i] = arguments[G__25854__i + 2]; ++G__25854__i;}
  more = new cljs.core.IndexedSeq(G__25854__a,0);
} 
return G__25853__delegate.call(this,x,y,more);};
G__25853.cljs$lang$maxFixedArity = 2;
G__25853.cljs$lang$applyTo = (function (arglist__25855){
var x = cljs.core.first(arglist__25855);
arglist__25855 = cljs.core.next(arglist__25855);
var y = cljs.core.first(arglist__25855);
var more = cljs.core.rest(arglist__25855);
return G__25853__delegate(x,y,more);
});
G__25853.cljs$core$IFn$_invoke$arity$variadic = G__25853__delegate;
return G__25853;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__25856 = null;
if (arguments.length > 2) {
var G__25857__i = 0, G__25857__a = new Array(arguments.length -  2);
while (G__25857__i < G__25857__a.length) {G__25857__a[G__25857__i] = arguments[G__25857__i + 2]; ++G__25857__i;}
G__25856 = new cljs.core.IndexedSeq(G__25857__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25856);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__25858__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__25858 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25859__i = 0, G__25859__a = new Array(arguments.length -  2);
while (G__25859__i < G__25859__a.length) {G__25859__a[G__25859__i] = arguments[G__25859__i + 2]; ++G__25859__i;}
  more = new cljs.core.IndexedSeq(G__25859__a,0);
} 
return G__25858__delegate.call(this,x,y,more);};
G__25858.cljs$lang$maxFixedArity = 2;
G__25858.cljs$lang$applyTo = (function (arglist__25860){
var x = cljs.core.first(arglist__25860);
arglist__25860 = cljs.core.next(arglist__25860);
var y = cljs.core.first(arglist__25860);
var more = cljs.core.rest(arglist__25860);
return G__25858__delegate(x,y,more);
});
G__25858.cljs$core$IFn$_invoke$arity$variadic = G__25858__delegate;
return G__25858;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__25861 = null;
if (arguments.length > 2) {
var G__25862__i = 0, G__25862__a = new Array(arguments.length -  2);
while (G__25862__i < G__25862__a.length) {G__25862__a[G__25862__i] = arguments[G__25862__i + 2]; ++G__25862__i;}
G__25861 = new cljs.core.IndexedSeq(G__25862__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__25867__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25867 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25868__i = 0, G__25868__a = new Array(arguments.length -  2);
while (G__25868__i < G__25868__a.length) {G__25868__a[G__25868__i] = arguments[G__25868__i + 2]; ++G__25868__i;}
  more = new cljs.core.IndexedSeq(G__25868__a,0);
} 
return G__25867__delegate.call(this,x,y,more);};
G__25867.cljs$lang$maxFixedArity = 2;
G__25867.cljs$lang$applyTo = (function (arglist__25869){
var x = cljs.core.first(arglist__25869);
arglist__25869 = cljs.core.next(arglist__25869);
var y = cljs.core.first(arglist__25869);
var more = cljs.core.rest(arglist__25869);
return G__25867__delegate(x,y,more);
});
G__25867.cljs$core$IFn$_invoke$arity$variadic = G__25867__delegate;
return G__25867;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__25870 = null;
if (arguments.length > 2) {
var G__25871__i = 0, G__25871__a = new Array(arguments.length -  2);
while (G__25871__i < G__25871__a.length) {G__25871__a[G__25871__i] = arguments[G__25871__i + 2]; ++G__25871__i;}
G__25870 = new cljs.core.IndexedSeq(G__25871__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__25872__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__25873 = y;
var G__25874 = cljs.core.first(more);
var G__25875 = cljs.core.next(more);
x = G__25873;
y = G__25874;
more = G__25875;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25872 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25876__i = 0, G__25876__a = new Array(arguments.length -  2);
while (G__25876__i < G__25876__a.length) {G__25876__a[G__25876__i] = arguments[G__25876__i + 2]; ++G__25876__i;}
  more = new cljs.core.IndexedSeq(G__25876__a,0);
} 
return G__25872__delegate.call(this,x,y,more);};
G__25872.cljs$lang$maxFixedArity = 2;
G__25872.cljs$lang$applyTo = (function (arglist__25877){
var x = cljs.core.first(arglist__25877);
arglist__25877 = cljs.core.next(arglist__25877);
var y = cljs.core.first(arglist__25877);
var more = cljs.core.rest(arglist__25877);
return G__25872__delegate(x,y,more);
});
G__25872.cljs$core$IFn$_invoke$arity$variadic = G__25872__delegate;
return G__25872;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__25878 = null;
if (arguments.length > 2) {
var G__25879__i = 0, G__25879__a = new Array(arguments.length -  2);
while (G__25879__i < G__25879__a.length) {G__25879__a[G__25879__i] = arguments[G__25879__i + 2]; ++G__25879__i;}
G__25878 = new cljs.core.IndexedSeq(G__25879__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__25880__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__25881 = y;
var G__25882 = cljs.core.first(more);
var G__25883 = cljs.core.next(more);
x = G__25881;
y = G__25882;
more = G__25883;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25880 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25884__i = 0, G__25884__a = new Array(arguments.length -  2);
while (G__25884__i < G__25884__a.length) {G__25884__a[G__25884__i] = arguments[G__25884__i + 2]; ++G__25884__i;}
  more = new cljs.core.IndexedSeq(G__25884__a,0);
} 
return G__25880__delegate.call(this,x,y,more);};
G__25880.cljs$lang$maxFixedArity = 2;
G__25880.cljs$lang$applyTo = (function (arglist__25885){
var x = cljs.core.first(arglist__25885);
arglist__25885 = cljs.core.next(arglist__25885);
var y = cljs.core.first(arglist__25885);
var more = cljs.core.rest(arglist__25885);
return G__25880__delegate(x,y,more);
});
G__25880.cljs$core$IFn$_invoke$arity$variadic = G__25880__delegate;
return G__25880;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__25886 = null;
if (arguments.length > 2) {
var G__25887__i = 0, G__25887__a = new Array(arguments.length -  2);
while (G__25887__i < G__25887__a.length) {G__25887__a[G__25887__i] = arguments[G__25887__i + 2]; ++G__25887__i;}
G__25886 = new cljs.core.IndexedSeq(G__25887__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25886);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__25888__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__25889 = y;
var G__25890 = cljs.core.first(more);
var G__25891 = cljs.core.next(more);
x = G__25889;
y = G__25890;
more = G__25891;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25888 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25892__i = 0, G__25892__a = new Array(arguments.length -  2);
while (G__25892__i < G__25892__a.length) {G__25892__a[G__25892__i] = arguments[G__25892__i + 2]; ++G__25892__i;}
  more = new cljs.core.IndexedSeq(G__25892__a,0);
} 
return G__25888__delegate.call(this,x,y,more);};
G__25888.cljs$lang$maxFixedArity = 2;
G__25888.cljs$lang$applyTo = (function (arglist__25893){
var x = cljs.core.first(arglist__25893);
arglist__25893 = cljs.core.next(arglist__25893);
var y = cljs.core.first(arglist__25893);
var more = cljs.core.rest(arglist__25893);
return G__25888__delegate(x,y,more);
});
G__25888.cljs$core$IFn$_invoke$arity$variadic = G__25888__delegate;
return G__25888;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__25894 = null;
if (arguments.length > 2) {
var G__25895__i = 0, G__25895__a = new Array(arguments.length -  2);
while (G__25895__i < G__25895__a.length) {G__25895__a[G__25895__i] = arguments[G__25895__i + 2]; ++G__25895__i;}
G__25894 = new cljs.core.IndexedSeq(G__25895__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__25896__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__25897 = y;
var G__25898 = cljs.core.first(more);
var G__25899 = cljs.core.next(more);
x = G__25897;
y = G__25898;
more = G__25899;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25896 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25900__i = 0, G__25900__a = new Array(arguments.length -  2);
while (G__25900__i < G__25900__a.length) {G__25900__a[G__25900__i] = arguments[G__25900__i + 2]; ++G__25900__i;}
  more = new cljs.core.IndexedSeq(G__25900__a,0);
} 
return G__25896__delegate.call(this,x,y,more);};
G__25896.cljs$lang$maxFixedArity = 2;
G__25896.cljs$lang$applyTo = (function (arglist__25901){
var x = cljs.core.first(arglist__25901);
arglist__25901 = cljs.core.next(arglist__25901);
var y = cljs.core.first(arglist__25901);
var more = cljs.core.rest(arglist__25901);
return G__25896__delegate(x,y,more);
});
G__25896.cljs$core$IFn$_invoke$arity$variadic = G__25896__delegate;
return G__25896;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__25902 = null;
if (arguments.length > 2) {
var G__25903__i = 0, G__25903__a = new Array(arguments.length -  2);
while (G__25903__i < G__25903__a.length) {G__25903__a[G__25903__i] = arguments[G__25903__i + 2]; ++G__25903__i;}
G__25902 = new cljs.core.IndexedSeq(G__25903__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__18272__auto__ = x;
var y__18273__auto__ = y;
return ((x__18272__auto__ > y__18273__auto__) ? x__18272__auto__ : y__18273__auto__);
});
var max__3 = (function() { 
var G__25904__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__18272__auto__ = x;
var y__18273__auto__ = y;
return ((x__18272__auto__ > y__18273__auto__) ? x__18272__auto__ : y__18273__auto__);
})(),more);
};
var G__25904 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25905__i = 0, G__25905__a = new Array(arguments.length -  2);
while (G__25905__i < G__25905__a.length) {G__25905__a[G__25905__i] = arguments[G__25905__i + 2]; ++G__25905__i;}
  more = new cljs.core.IndexedSeq(G__25905__a,0);
} 
return G__25904__delegate.call(this,x,y,more);};
G__25904.cljs$lang$maxFixedArity = 2;
G__25904.cljs$lang$applyTo = (function (arglist__25906){
var x = cljs.core.first(arglist__25906);
arglist__25906 = cljs.core.next(arglist__25906);
var y = cljs.core.first(arglist__25906);
var more = cljs.core.rest(arglist__25906);
return G__25904__delegate(x,y,more);
});
G__25904.cljs$core$IFn$_invoke$arity$variadic = G__25904__delegate;
return G__25904;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__25907 = null;
if (arguments.length > 2) {
var G__25908__i = 0, G__25908__a = new Array(arguments.length -  2);
while (G__25908__i < G__25908__a.length) {G__25908__a[G__25908__i] = arguments[G__25908__i + 2]; ++G__25908__i;}
G__25907 = new cljs.core.IndexedSeq(G__25908__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__18279__auto__ = x;
var y__18280__auto__ = y;
return ((x__18279__auto__ < y__18280__auto__) ? x__18279__auto__ : y__18280__auto__);
});
var min__3 = (function() { 
var G__25909__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__18279__auto__ = x;
var y__18280__auto__ = y;
return ((x__18279__auto__ < y__18280__auto__) ? x__18279__auto__ : y__18280__auto__);
})(),more);
};
var G__25909 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25910__i = 0, G__25910__a = new Array(arguments.length -  2);
while (G__25910__i < G__25910__a.length) {G__25910__a[G__25910__i] = arguments[G__25910__i + 2]; ++G__25910__i;}
  more = new cljs.core.IndexedSeq(G__25910__a,0);
} 
return G__25909__delegate.call(this,x,y,more);};
G__25909.cljs$lang$maxFixedArity = 2;
G__25909.cljs$lang$applyTo = (function (arglist__25911){
var x = cljs.core.first(arglist__25911);
arglist__25911 = cljs.core.next(arglist__25911);
var y = cljs.core.first(arglist__25911);
var more = cljs.core.rest(arglist__25911);
return G__25909__delegate(x,y,more);
});
G__25909.cljs$core$IFn$_invoke$arity$variadic = G__25909__delegate;
return G__25909;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__25912 = null;
if (arguments.length > 2) {
var G__25913__i = 0, G__25913__a = new Array(arguments.length -  2);
while (G__25913__i < G__25913__a.length) {G__25913__a[G__25913__i] = arguments[G__25913__i + 2]; ++G__25913__i;}
G__25912 = new cljs.core.IndexedSeq(G__25913__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__25914__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__25914 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25915__i = 0, G__25915__a = new Array(arguments.length -  2);
while (G__25915__i < G__25915__a.length) {G__25915__a[G__25915__i] = arguments[G__25915__i + 2]; ++G__25915__i;}
  more = new cljs.core.IndexedSeq(G__25915__a,0);
} 
return G__25914__delegate.call(this,x,y,more);};
G__25914.cljs$lang$maxFixedArity = 2;
G__25914.cljs$lang$applyTo = (function (arglist__25916){
var x = cljs.core.first(arglist__25916);
arglist__25916 = cljs.core.next(arglist__25916);
var y = cljs.core.first(arglist__25916);
var more = cljs.core.rest(arglist__25916);
return G__25914__delegate(x,y,more);
});
G__25914.cljs$core$IFn$_invoke$arity$variadic = G__25914__delegate;
return G__25914;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__25917 = null;
if (arguments.length > 2) {
var G__25918__i = 0, G__25918__a = new Array(arguments.length -  2);
while (G__25918__i < G__25918__a.length) {G__25918__a[G__25918__i] = arguments[G__25918__i + 2]; ++G__25918__i;}
G__25917 = new cljs.core.IndexedSeq(G__25918__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__25919__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__25919 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25920__i = 0, G__25920__a = new Array(arguments.length -  2);
while (G__25920__i < G__25920__a.length) {G__25920__a[G__25920__i] = arguments[G__25920__i + 2]; ++G__25920__i;}
  more = new cljs.core.IndexedSeq(G__25920__a,0);
} 
return G__25919__delegate.call(this,x,y,more);};
G__25919.cljs$lang$maxFixedArity = 2;
G__25919.cljs$lang$applyTo = (function (arglist__25921){
var x = cljs.core.first(arglist__25921);
arglist__25921 = cljs.core.next(arglist__25921);
var y = cljs.core.first(arglist__25921);
var more = cljs.core.rest(arglist__25921);
return G__25919__delegate(x,y,more);
});
G__25919.cljs$core$IFn$_invoke$arity$variadic = G__25919__delegate;
return G__25919;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__25922 = null;
if (arguments.length > 2) {
var G__25923__i = 0, G__25923__a = new Array(arguments.length -  2);
while (G__25923__i < G__25923__a.length) {G__25923__a[G__25923__i] = arguments[G__25923__i + 2]; ++G__25923__i;}
G__25922 = new cljs.core.IndexedSeq(G__25923__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__25928__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25928 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25929__i = 0, G__25929__a = new Array(arguments.length -  2);
while (G__25929__i < G__25929__a.length) {G__25929__a[G__25929__i] = arguments[G__25929__i + 2]; ++G__25929__i;}
  more = new cljs.core.IndexedSeq(G__25929__a,0);
} 
return G__25928__delegate.call(this,x,y,more);};
G__25928.cljs$lang$maxFixedArity = 2;
G__25928.cljs$lang$applyTo = (function (arglist__25930){
var x = cljs.core.first(arglist__25930);
arglist__25930 = cljs.core.next(arglist__25930);
var y = cljs.core.first(arglist__25930);
var more = cljs.core.rest(arglist__25930);
return G__25928__delegate(x,y,more);
});
G__25928.cljs$core$IFn$_invoke$arity$variadic = G__25928__delegate;
return G__25928;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__25931 = null;
if (arguments.length > 2) {
var G__25932__i = 0, G__25932__a = new Array(arguments.length -  2);
while (G__25932__i < G__25932__a.length) {G__25932__a[G__25932__i] = arguments[G__25932__i + 2]; ++G__25932__i;}
G__25931 = new cljs.core.IndexedSeq(G__25932__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__25933__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__25933 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25934__i = 0, G__25934__a = new Array(arguments.length -  2);
while (G__25934__i < G__25934__a.length) {G__25934__a[G__25934__i] = arguments[G__25934__i + 2]; ++G__25934__i;}
  more = new cljs.core.IndexedSeq(G__25934__a,0);
} 
return G__25933__delegate.call(this,x,y,more);};
G__25933.cljs$lang$maxFixedArity = 2;
G__25933.cljs$lang$applyTo = (function (arglist__25935){
var x = cljs.core.first(arglist__25935);
arglist__25935 = cljs.core.next(arglist__25935);
var y = cljs.core.first(arglist__25935);
var more = cljs.core.rest(arglist__25935);
return G__25933__delegate(x,y,more);
});
G__25933.cljs$core$IFn$_invoke$arity$variadic = G__25933__delegate;
return G__25933;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__25936 = null;
if (arguments.length > 2) {
var G__25937__i = 0, G__25937__a = new Array(arguments.length -  2);
while (G__25937__i < G__25937__a.length) {G__25937__a[G__25937__i] = arguments[G__25937__i + 2]; ++G__25937__i;}
G__25936 = new cljs.core.IndexedSeq(G__25937__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__25938__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__25938 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25939__i = 0, G__25939__a = new Array(arguments.length -  2);
while (G__25939__i < G__25939__a.length) {G__25939__a[G__25939__i] = arguments[G__25939__i + 2]; ++G__25939__i;}
  more = new cljs.core.IndexedSeq(G__25939__a,0);
} 
return G__25938__delegate.call(this,x,y,more);};
G__25938.cljs$lang$maxFixedArity = 2;
G__25938.cljs$lang$applyTo = (function (arglist__25940){
var x = cljs.core.first(arglist__25940);
arglist__25940 = cljs.core.next(arglist__25940);
var y = cljs.core.first(arglist__25940);
var more = cljs.core.rest(arglist__25940);
return G__25938__delegate(x,y,more);
});
G__25938.cljs$core$IFn$_invoke$arity$variadic = G__25938__delegate;
return G__25938;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__25941 = null;
if (arguments.length > 2) {
var G__25942__i = 0, G__25942__a = new Array(arguments.length -  2);
while (G__25942__i < G__25942__a.length) {G__25942__a[G__25942__i] = arguments[G__25942__i + 2]; ++G__25942__i;}
G__25941 = new cljs.core.IndexedSeq(G__25942__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__25945 = x;
var G__25946 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__25945,G__25946) : cljs.core.mod.call(null,G__25945,G__25946));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__25947__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__25947 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25948__i = 0, G__25948__a = new Array(arguments.length -  2);
while (G__25948__i < G__25948__a.length) {G__25948__a[G__25948__i] = arguments[G__25948__i + 2]; ++G__25948__i;}
  more = new cljs.core.IndexedSeq(G__25948__a,0);
} 
return G__25947__delegate.call(this,x,y,more);};
G__25947.cljs$lang$maxFixedArity = 2;
G__25947.cljs$lang$applyTo = (function (arglist__25949){
var x = cljs.core.first(arglist__25949);
arglist__25949 = cljs.core.next(arglist__25949);
var y = cljs.core.first(arglist__25949);
var more = cljs.core.rest(arglist__25949);
return G__25947__delegate(x,y,more);
});
G__25947.cljs$core$IFn$_invoke$arity$variadic = G__25947__delegate;
return G__25947;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__25950 = null;
if (arguments.length > 2) {
var G__25951__i = 0, G__25951__a = new Array(arguments.length -  2);
while (G__25951__i < G__25951__a.length) {G__25951__a[G__25951__i] = arguments[G__25951__i + 2]; ++G__25951__i;}
G__25950 = new cljs.core.IndexedSeq(G__25951__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__25952__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__25952 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25953__i = 0, G__25953__a = new Array(arguments.length -  2);
while (G__25953__i < G__25953__a.length) {G__25953__a[G__25953__i] = arguments[G__25953__i + 2]; ++G__25953__i;}
  more = new cljs.core.IndexedSeq(G__25953__a,0);
} 
return G__25952__delegate.call(this,x,y,more);};
G__25952.cljs$lang$maxFixedArity = 2;
G__25952.cljs$lang$applyTo = (function (arglist__25954){
var x = cljs.core.first(arglist__25954);
arglist__25954 = cljs.core.next(arglist__25954);
var y = cljs.core.first(arglist__25954);
var more = cljs.core.rest(arglist__25954);
return G__25952__delegate(x,y,more);
});
G__25952.cljs$core$IFn$_invoke$arity$variadic = G__25952__delegate;
return G__25952;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__25955 = null;
if (arguments.length > 2) {
var G__25956__i = 0, G__25956__a = new Array(arguments.length -  2);
while (G__25956__i < G__25956__a.length) {G__25956__a[G__25956__i] = arguments[G__25956__i + 2]; ++G__25956__i;}
G__25955 = new cljs.core.IndexedSeq(G__25956__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__25959 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25959) : Math.floor.call(null,G__25959));
} else {
var G__25960 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25960) : Math.ceil.call(null,G__25960));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__25961__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__25961 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25962__i = 0, G__25962__a = new Array(arguments.length -  2);
while (G__25962__i < G__25962__a.length) {G__25962__a[G__25962__i] = arguments[G__25962__i + 2]; ++G__25962__i;}
  more = new cljs.core.IndexedSeq(G__25962__a,0);
} 
return G__25961__delegate.call(this,x,y,more);};
G__25961.cljs$lang$maxFixedArity = 2;
G__25961.cljs$lang$applyTo = (function (arglist__25963){
var x = cljs.core.first(arglist__25963);
arglist__25963 = cljs.core.next(arglist__25963);
var y = cljs.core.first(arglist__25963);
var more = cljs.core.rest(arglist__25963);
return G__25961__delegate(x,y,more);
});
G__25961.cljs$core$IFn$_invoke$arity$variadic = G__25961__delegate;
return G__25961;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__25964 = null;
if (arguments.length > 2) {
var G__25965__i = 0, G__25965__a = new Array(arguments.length -  2);
while (G__25965__i < G__25965__a.length) {G__25965__a[G__25965__i] = arguments[G__25965__i + 2]; ++G__25965__i;}
G__25964 = new cljs.core.IndexedSeq(G__25965__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__25966__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__25966 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25967__i = 0, G__25967__a = new Array(arguments.length -  2);
while (G__25967__i < G__25967__a.length) {G__25967__a[G__25967__i] = arguments[G__25967__i + 2]; ++G__25967__i;}
  more = new cljs.core.IndexedSeq(G__25967__a,0);
} 
return G__25966__delegate.call(this,x,y,more);};
G__25966.cljs$lang$maxFixedArity = 2;
G__25966.cljs$lang$applyTo = (function (arglist__25968){
var x = cljs.core.first(arglist__25968);
arglist__25968 = cljs.core.next(arglist__25968);
var y = cljs.core.first(arglist__25968);
var more = cljs.core.rest(arglist__25968);
return G__25966__delegate(x,y,more);
});
G__25966.cljs$core$IFn$_invoke$arity$variadic = G__25966__delegate;
return G__25966;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__25969 = null;
if (arguments.length > 2) {
var G__25970__i = 0, G__25970__a = new Array(arguments.length -  2);
while (G__25970__i < G__25970__a.length) {G__25970__a[G__25970__i] = arguments[G__25970__i + 2]; ++G__25970__i;}
G__25969 = new cljs.core.IndexedSeq(G__25970__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__25971__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__25971 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25972__i = 0, G__25972__a = new Array(arguments.length -  2);
while (G__25972__i < G__25972__a.length) {G__25972__a[G__25972__i] = arguments[G__25972__i + 2]; ++G__25972__i;}
  more = new cljs.core.IndexedSeq(G__25972__a,0);
} 
return G__25971__delegate.call(this,x,y,more);};
G__25971.cljs$lang$maxFixedArity = 2;
G__25971.cljs$lang$applyTo = (function (arglist__25973){
var x = cljs.core.first(arglist__25973);
arglist__25973 = cljs.core.next(arglist__25973);
var y = cljs.core.first(arglist__25973);
var more = cljs.core.rest(arglist__25973);
return G__25971__delegate(x,y,more);
});
G__25971.cljs$core$IFn$_invoke$arity$variadic = G__25971__delegate;
return G__25971;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__25974 = null;
if (arguments.length > 2) {
var G__25975__i = 0, G__25975__a = new Array(arguments.length -  2);
while (G__25975__i < G__25975__a.length) {G__25975__a[G__25975__i] = arguments[G__25975__i + 2]; ++G__25975__i;}
G__25974 = new cljs.core.IndexedSeq(G__25975__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__25976__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__25976 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25977__i = 0, G__25977__a = new Array(arguments.length -  2);
while (G__25977__i < G__25977__a.length) {G__25977__a[G__25977__i] = arguments[G__25977__i + 2]; ++G__25977__i;}
  more = new cljs.core.IndexedSeq(G__25977__a,0);
} 
return G__25976__delegate.call(this,x,y,more);};
G__25976.cljs$lang$maxFixedArity = 2;
G__25976.cljs$lang$applyTo = (function (arglist__25978){
var x = cljs.core.first(arglist__25978);
arglist__25978 = cljs.core.next(arglist__25978);
var y = cljs.core.first(arglist__25978);
var more = cljs.core.rest(arglist__25978);
return G__25976__delegate(x,y,more);
});
G__25976.cljs$core$IFn$_invoke$arity$variadic = G__25976__delegate;
return G__25976;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__25979 = null;
if (arguments.length > 2) {
var G__25980__i = 0, G__25980__a = new Array(arguments.length -  2);
while (G__25980__i < G__25980__a.length) {G__25980__a[G__25980__i] = arguments[G__25980__i + 2]; ++G__25980__i;}
G__25979 = new cljs.core.IndexedSeq(G__25980__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__25985__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__25986 = y;
var G__25987 = cljs.core.first(more);
var G__25988 = cljs.core.next(more);
x = G__25986;
y = G__25987;
more = G__25988;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25985 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25989__i = 0, G__25989__a = new Array(arguments.length -  2);
while (G__25989__i < G__25989__a.length) {G__25989__a[G__25989__i] = arguments[G__25989__i + 2]; ++G__25989__i;}
  more = new cljs.core.IndexedSeq(G__25989__a,0);
} 
return G__25985__delegate.call(this,x,y,more);};
G__25985.cljs$lang$maxFixedArity = 2;
G__25985.cljs$lang$applyTo = (function (arglist__25990){
var x = cljs.core.first(arglist__25990);
arglist__25990 = cljs.core.next(arglist__25990);
var y = cljs.core.first(arglist__25990);
var more = cljs.core.rest(arglist__25990);
return G__25985__delegate(x,y,more);
});
G__25985.cljs$core$IFn$_invoke$arity$variadic = G__25985__delegate;
return G__25985;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__25991 = null;
if (arguments.length > 2) {
var G__25992__i = 0, G__25992__a = new Array(arguments.length -  2);
while (G__25992__i < G__25992__a.length) {G__25992__a[G__25992__i] = arguments[G__25992__i + 2]; ++G__25992__i;}
G__25991 = new cljs.core.IndexedSeq(G__25992__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__25993 = (n__$1 - (1));
var G__25994 = cljs.core.next(xs);
n__$1 = G__25993;
xs = G__25994;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__25998 = x;
return goog.string.buildString(G__25998);
}
});
var str__2 = (function() { 
var G__25999__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__26000 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__26001 = cljs.core.next(more);
sb = G__26000;
more = G__26001;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__25999 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__26002__i = 0, G__26002__a = new Array(arguments.length -  1);
while (G__26002__i < G__26002__a.length) {G__26002__a[G__26002__i] = arguments[G__26002__i + 1]; ++G__26002__i;}
  ys = new cljs.core.IndexedSeq(G__26002__a,0);
} 
return G__25999__delegate.call(this,x,ys);};
G__25999.cljs$lang$maxFixedArity = 1;
G__25999.cljs$lang$applyTo = (function (arglist__26003){
var x = cljs.core.first(arglist__26003);
var ys = cljs.core.rest(arglist__26003);
return G__25999__delegate(x,ys);
});
G__25999.cljs$core$IFn$_invoke$arity$variadic = G__25999__delegate;
return G__25999;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__26004 = null;
if (arguments.length > 1) {
var G__26005__i = 0, G__26005__a = new Array(arguments.length -  1);
while (G__26005__i < G__26005__a.length) {G__26005__a[G__26005__i] = arguments[G__26005__i + 1]; ++G__26005__i;}
G__26004 = new cljs.core.IndexedSeq(G__26005__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__26006 = cljs.core.next(xs);
var G__26007 = cljs.core.next(ys);
xs = G__26006;
ys = G__26007;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__26008 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__26009 = cljs.core.next(s);
res = G__26008;
s = G__26009;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__26014 = ((h + (cljs.core.hash((function (){var G__26012 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26012) : cljs.core.key.call(null,G__26012));
})()) ^ cljs.core.hash((function (){var G__26013 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26013) : cljs.core.val.call(null,G__26013));
})()))) % (4503599627370496));
var G__26015 = cljs.core.next(s);
h = G__26014;
s = G__26015;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__26016 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__26017 = cljs.core.next(s__$1);
h = G__26016;
s__$1 = G__26017;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__26028_26038 = cljs.core.seq(fn_map);
var chunk__26029_26039 = null;
var count__26030_26040 = (0);
var i__26031_26041 = (0);
while(true){
if((i__26031_26041 < count__26030_26040)){
var vec__26032_26042 = chunk__26029_26039.cljs$core$IIndexed$_nth$arity$2(null,i__26031_26041);
var key_name_26043 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26032_26042,(0),null);
var f_26044 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26032_26042,(1),null);
var str_name_26045 = (function (){var G__26033 = key_name_26043;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__26033) : cljs.core.name.call(null,G__26033));
})();
(obj[str_name_26045] = f_26044);

var G__26046 = seq__26028_26038;
var G__26047 = chunk__26029_26039;
var G__26048 = count__26030_26040;
var G__26049 = (i__26031_26041 + (1));
seq__26028_26038 = G__26046;
chunk__26029_26039 = G__26047;
count__26030_26040 = G__26048;
i__26031_26041 = G__26049;
continue;
} else {
var temp__4126__auto___26050 = cljs.core.seq(seq__26028_26038);
if(temp__4126__auto___26050){
var seq__26028_26051__$1 = temp__4126__auto___26050;
if(cljs.core.chunked_seq_QMARK_(seq__26028_26051__$1)){
var c__18742__auto___26052 = (function (){var G__26034 = seq__26028_26051__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__26034) : cljs.core.chunk_first.call(null,G__26034));
})();
var G__26053 = (function (){var G__26035 = seq__26028_26051__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__26035) : cljs.core.chunk_rest.call(null,G__26035));
})();
var G__26054 = c__18742__auto___26052;
var G__26055 = cljs.core.count(c__18742__auto___26052);
var G__26056 = (0);
seq__26028_26038 = G__26053;
chunk__26029_26039 = G__26054;
count__26030_26040 = G__26055;
i__26031_26041 = G__26056;
continue;
} else {
var vec__26036_26057 = cljs.core.first(seq__26028_26051__$1);
var key_name_26058 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26036_26057,(0),null);
var f_26059 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26036_26057,(1),null);
var str_name_26060 = (function (){var G__26037 = key_name_26058;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__26037) : cljs.core.name.call(null,G__26037));
})();
(obj[str_name_26060] = f_26059);

var G__26061 = cljs.core.next(seq__26028_26051__$1);
var G__26062 = null;
var G__26063 = (0);
var G__26064 = (0);
seq__26028_26038 = G__26061;
chunk__26029_26039 = G__26062;
count__26030_26040 = G__26063;
i__26031_26041 = G__26064;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__26066 = coll;
if(G__26066){
var bit__18636__auto__ = (G__26066.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__18636__auto__) || (G__26066.cljs$core$IReversible$)){
return true;
} else {
if((!G__26066.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__26066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__26066);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__26067 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__26067;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__26068 = (i - (1));
var G__26069 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__26068;
r = G__26069;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__26070__i = 0, G__26070__a = new Array(arguments.length -  0);
while (G__26070__i < G__26070__a.length) {G__26070__a[G__26070__i] = arguments[G__26070__i + 0]; ++G__26070__i;}
  xs = new cljs.core.IndexedSeq(G__26070__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__26071){
var xs = cljs.core.seq(arglist__26071);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__17955__auto__ = (coll == null);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var G__26075 = coll;
if(G__26075){
var bit__18629__auto__ = (G__26075.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18629__auto__) || (G__26075.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__26077 = x;
if(G__26077){
var bit__18636__auto__ = (G__26077.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__18636__auto__) || (G__26077.cljs$core$IList$)){
return true;
} else {
if((!G__26077.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__26077);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__26077);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17943__auto__ = cljs.core.not(a.ns);
if(and__17943__auto__){
return b.ns;
} else {
return and__17943__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__26084 = a.ns;
var G__26085 = b.ns;
return goog.array.defaultCompare(G__26084,G__26085);
})();
if(((0) === nsc)){
var G__26086 = a.name;
var G__26087 = b.name;
return goog.array.defaultCompare(G__26086,G__26087);
} else {
return nsc;
}
}
} else {
var G__26088 = a.name;
var G__26089 = b.name;
return goog.array.defaultCompare(G__26088,G__26089);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__18376__auto__ = self__._hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__26091 = null;
var G__26091__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__26091__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__26091 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__26091__2.call(this,self__,coll);
case 3:
return G__26091__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26091.cljs$core$IFn$_invoke$arity$2 = G__26091__2;
G__26091.cljs$core$IFn$_invoke$arity$3 = G__26091__3;
return G__26091;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args26090){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26090)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__26093 = x;
if(G__26093){
var bit__18629__auto__ = (G__26093.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18629__auto__) || (G__26093.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__26095 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__26095) : cljs.core.name.call(null,G__26095));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__26096 = ls.sval();
ls = G__26096;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__26098 = s;
if(G__26098){
var bit__18629__auto__ = (G__26098.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__18629__auto__) || (G__26098.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__26099 = cljs.core.next(s__$1);
s__$1 = G__26099;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_26100 = (0);
var xs_26101 = cljs.core.seq(coll);
while(true){
if(xs_26101){
(ret[i_26100] = cljs.core.to_array(cljs.core.first(xs_26101)));

var G__26102 = (i_26100 + (1));
var G__26103 = cljs.core.next(xs_26101);
i_26100 = G__26102;
xs_26101 = G__26103;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__26106 = (i + (1));
var G__26107 = cljs.core.next(s__$1);
i = G__26106;
s__$1 = G__26107;
continue;
} else {
return a;
}
break;
}
} else {
var n__18842__auto___26108 = size;
var i_26109 = (0);
while(true){
if((i_26109 < n__18842__auto___26108)){
(a[i_26109] = init_val_or_seq);

var G__26110 = (i_26109 + (1));
i_26109 = G__26110;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__26113 = (i + (1));
var G__26114 = cljs.core.next(s__$1);
i = G__26113;
s__$1 = G__26114;
continue;
} else {
return a;
}
break;
}
} else {
var n__18842__auto___26115 = size;
var i_26116 = (0);
while(true){
if((i_26116 < n__18842__auto___26115)){
(a[i_26116] = init_val_or_seq);

var G__26117 = (i_26116 + (1));
i_26116 = G__26117;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__26120 = (i + (1));
var G__26121 = cljs.core.next(s__$1);
i = G__26120;
s__$1 = G__26121;
continue;
} else {
return a;
}
break;
}
} else {
var n__18842__auto___26122 = size;
var i_26123 = (0);
while(true){
if((i_26123 < n__18842__auto___26122)){
(a[i_26123] = init_val_or_seq);

var G__26124 = (i_26123 + (1));
i_26123 = G__26124;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__26127 = (i + (1));
var G__26128 = cljs.core.next(s__$1);
i = G__26127;
s__$1 = G__26128;
continue;
} else {
return a;
}
break;
}
} else {
var n__18842__auto___26129 = size;
var i_26130 = (0);
while(true){
if((i_26130 < n__18842__auto___26129)){
(a[i_26130] = init_val_or_seq);

var G__26131 = (i_26130 + (1));
i_26130 = G__26131;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__26132 = cljs.core.next(s__$1);
var G__26133 = (i - (1));
var G__26134 = (sum + (1));
s__$1 = G__26132;
i = G__26133;
sum = G__26134;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__26154__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__26154 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__26155__i = 0, G__26155__a = new Array(arguments.length -  2);
while (G__26155__i < G__26155__a.length) {G__26155__a[G__26155__i] = arguments[G__26155__i + 2]; ++G__26155__i;}
  zs = new cljs.core.IndexedSeq(G__26155__a,0);
} 
return G__26154__delegate.call(this,x,y,zs);};
G__26154.cljs$lang$maxFixedArity = 2;
G__26154.cljs$lang$applyTo = (function (arglist__26156){
var x = cljs.core.first(arglist__26156);
arglist__26156 = cljs.core.next(arglist__26156);
var y = cljs.core.first(arglist__26156);
var zs = cljs.core.rest(arglist__26156);
return G__26154__delegate(x,y,zs);
});
G__26154.cljs$core$IFn$_invoke$arity$variadic = G__26154__delegate;
return G__26154;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__26157 = null;
if (arguments.length > 2) {
var G__26158__i = 0, G__26158__a = new Array(arguments.length -  2);
while (G__26158__i < G__26158__a.length) {G__26158__a[G__26158__i] = arguments[G__26158__i + 2]; ++G__26158__i;}
G__26157 = new cljs.core.IndexedSeq(G__26158__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__26159__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__26159 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__26160__i = 0, G__26160__a = new Array(arguments.length -  4);
while (G__26160__i < G__26160__a.length) {G__26160__a[G__26160__i] = arguments[G__26160__i + 4]; ++G__26160__i;}
  more = new cljs.core.IndexedSeq(G__26160__a,0);
} 
return G__26159__delegate.call(this,a,b,c,d,more);};
G__26159.cljs$lang$maxFixedArity = 4;
G__26159.cljs$lang$applyTo = (function (arglist__26161){
var a = cljs.core.first(arglist__26161);
arglist__26161 = cljs.core.next(arglist__26161);
var b = cljs.core.first(arglist__26161);
arglist__26161 = cljs.core.next(arglist__26161);
var c = cljs.core.first(arglist__26161);
arglist__26161 = cljs.core.next(arglist__26161);
var d = cljs.core.first(arglist__26161);
var more = cljs.core.rest(arglist__26161);
return G__26159__delegate(a,b,c,d,more);
});
G__26159.cljs$core$IFn$_invoke$arity$variadic = G__26159__delegate;
return G__26159;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__26162 = null;
if (arguments.length > 4) {
var G__26163__i = 0, G__26163__a = new Array(arguments.length -  4);
while (G__26163__i < G__26163__a.length) {G__26163__a[G__26163__i] = arguments[G__26163__i + 4]; ++G__26163__i;}
G__26162 = new cljs.core.IndexedSeq(G__26163__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__26162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__26164__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__26165 = ntcoll;
var G__26166 = cljs.core.first(vals);
var G__26167 = cljs.core.next(vals);
tcoll = G__26165;
val = G__26166;
vals = G__26167;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__26164 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__26168__i = 0, G__26168__a = new Array(arguments.length -  2);
while (G__26168__i < G__26168__a.length) {G__26168__a[G__26168__i] = arguments[G__26168__i + 2]; ++G__26168__i;}
  vals = new cljs.core.IndexedSeq(G__26168__a,0);
} 
return G__26164__delegate.call(this,tcoll,val,vals);};
G__26164.cljs$lang$maxFixedArity = 2;
G__26164.cljs$lang$applyTo = (function (arglist__26169){
var tcoll = cljs.core.first(arglist__26169);
arglist__26169 = cljs.core.next(arglist__26169);
var val = cljs.core.first(arglist__26169);
var vals = cljs.core.rest(arglist__26169);
return G__26164__delegate(tcoll,val,vals);
});
G__26164.cljs$core$IFn$_invoke$arity$variadic = G__26164__delegate;
return G__26164;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__26170 = null;
if (arguments.length > 2) {
var G__26171__i = 0, G__26171__a = new Array(arguments.length -  2);
while (G__26171__i < G__26171__a.length) {G__26171__a[G__26171__i] = arguments[G__26171__i + 2]; ++G__26171__i;}
G__26170 = new cljs.core.IndexedSeq(G__26171__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__26170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__26172__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__26173 = ntcoll;
var G__26174 = cljs.core.first(kvs);
var G__26175 = cljs.core.second(kvs);
var G__26176 = cljs.core.nnext(kvs);
tcoll = G__26173;
key = G__26174;
val = G__26175;
kvs = G__26176;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__26172 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__26177__i = 0, G__26177__a = new Array(arguments.length -  3);
while (G__26177__i < G__26177__a.length) {G__26177__a[G__26177__i] = arguments[G__26177__i + 3]; ++G__26177__i;}
  kvs = new cljs.core.IndexedSeq(G__26177__a,0);
} 
return G__26172__delegate.call(this,tcoll,key,val,kvs);};
G__26172.cljs$lang$maxFixedArity = 3;
G__26172.cljs$lang$applyTo = (function (arglist__26178){
var tcoll = cljs.core.first(arglist__26178);
arglist__26178 = cljs.core.next(arglist__26178);
var key = cljs.core.first(arglist__26178);
arglist__26178 = cljs.core.next(arglist__26178);
var val = cljs.core.first(arglist__26178);
var kvs = cljs.core.rest(arglist__26178);
return G__26172__delegate(tcoll,key,val,kvs);
});
G__26172.cljs$core$IFn$_invoke$arity$variadic = G__26172__delegate;
return G__26172;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__26179 = null;
if (arguments.length > 3) {
var G__26180__i = 0, G__26180__a = new Array(arguments.length -  3);
while (G__26180__i < G__26180__a.length) {G__26180__a[G__26180__i] = arguments[G__26180__i + 3]; ++G__26180__i;}
G__26179 = new cljs.core.IndexedSeq(G__26180__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__26179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__26181__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__26182 = ntcoll;
var G__26183 = cljs.core.first(ks);
var G__26184 = cljs.core.next(ks);
tcoll = G__26182;
key = G__26183;
ks = G__26184;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__26181 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__26185__i = 0, G__26185__a = new Array(arguments.length -  2);
while (G__26185__i < G__26185__a.length) {G__26185__a[G__26185__i] = arguments[G__26185__i + 2]; ++G__26185__i;}
  ks = new cljs.core.IndexedSeq(G__26185__a,0);
} 
return G__26181__delegate.call(this,tcoll,key,ks);};
G__26181.cljs$lang$maxFixedArity = 2;
G__26181.cljs$lang$applyTo = (function (arglist__26186){
var tcoll = cljs.core.first(arglist__26186);
arglist__26186 = cljs.core.next(arglist__26186);
var key = cljs.core.first(arglist__26186);
var ks = cljs.core.rest(arglist__26186);
return G__26181__delegate(tcoll,key,ks);
});
G__26181.cljs$core$IFn$_invoke$arity$variadic = G__26181__delegate;
return G__26181;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__26187 = null;
if (arguments.length > 2) {
var G__26188__i = 0, G__26188__a = new Array(arguments.length -  2);
while (G__26188__i < G__26188__a.length) {G__26188__a[G__26188__i] = arguments[G__26188__i + 2]; ++G__26188__i;}
G__26187 = new cljs.core.IndexedSeq(G__26188__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__26187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__26189__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__26190 = ntcoll;
var G__26191 = cljs.core.first(vals);
var G__26192 = cljs.core.next(vals);
tcoll = G__26190;
val = G__26191;
vals = G__26192;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__26189 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__26193__i = 0, G__26193__a = new Array(arguments.length -  2);
while (G__26193__i < G__26193__a.length) {G__26193__a[G__26193__i] = arguments[G__26193__i + 2]; ++G__26193__i;}
  vals = new cljs.core.IndexedSeq(G__26193__a,0);
} 
return G__26189__delegate.call(this,tcoll,val,vals);};
G__26189.cljs$lang$maxFixedArity = 2;
G__26189.cljs$lang$applyTo = (function (arglist__26194){
var tcoll = cljs.core.first(arglist__26194);
arglist__26194 = cljs.core.next(arglist__26194);
var val = cljs.core.first(arglist__26194);
var vals = cljs.core.rest(arglist__26194);
return G__26189__delegate(tcoll,val,vals);
});
G__26189.cljs$core$IFn$_invoke$arity$variadic = G__26189__delegate;
return G__26189;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__26195 = null;
if (arguments.length > 2) {
var G__26196__i = 0, G__26196__a = new Array(arguments.length -  2);
while (G__26196__i < G__26196__a.length) {G__26196__a[G__26196__i] = arguments[G__26196__i + 2]; ++G__26196__i;}
G__26195 = new cljs.core.IndexedSeq(G__26196__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__26195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a18886 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a18886);
} else {
var G__26407 = a18886;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26407) : f.call(null,G__26407));
}
} else {
var b18887 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a18886,b18887);
} else {
var G__26408 = a18886;
var G__26409 = b18887;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26408,G__26409) : f.call(null,G__26408,G__26409));
}
} else {
var c18888 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a18886,b18887,c18888);
} else {
var G__26410 = a18886;
var G__26411 = b18887;
var G__26412 = c18888;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26410,G__26411,G__26412) : f.call(null,G__26410,G__26411,G__26412));
}
} else {
var d18889 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a18886,b18887,c18888,d18889);
} else {
var G__26413 = a18886;
var G__26414 = b18887;
var G__26415 = c18888;
var G__26416 = d18889;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26413,G__26414,G__26415,G__26416) : f.call(null,G__26413,G__26414,G__26415,G__26416));
}
} else {
var e18890 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a18886,b18887,c18888,d18889,e18890);
} else {
var G__26417 = a18886;
var G__26418 = b18887;
var G__26419 = c18888;
var G__26420 = d18889;
var G__26421 = e18890;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26417,G__26418,G__26419,G__26420,G__26421) : f.call(null,G__26417,G__26418,G__26419,G__26420,G__26421));
}
} else {
var f18891 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a18886,b18887,c18888,d18889,e18890,f18891);
} else {
var G__26422 = a18886;
var G__26423 = b18887;
var G__26424 = c18888;
var G__26425 = d18889;
var G__26426 = e18890;
var G__26427 = f18891;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26422,G__26423,G__26424,G__26425,G__26426,G__26427) : f.call(null,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427));
}
} else {
var g18892 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a18886,b18887,c18888,d18889,e18890,f18891,g18892);
} else {
var G__26428 = a18886;
var G__26429 = b18887;
var G__26430 = c18888;
var G__26431 = d18889;
var G__26432 = e18890;
var G__26433 = f18891;
var G__26434 = g18892;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__26428,G__26429,G__26430,G__26431,G__26432,G__26433,G__26434) : f.call(null,G__26428,G__26429,G__26430,G__26431,G__26432,G__26433,G__26434));
}
} else {
var h18893 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893);
} else {
var G__26435 = a18886;
var G__26436 = b18887;
var G__26437 = c18888;
var G__26438 = d18889;
var G__26439 = e18890;
var G__26440 = f18891;
var G__26441 = g18892;
var G__26442 = h18893;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442) : f.call(null,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442));
}
} else {
var i18894 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894);
} else {
var G__26443 = a18886;
var G__26444 = b18887;
var G__26445 = c18888;
var G__26446 = d18889;
var G__26447 = e18890;
var G__26448 = f18891;
var G__26449 = g18892;
var G__26450 = h18893;
var G__26451 = i18894;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__26443,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451) : f.call(null,G__26443,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451));
}
} else {
var j18895 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895);
} else {
var G__26452 = a18886;
var G__26453 = b18887;
var G__26454 = c18888;
var G__26455 = d18889;
var G__26456 = e18890;
var G__26457 = f18891;
var G__26458 = g18892;
var G__26459 = h18893;
var G__26460 = i18894;
var G__26461 = j18895;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__26452,G__26453,G__26454,G__26455,G__26456,G__26457,G__26458,G__26459,G__26460,G__26461) : f.call(null,G__26452,G__26453,G__26454,G__26455,G__26456,G__26457,G__26458,G__26459,G__26460,G__26461));
}
} else {
var k18896 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896);
} else {
var G__26462 = a18886;
var G__26463 = b18887;
var G__26464 = c18888;
var G__26465 = d18889;
var G__26466 = e18890;
var G__26467 = f18891;
var G__26468 = g18892;
var G__26469 = h18893;
var G__26470 = i18894;
var G__26471 = j18895;
var G__26472 = k18896;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__26462,G__26463,G__26464,G__26465,G__26466,G__26467,G__26468,G__26469,G__26470,G__26471,G__26472) : f.call(null,G__26462,G__26463,G__26464,G__26465,G__26466,G__26467,G__26468,G__26469,G__26470,G__26471,G__26472));
}
} else {
var l18897 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897);
} else {
var G__26473 = a18886;
var G__26474 = b18887;
var G__26475 = c18888;
var G__26476 = d18889;
var G__26477 = e18890;
var G__26478 = f18891;
var G__26479 = g18892;
var G__26480 = h18893;
var G__26481 = i18894;
var G__26482 = j18895;
var G__26483 = k18896;
var G__26484 = l18897;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479,G__26480,G__26481,G__26482,G__26483,G__26484) : f.call(null,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479,G__26480,G__26481,G__26482,G__26483,G__26484));
}
} else {
var m18898 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898);
} else {
var G__26485 = a18886;
var G__26486 = b18887;
var G__26487 = c18888;
var G__26488 = d18889;
var G__26489 = e18890;
var G__26490 = f18891;
var G__26491 = g18892;
var G__26492 = h18893;
var G__26493 = i18894;
var G__26494 = j18895;
var G__26495 = k18896;
var G__26496 = l18897;
var G__26497 = m18898;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__26485,G__26486,G__26487,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497) : f.call(null,G__26485,G__26486,G__26487,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497));
}
} else {
var n18899 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899);
} else {
var G__26498 = a18886;
var G__26499 = b18887;
var G__26500 = c18888;
var G__26501 = d18889;
var G__26502 = e18890;
var G__26503 = f18891;
var G__26504 = g18892;
var G__26505 = h18893;
var G__26506 = i18894;
var G__26507 = j18895;
var G__26508 = k18896;
var G__26509 = l18897;
var G__26510 = m18898;
var G__26511 = n18899;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__26498,G__26499,G__26500,G__26501,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511) : f.call(null,G__26498,G__26499,G__26500,G__26501,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511));
}
} else {
var o18900 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899,o18900);
} else {
var G__26512 = a18886;
var G__26513 = b18887;
var G__26514 = c18888;
var G__26515 = d18889;
var G__26516 = e18890;
var G__26517 = f18891;
var G__26518 = g18892;
var G__26519 = h18893;
var G__26520 = i18894;
var G__26521 = j18895;
var G__26522 = k18896;
var G__26523 = l18897;
var G__26524 = m18898;
var G__26525 = n18899;
var G__26526 = o18900;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__26512,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523,G__26524,G__26525,G__26526) : f.call(null,G__26512,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523,G__26524,G__26525,G__26526));
}
} else {
var p18901 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899,o18900,p18901);
} else {
var G__26527 = a18886;
var G__26528 = b18887;
var G__26529 = c18888;
var G__26530 = d18889;
var G__26531 = e18890;
var G__26532 = f18891;
var G__26533 = g18892;
var G__26534 = h18893;
var G__26535 = i18894;
var G__26536 = j18895;
var G__26537 = k18896;
var G__26538 = l18897;
var G__26539 = m18898;
var G__26540 = n18899;
var G__26541 = o18900;
var G__26542 = p18901;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__26527,G__26528,G__26529,G__26530,G__26531,G__26532,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541,G__26542) : f.call(null,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541,G__26542));
}
} else {
var q18902 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899,o18900,p18901,q18902);
} else {
var G__26543 = a18886;
var G__26544 = b18887;
var G__26545 = c18888;
var G__26546 = d18889;
var G__26547 = e18890;
var G__26548 = f18891;
var G__26549 = g18892;
var G__26550 = h18893;
var G__26551 = i18894;
var G__26552 = j18895;
var G__26553 = k18896;
var G__26554 = l18897;
var G__26555 = m18898;
var G__26556 = n18899;
var G__26557 = o18900;
var G__26558 = p18901;
var G__26559 = q18902;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550,G__26551,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559) : f.call(null,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550,G__26551,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559));
}
} else {
var r18903 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899,o18900,p18901,q18902,r18903);
} else {
var G__26560 = a18886;
var G__26561 = b18887;
var G__26562 = c18888;
var G__26563 = d18889;
var G__26564 = e18890;
var G__26565 = f18891;
var G__26566 = g18892;
var G__26567 = h18893;
var G__26568 = i18894;
var G__26569 = j18895;
var G__26570 = k18896;
var G__26571 = l18897;
var G__26572 = m18898;
var G__26573 = n18899;
var G__26574 = o18900;
var G__26575 = p18901;
var G__26576 = q18902;
var G__26577 = r18903;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__26560,G__26561,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575,G__26576,G__26577) : f.call(null,G__26560,G__26561,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575,G__26576,G__26577));
}
} else {
var s18904 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899,o18900,p18901,q18902,r18903,s18904);
} else {
var G__26578 = a18886;
var G__26579 = b18887;
var G__26580 = c18888;
var G__26581 = d18889;
var G__26582 = e18890;
var G__26583 = f18891;
var G__26584 = g18892;
var G__26585 = h18893;
var G__26586 = i18894;
var G__26587 = j18895;
var G__26588 = k18896;
var G__26589 = l18897;
var G__26590 = m18898;
var G__26591 = n18899;
var G__26592 = o18900;
var G__26593 = p18901;
var G__26594 = q18902;
var G__26595 = r18903;
var G__26596 = s18904;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596) : f.call(null,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596));
}
} else {
var t18905 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a18886,b18887,c18888,d18889,e18890,f18891,g18892,h18893,i18894,j18895,k18896,l18897,m18898,n18899,o18900,p18901,q18902,r18903,s18904,t18905);
} else {
var G__26597 = a18886;
var G__26598 = b18887;
var G__26599 = c18888;
var G__26600 = d18889;
var G__26601 = e18890;
var G__26602 = f18891;
var G__26603 = g18892;
var G__26604 = h18893;
var G__26605 = i18894;
var G__26606 = j18895;
var G__26607 = k18896;
var G__26608 = l18897;
var G__26609 = m18898;
var G__26610 = n18899;
var G__26611 = o18900;
var G__26612 = p18901;
var G__26613 = q18902;
var G__26614 = r18903;
var G__26615 = s18904;
var G__26616 = t18905;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616) : f.call(null,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__26617__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__26617 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__26618__i = 0, G__26618__a = new Array(arguments.length -  5);
while (G__26618__i < G__26618__a.length) {G__26618__a[G__26618__i] = arguments[G__26618__i + 5]; ++G__26618__i;}
  args = new cljs.core.IndexedSeq(G__26618__a,0);
} 
return G__26617__delegate.call(this,f,a,b,c,d,args);};
G__26617.cljs$lang$maxFixedArity = 5;
G__26617.cljs$lang$applyTo = (function (arglist__26619){
var f = cljs.core.first(arglist__26619);
arglist__26619 = cljs.core.next(arglist__26619);
var a = cljs.core.first(arglist__26619);
arglist__26619 = cljs.core.next(arglist__26619);
var b = cljs.core.first(arglist__26619);
arglist__26619 = cljs.core.next(arglist__26619);
var c = cljs.core.first(arglist__26619);
arglist__26619 = cljs.core.next(arglist__26619);
var d = cljs.core.first(arglist__26619);
var args = cljs.core.rest(arglist__26619);
return G__26617__delegate(f,a,b,c,d,args);
});
G__26617.cljs$core$IFn$_invoke$arity$variadic = G__26617__delegate;
return G__26617;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__26620 = null;
if (arguments.length > 5) {
var G__26621__i = 0, G__26621__a = new Array(arguments.length -  5);
while (G__26621__i < G__26621__a.length) {G__26621__a[G__26621__i] = arguments[G__26621__i + 5]; ++G__26621__i;}
G__26620 = new cljs.core.IndexedSeq(G__26621__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__26620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__26637 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26637) : f.call(null,G__26637));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__26638 = cljs.core.meta(obj);
var G__26639 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26638,G__26639) : f.call(null,G__26638,G__26639));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__26640 = cljs.core.meta(obj);
var G__26641 = a;
var G__26642 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26640,G__26641,G__26642) : f.call(null,G__26640,G__26641,G__26642));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__26643 = cljs.core.meta(obj);
var G__26644 = a;
var G__26645 = b;
var G__26646 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26643,G__26644,G__26645,G__26646) : f.call(null,G__26643,G__26644,G__26645,G__26646));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__26647 = cljs.core.meta(obj);
var G__26648 = a;
var G__26649 = b;
var G__26650 = c;
var G__26651 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26647,G__26648,G__26649,G__26650,G__26651) : f.call(null,G__26647,G__26648,G__26649,G__26650,G__26651));
})());
});
var vary_meta__7 = (function() { 
var G__26652__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__26652 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__26653__i = 0, G__26653__a = new Array(arguments.length -  6);
while (G__26653__i < G__26653__a.length) {G__26653__a[G__26653__i] = arguments[G__26653__i + 6]; ++G__26653__i;}
  args = new cljs.core.IndexedSeq(G__26653__a,0);
} 
return G__26652__delegate.call(this,obj,f,a,b,c,d,args);};
G__26652.cljs$lang$maxFixedArity = 6;
G__26652.cljs$lang$applyTo = (function (arglist__26654){
var obj = cljs.core.first(arglist__26654);
arglist__26654 = cljs.core.next(arglist__26654);
var f = cljs.core.first(arglist__26654);
arglist__26654 = cljs.core.next(arglist__26654);
var a = cljs.core.first(arglist__26654);
arglist__26654 = cljs.core.next(arglist__26654);
var b = cljs.core.first(arglist__26654);
arglist__26654 = cljs.core.next(arglist__26654);
var c = cljs.core.first(arglist__26654);
arglist__26654 = cljs.core.next(arglist__26654);
var d = cljs.core.first(arglist__26654);
var args = cljs.core.rest(arglist__26654);
return G__26652__delegate(obj,f,a,b,c,d,args);
});
G__26652.cljs$core$IFn$_invoke$arity$variadic = G__26652__delegate;
return G__26652;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__26655 = null;
if (arguments.length > 6) {
var G__26656__i = 0, G__26656__a = new Array(arguments.length -  6);
while (G__26656__i < G__26656__a.length) {G__26656__a[G__26656__i] = arguments[G__26656__i + 6]; ++G__26656__i;}
G__26655 = new cljs.core.IndexedSeq(G__26656__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__26655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__26657__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__26657 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__26658__i = 0, G__26658__a = new Array(arguments.length -  2);
while (G__26658__i < G__26658__a.length) {G__26658__a[G__26658__i] = arguments[G__26658__i + 2]; ++G__26658__i;}
  more = new cljs.core.IndexedSeq(G__26658__a,0);
} 
return G__26657__delegate.call(this,x,y,more);};
G__26657.cljs$lang$maxFixedArity = 2;
G__26657.cljs$lang$applyTo = (function (arglist__26659){
var x = cljs.core.first(arglist__26659);
arglist__26659 = cljs.core.next(arglist__26659);
var y = cljs.core.first(arglist__26659);
var more = cljs.core.rest(arglist__26659);
return G__26657__delegate(x,y,more);
});
G__26657.cljs$core$IFn$_invoke$arity$variadic = G__26657__delegate;
return G__26657;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__26660 = null;
if (arguments.length > 2) {
var G__26661__i = 0, G__26661__a = new Array(arguments.length -  2);
while (G__26661__i < G__26661__a.length) {G__26661__a[G__26661__i] = arguments[G__26661__i + 2]; ++G__26661__i;}
G__26660 = new cljs.core.IndexedSeq(G__26661__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t26665 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t26665 = (function (nil_iter,meta26666){
this.nil_iter = nil_iter;
this.meta26666 = meta26666;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t26665.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t26665.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t26665.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t26665.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_26667){
var self__ = this;
var _26667__$1 = this;
return self__.meta26666;
});

cljs.core.t26665.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_26667,meta26666__$1){
var self__ = this;
var _26667__$1 = this;
return (new cljs.core.t26665(self__.nil_iter,meta26666__$1));
});

cljs.core.t26665.cljs$lang$type = true;

cljs.core.t26665.cljs$lang$ctorStr = "cljs.core/t26665";

cljs.core.t26665.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/t26665");
});

cljs.core.__GT_t26665 = (function __GT_t26665(nil_iter__$1,meta26666){
return (new cljs.core.t26665(nil_iter__$1,meta26666));
});

}

return (new cljs.core.t26665(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/mnt/data/projects/vita/resources/public/app/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17943__auto__ = !((lt.stepper == null));
if(and__17943__auto__){
return self__.iter.hasNext();
} else {
return and__17943__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__26668 = lt;
var G__26669 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__26668,G__26669) : self__.xform.call(null,G__26668,G__26669));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26670 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26670) : self__.xform.call(null,G__26670));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__26672 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26672) : xform.call(null,G__26672));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__26674 = cljs.core.next(iters__$1);
iters__$1 = G__26674;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__18842__auto___26675 = self__.iters.length;
var i_26676 = (0);
while(true){
if((i_26676 < n__18842__auto___26675)){
(self__.nexts[i_26676] = (self__.iters[i_26676]).next());

var G__26677 = (i_26676 + (1));
i_26676 = G__26677;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17943__auto__ = !((lt.stepper == null));
if(and__17943__auto__){
return this$.hasNext();
} else {
return and__17943__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26673 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26673) : self__.xform.call(null,G__26673));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__26682 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26682) : xform.call(null,G__26682));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__26683_26687 = cljs.core.seq(colls);
var chunk__26684_26688 = null;
var count__26685_26689 = (0);
var i__26686_26690 = (0);
while(true){
if((i__26686_26690 < count__26685_26689)){
var coll_26691 = chunk__26684_26688.cljs$core$IIndexed$_nth$arity$2(null,i__26686_26690);
iters.push(cljs.core.iter(coll_26691));

var G__26692 = seq__26683_26687;
var G__26693 = chunk__26684_26688;
var G__26694 = count__26685_26689;
var G__26695 = (i__26686_26690 + (1));
seq__26683_26687 = G__26692;
chunk__26684_26688 = G__26693;
count__26685_26689 = G__26694;
i__26686_26690 = G__26695;
continue;
} else {
var temp__4126__auto___26696 = cljs.core.seq(seq__26683_26687);
if(temp__4126__auto___26696){
var seq__26683_26697__$1 = temp__4126__auto___26696;
if(cljs.core.chunked_seq_QMARK_(seq__26683_26697__$1)){
var c__18742__auto___26698 = cljs.core.chunk_first(seq__26683_26697__$1);
var G__26699 = cljs.core.chunk_rest(seq__26683_26697__$1);
var G__26700 = c__18742__auto___26698;
var G__26701 = cljs.core.count(c__18742__auto___26698);
var G__26702 = (0);
seq__26683_26687 = G__26699;
chunk__26684_26688 = G__26700;
count__26685_26689 = G__26701;
i__26686_26690 = G__26702;
continue;
} else {
var coll_26703 = cljs.core.first(seq__26683_26697__$1);
iters.push(cljs.core.iter(coll_26703));

var G__26704 = cljs.core.next(seq__26683_26697__$1);
var G__26705 = null;
var G__26706 = (0);
var G__26707 = (0);
seq__26683_26687 = G__26704;
chunk__26684_26688 = G__26705;
count__26685_26689 = G__26706;
i__26686_26690 = G__26707;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__17955__auto__ = cljs.core.seq(coll);
if(or__17955__auto__){
return or__17955__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__26708__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__26708 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26709__i = 0, G__26709__a = new Array(arguments.length -  2);
while (G__26709__i < G__26709__a.length) {G__26709__a[G__26709__i] = arguments[G__26709__i + 2]; ++G__26709__i;}
  colls = new cljs.core.IndexedSeq(G__26709__a,0);
} 
return G__26708__delegate.call(this,xform,coll,colls);};
G__26708.cljs$lang$maxFixedArity = 2;
G__26708.cljs$lang$applyTo = (function (arglist__26710){
var xform = cljs.core.first(arglist__26710);
arglist__26710 = cljs.core.next(arglist__26710);
var coll = cljs.core.first(arglist__26710);
var colls = cljs.core.rest(arglist__26710);
return G__26708__delegate(xform,coll,colls);
});
G__26708.cljs$core$IFn$_invoke$arity$variadic = G__26708__delegate;
return G__26708;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__26711 = null;
if (arguments.length > 2) {
var G__26712__i = 0, G__26712__a = new Array(arguments.length -  2);
while (G__26712__i < G__26712__a.length) {G__26712__a[G__26712__i] = arguments[G__26712__i + 2]; ++G__26712__i;}
G__26711 = new cljs.core.IndexedSeq(G__26712__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__26711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__26714 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26714) : pred.call(null,G__26714));
})())){
var G__26715 = pred;
var G__26716 = cljs.core.next(coll);
pred = G__26715;
coll = G__26716;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__17955__auto__ = (function (){var G__26720 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26720) : pred.call(null,G__26720));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var G__26721 = pred;
var G__26722 = cljs.core.next(coll);
pred = G__26721;
coll = G__26722;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__26729 = null;
var G__26729__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__26729__1 = (function (x){
return cljs.core.not((function (){var G__26726 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26726) : f.call(null,G__26726));
})());
});
var G__26729__2 = (function (x,y){
return cljs.core.not((function (){var G__26727 = x;
var G__26728 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26727,G__26728) : f.call(null,G__26727,G__26728));
})());
});
var G__26729__3 = (function() { 
var G__26730__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__26730 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__26731__i = 0, G__26731__a = new Array(arguments.length -  2);
while (G__26731__i < G__26731__a.length) {G__26731__a[G__26731__i] = arguments[G__26731__i + 2]; ++G__26731__i;}
  zs = new cljs.core.IndexedSeq(G__26731__a,0);
} 
return G__26730__delegate.call(this,x,y,zs);};
G__26730.cljs$lang$maxFixedArity = 2;
G__26730.cljs$lang$applyTo = (function (arglist__26732){
var x = cljs.core.first(arglist__26732);
arglist__26732 = cljs.core.next(arglist__26732);
var y = cljs.core.first(arglist__26732);
var zs = cljs.core.rest(arglist__26732);
return G__26730__delegate(x,y,zs);
});
G__26730.cljs$core$IFn$_invoke$arity$variadic = G__26730__delegate;
return G__26730;
})()
;
G__26729 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__26729__0.call(this);
case 1:
return G__26729__1.call(this,x);
case 2:
return G__26729__2.call(this,x,y);
default:
var G__26733 = null;
if (arguments.length > 2) {
var G__26734__i = 0, G__26734__a = new Array(arguments.length -  2);
while (G__26734__i < G__26734__a.length) {G__26734__a[G__26734__i] = arguments[G__26734__i + 2]; ++G__26734__i;}
G__26733 = new cljs.core.IndexedSeq(G__26734__a,0);
}
return G__26729__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26729.cljs$lang$maxFixedArity = 2;
G__26729.cljs$lang$applyTo = G__26729__3.cljs$lang$applyTo;
G__26729.cljs$core$IFn$_invoke$arity$0 = G__26729__0;
G__26729.cljs$core$IFn$_invoke$arity$1 = G__26729__1;
G__26729.cljs$core$IFn$_invoke$arity$2 = G__26729__2;
G__26729.cljs$core$IFn$_invoke$arity$variadic = G__26729__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26729;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__26735__delegate = function (args){
return x;
};
var G__26735 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26736__i = 0, G__26736__a = new Array(arguments.length -  0);
while (G__26736__i < G__26736__a.length) {G__26736__a[G__26736__i] = arguments[G__26736__i + 0]; ++G__26736__i;}
  args = new cljs.core.IndexedSeq(G__26736__a,0);
} 
return G__26735__delegate.call(this,args);};
G__26735.cljs$lang$maxFixedArity = 0;
G__26735.cljs$lang$applyTo = (function (arglist__26737){
var args = cljs.core.seq(arglist__26737);
return G__26735__delegate(args);
});
G__26735.cljs$core$IFn$_invoke$arity$variadic = G__26735__delegate;
return G__26735;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__26792 = null;
var G__26792__0 = (function (){
var G__26765 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26765) : f.call(null,G__26765));
});
var G__26792__1 = (function (x){
var G__26766 = (function (){var G__26767 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26767) : g.call(null,G__26767));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26766) : f.call(null,G__26766));
});
var G__26792__2 = (function (x,y){
var G__26768 = (function (){var G__26769 = x;
var G__26770 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__26769,G__26770) : g.call(null,G__26769,G__26770));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26768) : f.call(null,G__26768));
});
var G__26792__3 = (function (x,y,z){
var G__26771 = (function (){var G__26772 = x;
var G__26773 = y;
var G__26774 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__26772,G__26773,G__26774) : g.call(null,G__26772,G__26773,G__26774));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26771) : f.call(null,G__26771));
});
var G__26792__4 = (function() { 
var G__26793__delegate = function (x,y,z,args){
var G__26775 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26775) : f.call(null,G__26775));
};
var G__26793 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26794__i = 0, G__26794__a = new Array(arguments.length -  3);
while (G__26794__i < G__26794__a.length) {G__26794__a[G__26794__i] = arguments[G__26794__i + 3]; ++G__26794__i;}
  args = new cljs.core.IndexedSeq(G__26794__a,0);
} 
return G__26793__delegate.call(this,x,y,z,args);};
G__26793.cljs$lang$maxFixedArity = 3;
G__26793.cljs$lang$applyTo = (function (arglist__26795){
var x = cljs.core.first(arglist__26795);
arglist__26795 = cljs.core.next(arglist__26795);
var y = cljs.core.first(arglist__26795);
arglist__26795 = cljs.core.next(arglist__26795);
var z = cljs.core.first(arglist__26795);
var args = cljs.core.rest(arglist__26795);
return G__26793__delegate(x,y,z,args);
});
G__26793.cljs$core$IFn$_invoke$arity$variadic = G__26793__delegate;
return G__26793;
})()
;
G__26792 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26792__0.call(this);
case 1:
return G__26792__1.call(this,x);
case 2:
return G__26792__2.call(this,x,y);
case 3:
return G__26792__3.call(this,x,y,z);
default:
var G__26796 = null;
if (arguments.length > 3) {
var G__26797__i = 0, G__26797__a = new Array(arguments.length -  3);
while (G__26797__i < G__26797__a.length) {G__26797__a[G__26797__i] = arguments[G__26797__i + 3]; ++G__26797__i;}
G__26796 = new cljs.core.IndexedSeq(G__26797__a,0);
}
return G__26792__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26792.cljs$lang$maxFixedArity = 3;
G__26792.cljs$lang$applyTo = G__26792__4.cljs$lang$applyTo;
G__26792.cljs$core$IFn$_invoke$arity$0 = G__26792__0;
G__26792.cljs$core$IFn$_invoke$arity$1 = G__26792__1;
G__26792.cljs$core$IFn$_invoke$arity$2 = G__26792__2;
G__26792.cljs$core$IFn$_invoke$arity$3 = G__26792__3;
G__26792.cljs$core$IFn$_invoke$arity$variadic = G__26792__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26792;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__26798 = null;
var G__26798__0 = (function (){
var G__26776 = (function (){var G__26777 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26777) : g.call(null,G__26777));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26776) : f.call(null,G__26776));
});
var G__26798__1 = (function (x){
var G__26778 = (function (){var G__26779 = (function (){var G__26780 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__26780) : h.call(null,G__26780));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26779) : g.call(null,G__26779));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26778) : f.call(null,G__26778));
});
var G__26798__2 = (function (x,y){
var G__26781 = (function (){var G__26782 = (function (){var G__26783 = x;
var G__26784 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__26783,G__26784) : h.call(null,G__26783,G__26784));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26782) : g.call(null,G__26782));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26781) : f.call(null,G__26781));
});
var G__26798__3 = (function (x,y,z){
var G__26785 = (function (){var G__26786 = (function (){var G__26787 = x;
var G__26788 = y;
var G__26789 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__26787,G__26788,G__26789) : h.call(null,G__26787,G__26788,G__26789));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26786) : g.call(null,G__26786));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26785) : f.call(null,G__26785));
});
var G__26798__4 = (function() { 
var G__26799__delegate = function (x,y,z,args){
var G__26790 = (function (){var G__26791 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26791) : g.call(null,G__26791));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26790) : f.call(null,G__26790));
};
var G__26799 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26800__i = 0, G__26800__a = new Array(arguments.length -  3);
while (G__26800__i < G__26800__a.length) {G__26800__a[G__26800__i] = arguments[G__26800__i + 3]; ++G__26800__i;}
  args = new cljs.core.IndexedSeq(G__26800__a,0);
} 
return G__26799__delegate.call(this,x,y,z,args);};
G__26799.cljs$lang$maxFixedArity = 3;
G__26799.cljs$lang$applyTo = (function (arglist__26801){
var x = cljs.core.first(arglist__26801);
arglist__26801 = cljs.core.next(arglist__26801);
var y = cljs.core.first(arglist__26801);
arglist__26801 = cljs.core.next(arglist__26801);
var z = cljs.core.first(arglist__26801);
var args = cljs.core.rest(arglist__26801);
return G__26799__delegate(x,y,z,args);
});
G__26799.cljs$core$IFn$_invoke$arity$variadic = G__26799__delegate;
return G__26799;
})()
;
G__26798 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26798__0.call(this);
case 1:
return G__26798__1.call(this,x);
case 2:
return G__26798__2.call(this,x,y);
case 3:
return G__26798__3.call(this,x,y,z);
default:
var G__26802 = null;
if (arguments.length > 3) {
var G__26803__i = 0, G__26803__a = new Array(arguments.length -  3);
while (G__26803__i < G__26803__a.length) {G__26803__a[G__26803__i] = arguments[G__26803__i + 3]; ++G__26803__i;}
G__26802 = new cljs.core.IndexedSeq(G__26803__a,0);
}
return G__26798__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26802);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26798.cljs$lang$maxFixedArity = 3;
G__26798.cljs$lang$applyTo = G__26798__4.cljs$lang$applyTo;
G__26798.cljs$core$IFn$_invoke$arity$0 = G__26798__0;
G__26798.cljs$core$IFn$_invoke$arity$1 = G__26798__1;
G__26798.cljs$core$IFn$_invoke$arity$2 = G__26798__2;
G__26798.cljs$core$IFn$_invoke$arity$3 = G__26798__3;
G__26798.cljs$core$IFn$_invoke$arity$variadic = G__26798__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26798;
})()
});
var comp__4 = (function() { 
var G__26804__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__26805__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__26806 = cljs.core.first(fs__$2).call(null,ret);
var G__26807 = cljs.core.next(fs__$2);
ret = G__26806;
fs__$2 = G__26807;
continue;
} else {
return ret;
}
break;
}
};
var G__26805 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26808__i = 0, G__26808__a = new Array(arguments.length -  0);
while (G__26808__i < G__26808__a.length) {G__26808__a[G__26808__i] = arguments[G__26808__i + 0]; ++G__26808__i;}
  args = new cljs.core.IndexedSeq(G__26808__a,0);
} 
return G__26805__delegate.call(this,args);};
G__26805.cljs$lang$maxFixedArity = 0;
G__26805.cljs$lang$applyTo = (function (arglist__26809){
var args = cljs.core.seq(arglist__26809);
return G__26805__delegate(args);
});
G__26805.cljs$core$IFn$_invoke$arity$variadic = G__26805__delegate;
return G__26805;
})()
;
;})(fs__$1))
};
var G__26804 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__26810__i = 0, G__26810__a = new Array(arguments.length -  3);
while (G__26810__i < G__26810__a.length) {G__26810__a[G__26810__i] = arguments[G__26810__i + 3]; ++G__26810__i;}
  fs = new cljs.core.IndexedSeq(G__26810__a,0);
} 
return G__26804__delegate.call(this,f1,f2,f3,fs);};
G__26804.cljs$lang$maxFixedArity = 3;
G__26804.cljs$lang$applyTo = (function (arglist__26811){
var f1 = cljs.core.first(arglist__26811);
arglist__26811 = cljs.core.next(arglist__26811);
var f2 = cljs.core.first(arglist__26811);
arglist__26811 = cljs.core.next(arglist__26811);
var f3 = cljs.core.first(arglist__26811);
var fs = cljs.core.rest(arglist__26811);
return G__26804__delegate(f1,f2,f3,fs);
});
G__26804.cljs$core$IFn$_invoke$arity$variadic = G__26804__delegate;
return G__26804;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__26812 = null;
if (arguments.length > 3) {
var G__26813__i = 0, G__26813__a = new Array(arguments.length -  3);
while (G__26813__i < G__26813__a.length) {G__26813__a[G__26813__i] = arguments[G__26813__i + 3]; ++G__26813__i;}
G__26812 = new cljs.core.IndexedSeq(G__26813__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__26812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__26898 = null;
var G__26898__0 = (function (){
var G__26856 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26856) : f.call(null,G__26856));
});
var G__26898__1 = (function (x){
var G__26857 = arg1;
var G__26858 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26857,G__26858) : f.call(null,G__26857,G__26858));
});
var G__26898__2 = (function (x,y){
var G__26859 = arg1;
var G__26860 = x;
var G__26861 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26859,G__26860,G__26861) : f.call(null,G__26859,G__26860,G__26861));
});
var G__26898__3 = (function (x,y,z){
var G__26862 = arg1;
var G__26863 = x;
var G__26864 = y;
var G__26865 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26862,G__26863,G__26864,G__26865) : f.call(null,G__26862,G__26863,G__26864,G__26865));
});
var G__26898__4 = (function() { 
var G__26899__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__26899 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26900__i = 0, G__26900__a = new Array(arguments.length -  3);
while (G__26900__i < G__26900__a.length) {G__26900__a[G__26900__i] = arguments[G__26900__i + 3]; ++G__26900__i;}
  args = new cljs.core.IndexedSeq(G__26900__a,0);
} 
return G__26899__delegate.call(this,x,y,z,args);};
G__26899.cljs$lang$maxFixedArity = 3;
G__26899.cljs$lang$applyTo = (function (arglist__26901){
var x = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var y = cljs.core.first(arglist__26901);
arglist__26901 = cljs.core.next(arglist__26901);
var z = cljs.core.first(arglist__26901);
var args = cljs.core.rest(arglist__26901);
return G__26899__delegate(x,y,z,args);
});
G__26899.cljs$core$IFn$_invoke$arity$variadic = G__26899__delegate;
return G__26899;
})()
;
G__26898 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26898__0.call(this);
case 1:
return G__26898__1.call(this,x);
case 2:
return G__26898__2.call(this,x,y);
case 3:
return G__26898__3.call(this,x,y,z);
default:
var G__26902 = null;
if (arguments.length > 3) {
var G__26903__i = 0, G__26903__a = new Array(arguments.length -  3);
while (G__26903__i < G__26903__a.length) {G__26903__a[G__26903__i] = arguments[G__26903__i + 3]; ++G__26903__i;}
G__26902 = new cljs.core.IndexedSeq(G__26903__a,0);
}
return G__26898__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26898.cljs$lang$maxFixedArity = 3;
G__26898.cljs$lang$applyTo = G__26898__4.cljs$lang$applyTo;
G__26898.cljs$core$IFn$_invoke$arity$0 = G__26898__0;
G__26898.cljs$core$IFn$_invoke$arity$1 = G__26898__1;
G__26898.cljs$core$IFn$_invoke$arity$2 = G__26898__2;
G__26898.cljs$core$IFn$_invoke$arity$3 = G__26898__3;
G__26898.cljs$core$IFn$_invoke$arity$variadic = G__26898__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26898;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__26904 = null;
var G__26904__0 = (function (){
var G__26866 = arg1;
var G__26867 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26866,G__26867) : f.call(null,G__26866,G__26867));
});
var G__26904__1 = (function (x){
var G__26868 = arg1;
var G__26869 = arg2;
var G__26870 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26868,G__26869,G__26870) : f.call(null,G__26868,G__26869,G__26870));
});
var G__26904__2 = (function (x,y){
var G__26871 = arg1;
var G__26872 = arg2;
var G__26873 = x;
var G__26874 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26871,G__26872,G__26873,G__26874) : f.call(null,G__26871,G__26872,G__26873,G__26874));
});
var G__26904__3 = (function (x,y,z){
var G__26875 = arg1;
var G__26876 = arg2;
var G__26877 = x;
var G__26878 = y;
var G__26879 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26875,G__26876,G__26877,G__26878,G__26879) : f.call(null,G__26875,G__26876,G__26877,G__26878,G__26879));
});
var G__26904__4 = (function() { 
var G__26905__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__26905 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26906__i = 0, G__26906__a = new Array(arguments.length -  3);
while (G__26906__i < G__26906__a.length) {G__26906__a[G__26906__i] = arguments[G__26906__i + 3]; ++G__26906__i;}
  args = new cljs.core.IndexedSeq(G__26906__a,0);
} 
return G__26905__delegate.call(this,x,y,z,args);};
G__26905.cljs$lang$maxFixedArity = 3;
G__26905.cljs$lang$applyTo = (function (arglist__26907){
var x = cljs.core.first(arglist__26907);
arglist__26907 = cljs.core.next(arglist__26907);
var y = cljs.core.first(arglist__26907);
arglist__26907 = cljs.core.next(arglist__26907);
var z = cljs.core.first(arglist__26907);
var args = cljs.core.rest(arglist__26907);
return G__26905__delegate(x,y,z,args);
});
G__26905.cljs$core$IFn$_invoke$arity$variadic = G__26905__delegate;
return G__26905;
})()
;
G__26904 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26904__0.call(this);
case 1:
return G__26904__1.call(this,x);
case 2:
return G__26904__2.call(this,x,y);
case 3:
return G__26904__3.call(this,x,y,z);
default:
var G__26908 = null;
if (arguments.length > 3) {
var G__26909__i = 0, G__26909__a = new Array(arguments.length -  3);
while (G__26909__i < G__26909__a.length) {G__26909__a[G__26909__i] = arguments[G__26909__i + 3]; ++G__26909__i;}
G__26908 = new cljs.core.IndexedSeq(G__26909__a,0);
}
return G__26904__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26904.cljs$lang$maxFixedArity = 3;
G__26904.cljs$lang$applyTo = G__26904__4.cljs$lang$applyTo;
G__26904.cljs$core$IFn$_invoke$arity$0 = G__26904__0;
G__26904.cljs$core$IFn$_invoke$arity$1 = G__26904__1;
G__26904.cljs$core$IFn$_invoke$arity$2 = G__26904__2;
G__26904.cljs$core$IFn$_invoke$arity$3 = G__26904__3;
G__26904.cljs$core$IFn$_invoke$arity$variadic = G__26904__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26904;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__26910 = null;
var G__26910__0 = (function (){
var G__26880 = arg1;
var G__26881 = arg2;
var G__26882 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26880,G__26881,G__26882) : f.call(null,G__26880,G__26881,G__26882));
});
var G__26910__1 = (function (x){
var G__26883 = arg1;
var G__26884 = arg2;
var G__26885 = arg3;
var G__26886 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26883,G__26884,G__26885,G__26886) : f.call(null,G__26883,G__26884,G__26885,G__26886));
});
var G__26910__2 = (function (x,y){
var G__26887 = arg1;
var G__26888 = arg2;
var G__26889 = arg3;
var G__26890 = x;
var G__26891 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26887,G__26888,G__26889,G__26890,G__26891) : f.call(null,G__26887,G__26888,G__26889,G__26890,G__26891));
});
var G__26910__3 = (function (x,y,z){
var G__26892 = arg1;
var G__26893 = arg2;
var G__26894 = arg3;
var G__26895 = x;
var G__26896 = y;
var G__26897 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26892,G__26893,G__26894,G__26895,G__26896,G__26897) : f.call(null,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897));
});
var G__26910__4 = (function() { 
var G__26911__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__26911 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26912__i = 0, G__26912__a = new Array(arguments.length -  3);
while (G__26912__i < G__26912__a.length) {G__26912__a[G__26912__i] = arguments[G__26912__i + 3]; ++G__26912__i;}
  args = new cljs.core.IndexedSeq(G__26912__a,0);
} 
return G__26911__delegate.call(this,x,y,z,args);};
G__26911.cljs$lang$maxFixedArity = 3;
G__26911.cljs$lang$applyTo = (function (arglist__26913){
var x = cljs.core.first(arglist__26913);
arglist__26913 = cljs.core.next(arglist__26913);
var y = cljs.core.first(arglist__26913);
arglist__26913 = cljs.core.next(arglist__26913);
var z = cljs.core.first(arglist__26913);
var args = cljs.core.rest(arglist__26913);
return G__26911__delegate(x,y,z,args);
});
G__26911.cljs$core$IFn$_invoke$arity$variadic = G__26911__delegate;
return G__26911;
})()
;
G__26910 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26910__0.call(this);
case 1:
return G__26910__1.call(this,x);
case 2:
return G__26910__2.call(this,x,y);
case 3:
return G__26910__3.call(this,x,y,z);
default:
var G__26914 = null;
if (arguments.length > 3) {
var G__26915__i = 0, G__26915__a = new Array(arguments.length -  3);
while (G__26915__i < G__26915__a.length) {G__26915__a[G__26915__i] = arguments[G__26915__i + 3]; ++G__26915__i;}
G__26914 = new cljs.core.IndexedSeq(G__26915__a,0);
}
return G__26910__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26914);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26910.cljs$lang$maxFixedArity = 3;
G__26910.cljs$lang$applyTo = G__26910__4.cljs$lang$applyTo;
G__26910.cljs$core$IFn$_invoke$arity$0 = G__26910__0;
G__26910.cljs$core$IFn$_invoke$arity$1 = G__26910__1;
G__26910.cljs$core$IFn$_invoke$arity$2 = G__26910__2;
G__26910.cljs$core$IFn$_invoke$arity$3 = G__26910__3;
G__26910.cljs$core$IFn$_invoke$arity$variadic = G__26910__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26910;
})()
});
var partial__5 = (function() { 
var G__26916__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__26917__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__26917 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26918__i = 0, G__26918__a = new Array(arguments.length -  0);
while (G__26918__i < G__26918__a.length) {G__26918__a[G__26918__i] = arguments[G__26918__i + 0]; ++G__26918__i;}
  args = new cljs.core.IndexedSeq(G__26918__a,0);
} 
return G__26917__delegate.call(this,args);};
G__26917.cljs$lang$maxFixedArity = 0;
G__26917.cljs$lang$applyTo = (function (arglist__26919){
var args = cljs.core.seq(arglist__26919);
return G__26917__delegate(args);
});
G__26917.cljs$core$IFn$_invoke$arity$variadic = G__26917__delegate;
return G__26917;
})()
;
};
var G__26916 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__26920__i = 0, G__26920__a = new Array(arguments.length -  4);
while (G__26920__i < G__26920__a.length) {G__26920__a[G__26920__i] = arguments[G__26920__i + 4]; ++G__26920__i;}
  more = new cljs.core.IndexedSeq(G__26920__a,0);
} 
return G__26916__delegate.call(this,f,arg1,arg2,arg3,more);};
G__26916.cljs$lang$maxFixedArity = 4;
G__26916.cljs$lang$applyTo = (function (arglist__26921){
var f = cljs.core.first(arglist__26921);
arglist__26921 = cljs.core.next(arglist__26921);
var arg1 = cljs.core.first(arglist__26921);
arglist__26921 = cljs.core.next(arglist__26921);
var arg2 = cljs.core.first(arglist__26921);
arglist__26921 = cljs.core.next(arglist__26921);
var arg3 = cljs.core.first(arglist__26921);
var more = cljs.core.rest(arglist__26921);
return G__26916__delegate(f,arg1,arg2,arg3,more);
});
G__26916.cljs$core$IFn$_invoke$arity$variadic = G__26916__delegate;
return G__26916;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__26922 = null;
if (arguments.length > 4) {
var G__26923__i = 0, G__26923__a = new Array(arguments.length -  4);
while (G__26923__i < G__26923__a.length) {G__26923__a[G__26923__i] = arguments[G__26923__i + 4]; ++G__26923__i;}
G__26922 = new cljs.core.IndexedSeq(G__26923__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__26922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__26956 = null;
var G__26956__1 = (function (a){
var G__26940 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26940) : f.call(null,G__26940));
});
var G__26956__2 = (function (a,b){
var G__26941 = (((a == null))?x:a);
var G__26942 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26941,G__26942) : f.call(null,G__26941,G__26942));
});
var G__26956__3 = (function (a,b,c){
var G__26943 = (((a == null))?x:a);
var G__26944 = b;
var G__26945 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26943,G__26944,G__26945) : f.call(null,G__26943,G__26944,G__26945));
});
var G__26956__4 = (function() { 
var G__26957__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__26957 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26958__i = 0, G__26958__a = new Array(arguments.length -  3);
while (G__26958__i < G__26958__a.length) {G__26958__a[G__26958__i] = arguments[G__26958__i + 3]; ++G__26958__i;}
  ds = new cljs.core.IndexedSeq(G__26958__a,0);
} 
return G__26957__delegate.call(this,a,b,c,ds);};
G__26957.cljs$lang$maxFixedArity = 3;
G__26957.cljs$lang$applyTo = (function (arglist__26959){
var a = cljs.core.first(arglist__26959);
arglist__26959 = cljs.core.next(arglist__26959);
var b = cljs.core.first(arglist__26959);
arglist__26959 = cljs.core.next(arglist__26959);
var c = cljs.core.first(arglist__26959);
var ds = cljs.core.rest(arglist__26959);
return G__26957__delegate(a,b,c,ds);
});
G__26957.cljs$core$IFn$_invoke$arity$variadic = G__26957__delegate;
return G__26957;
})()
;
G__26956 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__26956__1.call(this,a);
case 2:
return G__26956__2.call(this,a,b);
case 3:
return G__26956__3.call(this,a,b,c);
default:
var G__26960 = null;
if (arguments.length > 3) {
var G__26961__i = 0, G__26961__a = new Array(arguments.length -  3);
while (G__26961__i < G__26961__a.length) {G__26961__a[G__26961__i] = arguments[G__26961__i + 3]; ++G__26961__i;}
G__26960 = new cljs.core.IndexedSeq(G__26961__a,0);
}
return G__26956__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26956.cljs$lang$maxFixedArity = 3;
G__26956.cljs$lang$applyTo = G__26956__4.cljs$lang$applyTo;
G__26956.cljs$core$IFn$_invoke$arity$1 = G__26956__1;
G__26956.cljs$core$IFn$_invoke$arity$2 = G__26956__2;
G__26956.cljs$core$IFn$_invoke$arity$3 = G__26956__3;
G__26956.cljs$core$IFn$_invoke$arity$variadic = G__26956__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26956;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__26962 = null;
var G__26962__2 = (function (a,b){
var G__26946 = (((a == null))?x:a);
var G__26947 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26946,G__26947) : f.call(null,G__26946,G__26947));
});
var G__26962__3 = (function (a,b,c){
var G__26948 = (((a == null))?x:a);
var G__26949 = (((b == null))?y:b);
var G__26950 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26948,G__26949,G__26950) : f.call(null,G__26948,G__26949,G__26950));
});
var G__26962__4 = (function() { 
var G__26963__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__26963 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26964__i = 0, G__26964__a = new Array(arguments.length -  3);
while (G__26964__i < G__26964__a.length) {G__26964__a[G__26964__i] = arguments[G__26964__i + 3]; ++G__26964__i;}
  ds = new cljs.core.IndexedSeq(G__26964__a,0);
} 
return G__26963__delegate.call(this,a,b,c,ds);};
G__26963.cljs$lang$maxFixedArity = 3;
G__26963.cljs$lang$applyTo = (function (arglist__26965){
var a = cljs.core.first(arglist__26965);
arglist__26965 = cljs.core.next(arglist__26965);
var b = cljs.core.first(arglist__26965);
arglist__26965 = cljs.core.next(arglist__26965);
var c = cljs.core.first(arglist__26965);
var ds = cljs.core.rest(arglist__26965);
return G__26963__delegate(a,b,c,ds);
});
G__26963.cljs$core$IFn$_invoke$arity$variadic = G__26963__delegate;
return G__26963;
})()
;
G__26962 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26962__2.call(this,a,b);
case 3:
return G__26962__3.call(this,a,b,c);
default:
var G__26966 = null;
if (arguments.length > 3) {
var G__26967__i = 0, G__26967__a = new Array(arguments.length -  3);
while (G__26967__i < G__26967__a.length) {G__26967__a[G__26967__i] = arguments[G__26967__i + 3]; ++G__26967__i;}
G__26966 = new cljs.core.IndexedSeq(G__26967__a,0);
}
return G__26962__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26962.cljs$lang$maxFixedArity = 3;
G__26962.cljs$lang$applyTo = G__26962__4.cljs$lang$applyTo;
G__26962.cljs$core$IFn$_invoke$arity$2 = G__26962__2;
G__26962.cljs$core$IFn$_invoke$arity$3 = G__26962__3;
G__26962.cljs$core$IFn$_invoke$arity$variadic = G__26962__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26962;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__26968 = null;
var G__26968__2 = (function (a,b){
var G__26951 = (((a == null))?x:a);
var G__26952 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26951,G__26952) : f.call(null,G__26951,G__26952));
});
var G__26968__3 = (function (a,b,c){
var G__26953 = (((a == null))?x:a);
var G__26954 = (((b == null))?y:b);
var G__26955 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26953,G__26954,G__26955) : f.call(null,G__26953,G__26954,G__26955));
});
var G__26968__4 = (function() { 
var G__26969__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__26969 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26970__i = 0, G__26970__a = new Array(arguments.length -  3);
while (G__26970__i < G__26970__a.length) {G__26970__a[G__26970__i] = arguments[G__26970__i + 3]; ++G__26970__i;}
  ds = new cljs.core.IndexedSeq(G__26970__a,0);
} 
return G__26969__delegate.call(this,a,b,c,ds);};
G__26969.cljs$lang$maxFixedArity = 3;
G__26969.cljs$lang$applyTo = (function (arglist__26971){
var a = cljs.core.first(arglist__26971);
arglist__26971 = cljs.core.next(arglist__26971);
var b = cljs.core.first(arglist__26971);
arglist__26971 = cljs.core.next(arglist__26971);
var c = cljs.core.first(arglist__26971);
var ds = cljs.core.rest(arglist__26971);
return G__26969__delegate(a,b,c,ds);
});
G__26969.cljs$core$IFn$_invoke$arity$variadic = G__26969__delegate;
return G__26969;
})()
;
G__26968 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26968__2.call(this,a,b);
case 3:
return G__26968__3.call(this,a,b,c);
default:
var G__26972 = null;
if (arguments.length > 3) {
var G__26973__i = 0, G__26973__a = new Array(arguments.length -  3);
while (G__26973__i < G__26973__a.length) {G__26973__a[G__26973__i] = arguments[G__26973__i + 3]; ++G__26973__i;}
G__26972 = new cljs.core.IndexedSeq(G__26973__a,0);
}
return G__26968__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26968.cljs$lang$maxFixedArity = 3;
G__26968.cljs$lang$applyTo = G__26968__4.cljs$lang$applyTo;
G__26968.cljs$core$IFn$_invoke$arity$2 = G__26968__2;
G__26968.cljs$core$IFn$_invoke$arity$3 = G__26968__3;
G__26968.cljs$core$IFn$_invoke$arity$variadic = G__26968__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26968;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__27004 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__27004) : cljs.core.volatile_BANG_.call(null,G__27004));
})();
return ((function (i){
return (function() {
var G__27034 = null;
var G__27034__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27034__1 = (function (result){
var G__27005 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27005) : rf.call(null,G__27005));
});
var G__27034__2 = (function (result,input){
var G__27006 = result;
var G__27007 = (function (){var G__27008 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__27009 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27008,G__27009) : f.call(null,G__27008,G__27009));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27006,G__27007) : rf.call(null,G__27006,G__27007));
});
G__27034 = function(result,input){
switch(arguments.length){
case 0:
return G__27034__0.call(this);
case 1:
return G__27034__1.call(this,result);
case 2:
return G__27034__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27034.cljs$core$IFn$_invoke$arity$0 = G__27034__0;
G__27034.cljs$core$IFn$_invoke$arity$1 = G__27034__1;
G__27034.cljs$core$IFn$_invoke$arity$2 = G__27034__2;
return G__27034;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18842__auto___27035 = size;
var i_27036 = (0);
while(true){
if((i_27036 < n__18842__auto___27035)){
cljs.core.chunk_append(b,(function (){var G__27030 = (idx + i_27036);
var G__27031 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27036);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27030,G__27031) : f.call(null,G__27030,G__27031));
})());

var G__27037 = (i_27036 + (1));
i_27036 = G__27037;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__27032 = idx;
var G__27033 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27032,G__27033) : f.call(null,G__27032,G__27033));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__27056 = null;
var G__27056__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27056__1 = (function (result){
var G__27050 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27050) : rf.call(null,G__27050));
});
var G__27056__2 = (function (result,input){
var v = (function (){var G__27051 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27051) : f.call(null,G__27051));
})();
if((v == null)){
return result;
} else {
var G__27052 = result;
var G__27053 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27052,G__27053) : rf.call(null,G__27052,G__27053));
}
});
G__27056 = function(result,input){
switch(arguments.length){
case 0:
return G__27056__0.call(this);
case 1:
return G__27056__1.call(this,result);
case 2:
return G__27056__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27056.cljs$core$IFn$_invoke$arity$0 = G__27056__0;
G__27056.cljs$core$IFn$_invoke$arity$1 = G__27056__1;
G__27056.cljs$core$IFn$_invoke$arity$2 = G__27056__2;
return G__27056;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18842__auto___27057 = size;
var i_27058 = (0);
while(true){
if((i_27058 < n__18842__auto___27057)){
var x_27059 = (function (){var G__27054 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27058);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27054) : f.call(null,G__27054));
})();
if((x_27059 == null)){
} else {
cljs.core.chunk_append(b,x_27059);
}

var G__27060 = (i_27058 + (1));
i_27058 = G__27060;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__27055 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27055) : f.call(null,G__27055));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__27061 = this$__$1;
return goog.getUid(G__27061);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__27062 = cljs.core.seq(self__.watches);
var chunk__27063 = null;
var count__27064 = (0);
var i__27065 = (0);
while(true){
if((i__27065 < count__27064)){
var vec__27066 = chunk__27063.cljs$core$IIndexed$_nth$arity$2(null,i__27065);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27066,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27066,(1),null);
var G__27067_27076 = key;
var G__27068_27077 = this$__$1;
var G__27069_27078 = oldval;
var G__27070_27079 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27067_27076,G__27068_27077,G__27069_27078,G__27070_27079) : f.call(null,G__27067_27076,G__27068_27077,G__27069_27078,G__27070_27079));

var G__27080 = seq__27062;
var G__27081 = chunk__27063;
var G__27082 = count__27064;
var G__27083 = (i__27065 + (1));
seq__27062 = G__27080;
chunk__27063 = G__27081;
count__27064 = G__27082;
i__27065 = G__27083;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27062);
if(temp__4126__auto__){
var seq__27062__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27062__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__27062__$1);
var G__27084 = cljs.core.chunk_rest(seq__27062__$1);
var G__27085 = c__18742__auto__;
var G__27086 = cljs.core.count(c__18742__auto__);
var G__27087 = (0);
seq__27062 = G__27084;
chunk__27063 = G__27085;
count__27064 = G__27086;
i__27065 = G__27087;
continue;
} else {
var vec__27071 = cljs.core.first(seq__27062__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27071,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27071,(1),null);
var G__27072_27088 = key;
var G__27073_27089 = this$__$1;
var G__27074_27090 = oldval;
var G__27075_27091 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27072_27088,G__27073_27089,G__27074_27090,G__27075_27091) : f.call(null,G__27072_27088,G__27073_27089,G__27074_27090,G__27075_27091));

var G__27092 = cljs.core.next(seq__27062__$1);
var G__27093 = null;
var G__27094 = (0);
var G__27095 = (0);
seq__27062 = G__27092;
chunk__27063 = G__27093;
count__27064 = G__27094;
i__27065 = G__27095;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__27099__delegate = function (x,p__27096){
var map__27098 = p__27096;
var map__27098__$1 = ((cljs.core.seq_QMARK_(map__27098))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27098):map__27098);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27098__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27098__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__27099 = function (x,var_args){
var p__27096 = null;
if (arguments.length > 1) {
var G__27100__i = 0, G__27100__a = new Array(arguments.length -  1);
while (G__27100__i < G__27100__a.length) {G__27100__a[G__27100__i] = arguments[G__27100__i + 1]; ++G__27100__i;}
  p__27096 = new cljs.core.IndexedSeq(G__27100__a,0);
} 
return G__27099__delegate.call(this,x,p__27096);};
G__27099.cljs$lang$maxFixedArity = 1;
G__27099.cljs$lang$applyTo = (function (arglist__27101){
var x = cljs.core.first(arglist__27101);
var p__27096 = cljs.core.rest(arglist__27101);
return G__27099__delegate(x,p__27096);
});
G__27099.cljs$core$IFn$_invoke$arity$variadic = G__27099__delegate;
return G__27099;
})()
;
atom = function(x,var_args){
var p__27096 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__27102 = null;
if (arguments.length > 1) {
var G__27103__i = 0, G__27103__a = new Array(arguments.length -  1);
while (G__27103__i < G__27103__a.length) {G__27103__a[G__27103__i] = arguments[G__27103__i + 1]; ++G__27103__i;}
G__27102 = new cljs.core.IndexedSeq(G__27103__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27102);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__27106 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__27106) : validate.call(null,G__27106));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__27107 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__27107) : cljs.core.pr_str.call(null,G__27107));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__27114 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27114) : f.call(null,G__27114));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__27115 = a.state;
var G__27116 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27115,G__27116) : f.call(null,G__27115,G__27116));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__27117 = a.state;
var G__27118 = x;
var G__27119 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27117,G__27118,G__27119) : f.call(null,G__27117,G__27118,G__27119));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__27120__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__27120 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__27121__i = 0, G__27121__a = new Array(arguments.length -  4);
while (G__27121__i < G__27121__a.length) {G__27121__a[G__27121__i] = arguments[G__27121__i + 4]; ++G__27121__i;}
  more = new cljs.core.IndexedSeq(G__27121__a,0);
} 
return G__27120__delegate.call(this,a,f,x,y,more);};
G__27120.cljs$lang$maxFixedArity = 4;
G__27120.cljs$lang$applyTo = (function (arglist__27122){
var a = cljs.core.first(arglist__27122);
arglist__27122 = cljs.core.next(arglist__27122);
var f = cljs.core.first(arglist__27122);
arglist__27122 = cljs.core.next(arglist__27122);
var x = cljs.core.first(arglist__27122);
arglist__27122 = cljs.core.next(arglist__27122);
var y = cljs.core.first(arglist__27122);
var more = cljs.core.rest(arglist__27122);
return G__27120__delegate(a,f,x,y,more);
});
G__27120.cljs$core$IFn$_invoke$arity$variadic = G__27120__delegate;
return G__27120;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__27123 = null;
if (arguments.length > 4) {
var G__27124__i = 0, G__27124__a = new Array(arguments.length -  4);
while (G__27124__i < G__27124__a.length) {G__27124__a[G__27124__i] = arguments[G__27124__i + 4]; ++G__27124__i;}
G__27123 = new cljs.core.IndexedSeq(G__27124__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__27123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27191 = null;
var G__27191__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27191__1 = (function (result){
var G__27158 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27158) : rf.call(null,G__27158));
});
var G__27191__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__27159 = i;
var G__27160 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27159,G__27160) : f.call(null,G__27159,G__27160));
})();
if((v == null)){
return result;
} else {
var G__27161 = result;
var G__27162 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27161,G__27162) : rf.call(null,G__27161,G__27162));
}
});
G__27191 = function(result,input){
switch(arguments.length){
case 0:
return G__27191__0.call(this);
case 1:
return G__27191__1.call(this,result);
case 2:
return G__27191__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27191.cljs$core$IFn$_invoke$arity$0 = G__27191__0;
G__27191.cljs$core$IFn$_invoke$arity$1 = G__27191__1;
G__27191.cljs$core$IFn$_invoke$arity$2 = G__27191__2;
return G__27191;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18842__auto___27192 = size;
var i_27193 = (0);
while(true){
if((i_27193 < n__18842__auto___27192)){
var x_27194 = (function (){var G__27187 = (idx + i_27193);
var G__27188 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27193);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27187,G__27188) : f.call(null,G__27187,G__27188));
})();
if((x_27194 == null)){
} else {
cljs.core.chunk_append(b,x_27194);
}

var G__27195 = (i_27193 + (1));
i_27193 = G__27195;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__27189 = idx;
var G__27190 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27189,G__27190) : f.call(null,G__27189,G__27190));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__27409 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27409) : p.call(null,G__27409));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27411 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27411) : p.call(null,G__27411));
})();
if(cljs.core.truth_(and__17943__auto__)){
var G__27412 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27412) : p.call(null,G__27412));
} else {
return and__17943__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27414 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27414) : p.call(null,G__27414));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27416 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27416) : p.call(null,G__27416));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var G__27417 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27417) : p.call(null,G__27417));
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__27586__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__27586 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27587__i = 0, G__27587__a = new Array(arguments.length -  3);
while (G__27587__i < G__27587__a.length) {G__27587__a[G__27587__i] = arguments[G__27587__i + 3]; ++G__27587__i;}
  args = new cljs.core.IndexedSeq(G__27587__a,0);
} 
return G__27586__delegate.call(this,x,y,z,args);};
G__27586.cljs$lang$maxFixedArity = 3;
G__27586.cljs$lang$applyTo = (function (arglist__27588){
var x = cljs.core.first(arglist__27588);
arglist__27588 = cljs.core.next(arglist__27588);
var y = cljs.core.first(arglist__27588);
arglist__27588 = cljs.core.next(arglist__27588);
var z = cljs.core.first(arglist__27588);
var args = cljs.core.rest(arglist__27588);
return G__27586__delegate(x,y,z,args);
});
G__27586.cljs$core$IFn$_invoke$arity$variadic = G__27586__delegate;
return G__27586;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__27589 = null;
if (arguments.length > 3) {
var G__27590__i = 0, G__27590__a = new Array(arguments.length -  3);
while (G__27590__i < G__27590__a.length) {G__27590__a[G__27590__i] = arguments[G__27590__i + 3]; ++G__27590__i;}
G__27589 = new cljs.core.IndexedSeq(G__27590__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27589);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27449 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27449) : p1.call(null,G__27449));
})();
if(cljs.core.truth_(and__17943__auto__)){
var G__27450 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27450) : p2.call(null,G__27450));
} else {
return and__17943__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27452 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27452) : p1.call(null,G__27452));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27454 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27454) : p1.call(null,G__27454));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var and__17943__auto____$2 = (function (){var G__27456 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27456) : p2.call(null,G__27456));
})();
if(cljs.core.truth_(and__17943__auto____$2)){
var G__27457 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27457) : p2.call(null,G__27457));
} else {
return and__17943__auto____$2;
}
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27459 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27459) : p1.call(null,G__27459));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27461 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27461) : p1.call(null,G__27461));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var and__17943__auto____$2 = (function (){var G__27463 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27463) : p1.call(null,G__27463));
})();
if(cljs.core.truth_(and__17943__auto____$2)){
var and__17943__auto____$3 = (function (){var G__27465 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27465) : p2.call(null,G__27465));
})();
if(cljs.core.truth_(and__17943__auto____$3)){
var and__17943__auto____$4 = (function (){var G__27467 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27467) : p2.call(null,G__27467));
})();
if(cljs.core.truth_(and__17943__auto____$4)){
var G__27468 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27468) : p2.call(null,G__27468));
} else {
return and__17943__auto____$4;
}
} else {
return and__17943__auto____$3;
}
} else {
return and__17943__auto____$2;
}
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__27591__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__27196_SHARP_){
var and__17943__auto__ = (function (){var G__27473 = p1__27196_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27473) : p1.call(null,G__27473));
})();
if(cljs.core.truth_(and__17943__auto__)){
var G__27474 = p1__27196_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27474) : p2.call(null,G__27474));
} else {
return and__17943__auto__;
}
}),args)));
};
var G__27591 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27592__i = 0, G__27592__a = new Array(arguments.length -  3);
while (G__27592__i < G__27592__a.length) {G__27592__a[G__27592__i] = arguments[G__27592__i + 3]; ++G__27592__i;}
  args = new cljs.core.IndexedSeq(G__27592__a,0);
} 
return G__27591__delegate.call(this,x,y,z,args);};
G__27591.cljs$lang$maxFixedArity = 3;
G__27591.cljs$lang$applyTo = (function (arglist__27593){
var x = cljs.core.first(arglist__27593);
arglist__27593 = cljs.core.next(arglist__27593);
var y = cljs.core.first(arglist__27593);
arglist__27593 = cljs.core.next(arglist__27593);
var z = cljs.core.first(arglist__27593);
var args = cljs.core.rest(arglist__27593);
return G__27591__delegate(x,y,z,args);
});
G__27591.cljs$core$IFn$_invoke$arity$variadic = G__27591__delegate;
return G__27591;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__27594 = null;
if (arguments.length > 3) {
var G__27595__i = 0, G__27595__a = new Array(arguments.length -  3);
while (G__27595__i < G__27595__a.length) {G__27595__a[G__27595__i] = arguments[G__27595__i + 3]; ++G__27595__i;}
G__27594 = new cljs.core.IndexedSeq(G__27595__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27520 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27520) : p1.call(null,G__27520));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27522 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27522) : p2.call(null,G__27522));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var G__27523 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27523) : p3.call(null,G__27523));
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27525 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27525) : p1.call(null,G__27525));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27527 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27527) : p2.call(null,G__27527));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var and__17943__auto____$2 = (function (){var G__27529 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27529) : p3.call(null,G__27529));
})();
if(cljs.core.truth_(and__17943__auto____$2)){
var and__17943__auto____$3 = (function (){var G__27531 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27531) : p1.call(null,G__27531));
})();
if(cljs.core.truth_(and__17943__auto____$3)){
var and__17943__auto____$4 = (function (){var G__27533 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27533) : p2.call(null,G__27533));
})();
if(cljs.core.truth_(and__17943__auto____$4)){
var G__27534 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27534) : p3.call(null,G__27534));
} else {
return and__17943__auto____$4;
}
} else {
return and__17943__auto____$3;
}
} else {
return and__17943__auto____$2;
}
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17943__auto__ = (function (){var G__27536 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27536) : p1.call(null,G__27536));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27538 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27538) : p2.call(null,G__27538));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var and__17943__auto____$2 = (function (){var G__27540 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27540) : p3.call(null,G__27540));
})();
if(cljs.core.truth_(and__17943__auto____$2)){
var and__17943__auto____$3 = (function (){var G__27542 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27542) : p1.call(null,G__27542));
})();
if(cljs.core.truth_(and__17943__auto____$3)){
var and__17943__auto____$4 = (function (){var G__27544 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27544) : p2.call(null,G__27544));
})();
if(cljs.core.truth_(and__17943__auto____$4)){
var and__17943__auto____$5 = (function (){var G__27546 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27546) : p3.call(null,G__27546));
})();
if(cljs.core.truth_(and__17943__auto____$5)){
var and__17943__auto____$6 = (function (){var G__27548 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27548) : p1.call(null,G__27548));
})();
if(cljs.core.truth_(and__17943__auto____$6)){
var and__17943__auto____$7 = (function (){var G__27550 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27550) : p2.call(null,G__27550));
})();
if(cljs.core.truth_(and__17943__auto____$7)){
var G__27551 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27551) : p3.call(null,G__27551));
} else {
return and__17943__auto____$7;
}
} else {
return and__17943__auto____$6;
}
} else {
return and__17943__auto____$5;
}
} else {
return and__17943__auto____$4;
}
} else {
return and__17943__auto____$3;
}
} else {
return and__17943__auto____$2;
}
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__27596__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__27197_SHARP_){
var and__17943__auto__ = (function (){var G__27558 = p1__27197_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27558) : p1.call(null,G__27558));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27560 = p1__27197_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27560) : p2.call(null,G__27560));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var G__27561 = p1__27197_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27561) : p3.call(null,G__27561));
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
}),args)));
};
var G__27596 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27597__i = 0, G__27597__a = new Array(arguments.length -  3);
while (G__27597__i < G__27597__a.length) {G__27597__a[G__27597__i] = arguments[G__27597__i + 3]; ++G__27597__i;}
  args = new cljs.core.IndexedSeq(G__27597__a,0);
} 
return G__27596__delegate.call(this,x,y,z,args);};
G__27596.cljs$lang$maxFixedArity = 3;
G__27596.cljs$lang$applyTo = (function (arglist__27598){
var x = cljs.core.first(arglist__27598);
arglist__27598 = cljs.core.next(arglist__27598);
var y = cljs.core.first(arglist__27598);
arglist__27598 = cljs.core.next(arglist__27598);
var z = cljs.core.first(arglist__27598);
var args = cljs.core.rest(arglist__27598);
return G__27596__delegate(x,y,z,args);
});
G__27596.cljs$core$IFn$_invoke$arity$variadic = G__27596__delegate;
return G__27596;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__27599 = null;
if (arguments.length > 3) {
var G__27600__i = 0, G__27600__a = new Array(arguments.length -  3);
while (G__27600__i < G__27600__a.length) {G__27600__a[G__27600__i] = arguments[G__27600__i + 3]; ++G__27600__i;}
G__27599 = new cljs.core.IndexedSeq(G__27600__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__27601__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__27198_SHARP_){
var G__27577 = x;
return (p1__27198_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27198_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27577) : p1__27198_SHARP_.call(null,G__27577));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__27199_SHARP_){
var and__17943__auto__ = (function (){var G__27579 = x;
return (p1__27199_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27199_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27579) : p1__27199_SHARP_.call(null,G__27579));
})();
if(cljs.core.truth_(and__17943__auto__)){
var G__27580 = y;
return (p1__27199_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27199_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27580) : p1__27199_SHARP_.call(null,G__27580));
} else {
return and__17943__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__27200_SHARP_){
var and__17943__auto__ = (function (){var G__27582 = x;
return (p1__27200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27582) : p1__27200_SHARP_.call(null,G__27582));
})();
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__27584 = y;
return (p1__27200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27584) : p1__27200_SHARP_.call(null,G__27584));
})();
if(cljs.core.truth_(and__17943__auto____$1)){
var G__27585 = z;
return (p1__27200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27585) : p1__27200_SHARP_.call(null,G__27585));
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__27602__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__27201_SHARP_){
return cljs.core.every_QMARK_(p1__27201_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__27602 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27603__i = 0, G__27603__a = new Array(arguments.length -  3);
while (G__27603__i < G__27603__a.length) {G__27603__a[G__27603__i] = arguments[G__27603__i + 3]; ++G__27603__i;}
  args = new cljs.core.IndexedSeq(G__27603__a,0);
} 
return G__27602__delegate.call(this,x,y,z,args);};
G__27602.cljs$lang$maxFixedArity = 3;
G__27602.cljs$lang$applyTo = (function (arglist__27604){
var x = cljs.core.first(arglist__27604);
arglist__27604 = cljs.core.next(arglist__27604);
var y = cljs.core.first(arglist__27604);
arglist__27604 = cljs.core.next(arglist__27604);
var z = cljs.core.first(arglist__27604);
var args = cljs.core.rest(arglist__27604);
return G__27602__delegate(x,y,z,args);
});
G__27602.cljs$core$IFn$_invoke$arity$variadic = G__27602__delegate;
return G__27602;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__27605 = null;
if (arguments.length > 3) {
var G__27606__i = 0, G__27606__a = new Array(arguments.length -  3);
while (G__27606__i < G__27606__a.length) {G__27606__a[G__27606__i] = arguments[G__27606__i + 3]; ++G__27606__i;}
G__27605 = new cljs.core.IndexedSeq(G__27606__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__27601 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27607__i = 0, G__27607__a = new Array(arguments.length -  3);
while (G__27607__i < G__27607__a.length) {G__27607__a[G__27607__i] = arguments[G__27607__i + 3]; ++G__27607__i;}
  ps = new cljs.core.IndexedSeq(G__27607__a,0);
} 
return G__27601__delegate.call(this,p1,p2,p3,ps);};
G__27601.cljs$lang$maxFixedArity = 3;
G__27601.cljs$lang$applyTo = (function (arglist__27608){
var p1 = cljs.core.first(arglist__27608);
arglist__27608 = cljs.core.next(arglist__27608);
var p2 = cljs.core.first(arglist__27608);
arglist__27608 = cljs.core.next(arglist__27608);
var p3 = cljs.core.first(arglist__27608);
var ps = cljs.core.rest(arglist__27608);
return G__27601__delegate(p1,p2,p3,ps);
});
G__27601.cljs$core$IFn$_invoke$arity$variadic = G__27601__delegate;
return G__27601;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__27609 = null;
if (arguments.length > 3) {
var G__27610__i = 0, G__27610__a = new Array(arguments.length -  3);
while (G__27610__i < G__27610__a.length) {G__27610__a[G__27610__i] = arguments[G__27610__i + 3]; ++G__27610__i;}
G__27609 = new cljs.core.IndexedSeq(G__27610__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27609);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__27816 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27816) : p.call(null,G__27816));
});
var sp1__2 = (function (x,y){
var or__17955__auto__ = (function (){var G__27818 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27818) : p.call(null,G__27818));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var G__27819 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27819) : p.call(null,G__27819));
}
});
var sp1__3 = (function (x,y,z){
var or__17955__auto__ = (function (){var G__27821 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27821) : p.call(null,G__27821));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27823 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27823) : p.call(null,G__27823));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var G__27824 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27824) : p.call(null,G__27824));
}
}
});
var sp1__4 = (function() { 
var G__27985__delegate = function (x,y,z,args){
var or__17955__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__27985 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27986__i = 0, G__27986__a = new Array(arguments.length -  3);
while (G__27986__i < G__27986__a.length) {G__27986__a[G__27986__i] = arguments[G__27986__i + 3]; ++G__27986__i;}
  args = new cljs.core.IndexedSeq(G__27986__a,0);
} 
return G__27985__delegate.call(this,x,y,z,args);};
G__27985.cljs$lang$maxFixedArity = 3;
G__27985.cljs$lang$applyTo = (function (arglist__27987){
var x = cljs.core.first(arglist__27987);
arglist__27987 = cljs.core.next(arglist__27987);
var y = cljs.core.first(arglist__27987);
arglist__27987 = cljs.core.next(arglist__27987);
var z = cljs.core.first(arglist__27987);
var args = cljs.core.rest(arglist__27987);
return G__27985__delegate(x,y,z,args);
});
G__27985.cljs$core$IFn$_invoke$arity$variadic = G__27985__delegate;
return G__27985;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__27988 = null;
if (arguments.length > 3) {
var G__27989__i = 0, G__27989__a = new Array(arguments.length -  3);
while (G__27989__i < G__27989__a.length) {G__27989__a[G__27989__i] = arguments[G__27989__i + 3]; ++G__27989__i;}
G__27988 = new cljs.core.IndexedSeq(G__27989__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__17955__auto__ = (function (){var G__27856 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27856) : p1.call(null,G__27856));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var G__27857 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27857) : p2.call(null,G__27857));
}
});
var sp2__2 = (function (x,y){
var or__17955__auto__ = (function (){var G__27859 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27859) : p1.call(null,G__27859));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27861 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27861) : p1.call(null,G__27861));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var or__17955__auto____$2 = (function (){var G__27863 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27863) : p2.call(null,G__27863));
})();
if(cljs.core.truth_(or__17955__auto____$2)){
return or__17955__auto____$2;
} else {
var G__27864 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27864) : p2.call(null,G__27864));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__17955__auto__ = (function (){var G__27866 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27866) : p1.call(null,G__27866));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27868 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27868) : p1.call(null,G__27868));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var or__17955__auto____$2 = (function (){var G__27870 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27870) : p1.call(null,G__27870));
})();
if(cljs.core.truth_(or__17955__auto____$2)){
return or__17955__auto____$2;
} else {
var or__17955__auto____$3 = (function (){var G__27872 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27872) : p2.call(null,G__27872));
})();
if(cljs.core.truth_(or__17955__auto____$3)){
return or__17955__auto____$3;
} else {
var or__17955__auto____$4 = (function (){var G__27874 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27874) : p2.call(null,G__27874));
})();
if(cljs.core.truth_(or__17955__auto____$4)){
return or__17955__auto____$4;
} else {
var G__27875 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27875) : p2.call(null,G__27875));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__27990__delegate = function (x,y,z,args){
var or__17955__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.some(((function (or__17955__auto__){
return (function (p1__27611_SHARP_){
var or__17955__auto____$1 = (function (){var G__27877 = p1__27611_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27877) : p1.call(null,G__27877));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var G__27878 = p1__27611_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27878) : p2.call(null,G__27878));
}
});})(or__17955__auto__))
,args);
}
};
var G__27990 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27991__i = 0, G__27991__a = new Array(arguments.length -  3);
while (G__27991__i < G__27991__a.length) {G__27991__a[G__27991__i] = arguments[G__27991__i + 3]; ++G__27991__i;}
  args = new cljs.core.IndexedSeq(G__27991__a,0);
} 
return G__27990__delegate.call(this,x,y,z,args);};
G__27990.cljs$lang$maxFixedArity = 3;
G__27990.cljs$lang$applyTo = (function (arglist__27992){
var x = cljs.core.first(arglist__27992);
arglist__27992 = cljs.core.next(arglist__27992);
var y = cljs.core.first(arglist__27992);
arglist__27992 = cljs.core.next(arglist__27992);
var z = cljs.core.first(arglist__27992);
var args = cljs.core.rest(arglist__27992);
return G__27990__delegate(x,y,z,args);
});
G__27990.cljs$core$IFn$_invoke$arity$variadic = G__27990__delegate;
return G__27990;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__27993 = null;
if (arguments.length > 3) {
var G__27994__i = 0, G__27994__a = new Array(arguments.length -  3);
while (G__27994__i < G__27994__a.length) {G__27994__a[G__27994__i] = arguments[G__27994__i + 3]; ++G__27994__i;}
G__27993 = new cljs.core.IndexedSeq(G__27994__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__17955__auto__ = (function (){var G__27924 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27924) : p1.call(null,G__27924));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27926 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27926) : p2.call(null,G__27926));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var G__27927 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27927) : p3.call(null,G__27927));
}
}
});
var sp3__2 = (function (x,y){
var or__17955__auto__ = (function (){var G__27929 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27929) : p1.call(null,G__27929));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27931 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27931) : p2.call(null,G__27931));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var or__17955__auto____$2 = (function (){var G__27933 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27933) : p3.call(null,G__27933));
})();
if(cljs.core.truth_(or__17955__auto____$2)){
return or__17955__auto____$2;
} else {
var or__17955__auto____$3 = (function (){var G__27935 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27935) : p1.call(null,G__27935));
})();
if(cljs.core.truth_(or__17955__auto____$3)){
return or__17955__auto____$3;
} else {
var or__17955__auto____$4 = (function (){var G__27937 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27937) : p2.call(null,G__27937));
})();
if(cljs.core.truth_(or__17955__auto____$4)){
return or__17955__auto____$4;
} else {
var G__27938 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27938) : p3.call(null,G__27938));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__17955__auto__ = (function (){var G__27940 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27940) : p1.call(null,G__27940));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27942 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27942) : p2.call(null,G__27942));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var or__17955__auto____$2 = (function (){var G__27944 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27944) : p3.call(null,G__27944));
})();
if(cljs.core.truth_(or__17955__auto____$2)){
return or__17955__auto____$2;
} else {
var or__17955__auto____$3 = (function (){var G__27946 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27946) : p1.call(null,G__27946));
})();
if(cljs.core.truth_(or__17955__auto____$3)){
return or__17955__auto____$3;
} else {
var or__17955__auto____$4 = (function (){var G__27948 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27948) : p2.call(null,G__27948));
})();
if(cljs.core.truth_(or__17955__auto____$4)){
return or__17955__auto____$4;
} else {
var or__17955__auto____$5 = (function (){var G__27950 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27950) : p3.call(null,G__27950));
})();
if(cljs.core.truth_(or__17955__auto____$5)){
return or__17955__auto____$5;
} else {
var or__17955__auto____$6 = (function (){var G__27952 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27952) : p1.call(null,G__27952));
})();
if(cljs.core.truth_(or__17955__auto____$6)){
return or__17955__auto____$6;
} else {
var or__17955__auto____$7 = (function (){var G__27954 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27954) : p2.call(null,G__27954));
})();
if(cljs.core.truth_(or__17955__auto____$7)){
return or__17955__auto____$7;
} else {
var G__27955 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27955) : p3.call(null,G__27955));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__27995__delegate = function (x,y,z,args){
var or__17955__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.some(((function (or__17955__auto__){
return (function (p1__27612_SHARP_){
var or__17955__auto____$1 = (function (){var G__27957 = p1__27612_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27957) : p1.call(null,G__27957));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var or__17955__auto____$2 = (function (){var G__27959 = p1__27612_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27959) : p2.call(null,G__27959));
})();
if(cljs.core.truth_(or__17955__auto____$2)){
return or__17955__auto____$2;
} else {
var G__27960 = p1__27612_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27960) : p3.call(null,G__27960));
}
}
});})(or__17955__auto__))
,args);
}
};
var G__27995 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27996__i = 0, G__27996__a = new Array(arguments.length -  3);
while (G__27996__i < G__27996__a.length) {G__27996__a[G__27996__i] = arguments[G__27996__i + 3]; ++G__27996__i;}
  args = new cljs.core.IndexedSeq(G__27996__a,0);
} 
return G__27995__delegate.call(this,x,y,z,args);};
G__27995.cljs$lang$maxFixedArity = 3;
G__27995.cljs$lang$applyTo = (function (arglist__27997){
var x = cljs.core.first(arglist__27997);
arglist__27997 = cljs.core.next(arglist__27997);
var y = cljs.core.first(arglist__27997);
arglist__27997 = cljs.core.next(arglist__27997);
var z = cljs.core.first(arglist__27997);
var args = cljs.core.rest(arglist__27997);
return G__27995__delegate(x,y,z,args);
});
G__27995.cljs$core$IFn$_invoke$arity$variadic = G__27995__delegate;
return G__27995;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__27998 = null;
if (arguments.length > 3) {
var G__27999__i = 0, G__27999__a = new Array(arguments.length -  3);
while (G__27999__i < G__27999__a.length) {G__27999__a[G__27999__i] = arguments[G__27999__i + 3]; ++G__27999__i;}
G__27998 = new cljs.core.IndexedSeq(G__27999__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27998);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__28000__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__27613_SHARP_){
var G__27976 = x;
return (p1__27613_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27613_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27976) : p1__27613_SHARP_.call(null,G__27976));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__27614_SHARP_){
var or__17955__auto__ = (function (){var G__27978 = x;
return (p1__27614_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27614_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27978) : p1__27614_SHARP_.call(null,G__27978));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var G__27979 = y;
return (p1__27614_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27614_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27979) : p1__27614_SHARP_.call(null,G__27979));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__27615_SHARP_){
var or__17955__auto__ = (function (){var G__27981 = x;
return (p1__27615_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27615_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27981) : p1__27615_SHARP_.call(null,G__27981));
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var G__27983 = y;
return (p1__27615_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27615_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27983) : p1__27615_SHARP_.call(null,G__27983));
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var G__27984 = z;
return (p1__27615_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27615_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27984) : p1__27615_SHARP_.call(null,G__27984));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__28001__delegate = function (x,y,z,args){
var or__17955__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.some(((function (or__17955__auto__,ps__$1){
return (function (p1__27616_SHARP_){
return cljs.core.some(p1__27616_SHARP_,args);
});})(or__17955__auto__,ps__$1))
,ps__$1);
}
};
var G__28001 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28002__i = 0, G__28002__a = new Array(arguments.length -  3);
while (G__28002__i < G__28002__a.length) {G__28002__a[G__28002__i] = arguments[G__28002__i + 3]; ++G__28002__i;}
  args = new cljs.core.IndexedSeq(G__28002__a,0);
} 
return G__28001__delegate.call(this,x,y,z,args);};
G__28001.cljs$lang$maxFixedArity = 3;
G__28001.cljs$lang$applyTo = (function (arglist__28003){
var x = cljs.core.first(arglist__28003);
arglist__28003 = cljs.core.next(arglist__28003);
var y = cljs.core.first(arglist__28003);
arglist__28003 = cljs.core.next(arglist__28003);
var z = cljs.core.first(arglist__28003);
var args = cljs.core.rest(arglist__28003);
return G__28001__delegate(x,y,z,args);
});
G__28001.cljs$core$IFn$_invoke$arity$variadic = G__28001__delegate;
return G__28001;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__28004 = null;
if (arguments.length > 3) {
var G__28005__i = 0, G__28005__a = new Array(arguments.length -  3);
while (G__28005__i < G__28005__a.length) {G__28005__a[G__28005__i] = arguments[G__28005__i + 3]; ++G__28005__i;}
G__28004 = new cljs.core.IndexedSeq(G__28005__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__28000 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__28006__i = 0, G__28006__a = new Array(arguments.length -  3);
while (G__28006__i < G__28006__a.length) {G__28006__a[G__28006__i] = arguments[G__28006__i + 3]; ++G__28006__i;}
  ps = new cljs.core.IndexedSeq(G__28006__a,0);
} 
return G__28000__delegate.call(this,p1,p2,p3,ps);};
G__28000.cljs$lang$maxFixedArity = 3;
G__28000.cljs$lang$applyTo = (function (arglist__28007){
var p1 = cljs.core.first(arglist__28007);
arglist__28007 = cljs.core.next(arglist__28007);
var p2 = cljs.core.first(arglist__28007);
arglist__28007 = cljs.core.next(arglist__28007);
var p3 = cljs.core.first(arglist__28007);
var ps = cljs.core.rest(arglist__28007);
return G__28000__delegate(p1,p2,p3,ps);
});
G__28000.cljs$core$IFn$_invoke$arity$variadic = G__28000__delegate;
return G__28000;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__28008 = null;
if (arguments.length > 3) {
var G__28009__i = 0, G__28009__a = new Array(arguments.length -  3);
while (G__28009__i < G__28009__a.length) {G__28009__a[G__28009__i] = arguments[G__28009__i + 3]; ++G__28009__i;}
G__28008 = new cljs.core.IndexedSeq(G__28009__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__28008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__28064 = null;
var G__28064__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28064__1 = (function (result){
var G__28050 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28050) : rf.call(null,G__28050));
});
var G__28064__2 = (function (result,input){
var G__28051 = result;
var G__28052 = (function (){var G__28053 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28053) : f.call(null,G__28053));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28051,G__28052) : rf.call(null,G__28051,G__28052));
});
var G__28064__3 = (function() { 
var G__28065__delegate = function (result,input,inputs){
var G__28054 = result;
var G__28055 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28054,G__28055) : rf.call(null,G__28054,G__28055));
};
var G__28065 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__28066__i = 0, G__28066__a = new Array(arguments.length -  2);
while (G__28066__i < G__28066__a.length) {G__28066__a[G__28066__i] = arguments[G__28066__i + 2]; ++G__28066__i;}
  inputs = new cljs.core.IndexedSeq(G__28066__a,0);
} 
return G__28065__delegate.call(this,result,input,inputs);};
G__28065.cljs$lang$maxFixedArity = 2;
G__28065.cljs$lang$applyTo = (function (arglist__28067){
var result = cljs.core.first(arglist__28067);
arglist__28067 = cljs.core.next(arglist__28067);
var input = cljs.core.first(arglist__28067);
var inputs = cljs.core.rest(arglist__28067);
return G__28065__delegate(result,input,inputs);
});
G__28065.cljs$core$IFn$_invoke$arity$variadic = G__28065__delegate;
return G__28065;
})()
;
G__28064 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__28064__0.call(this);
case 1:
return G__28064__1.call(this,result);
case 2:
return G__28064__2.call(this,result,input);
default:
var G__28068 = null;
if (arguments.length > 2) {
var G__28069__i = 0, G__28069__a = new Array(arguments.length -  2);
while (G__28069__i < G__28069__a.length) {G__28069__a[G__28069__i] = arguments[G__28069__i + 2]; ++G__28069__i;}
G__28068 = new cljs.core.IndexedSeq(G__28069__a,0);
}
return G__28064__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__28068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28064.cljs$lang$maxFixedArity = 2;
G__28064.cljs$lang$applyTo = G__28064__3.cljs$lang$applyTo;
G__28064.cljs$core$IFn$_invoke$arity$0 = G__28064__0;
G__28064.cljs$core$IFn$_invoke$arity$1 = G__28064__1;
G__28064.cljs$core$IFn$_invoke$arity$2 = G__28064__2;
G__28064.cljs$core$IFn$_invoke$arity$variadic = G__28064__3.cljs$core$IFn$_invoke$arity$variadic;
return G__28064;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18842__auto___28070 = size;
var i_28071 = (0);
while(true){
if((i_28071 < n__18842__auto___28070)){
cljs.core.chunk_append(b,(function (){var G__28056 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28071);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28056) : f.call(null,G__28056));
})());

var G__28072 = (i_28071 + (1));
i_28071 = G__28072;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__28057 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28057) : f.call(null,G__28057));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__28058 = cljs.core.first(s1);
var G__28059 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28058,G__28059) : f.call(null,G__28058,G__28059));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__28060 = cljs.core.first(s1);
var G__28061 = cljs.core.first(s2);
var G__28062 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28060,G__28061,G__28062) : f.call(null,G__28060,G__28061,G__28062));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__28073__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__28010_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__28010_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__28073 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__28074__i = 0, G__28074__a = new Array(arguments.length -  4);
while (G__28074__i < G__28074__a.length) {G__28074__a[G__28074__i] = arguments[G__28074__i + 4]; ++G__28074__i;}
  colls = new cljs.core.IndexedSeq(G__28074__a,0);
} 
return G__28073__delegate.call(this,f,c1,c2,c3,colls);};
G__28073.cljs$lang$maxFixedArity = 4;
G__28073.cljs$lang$applyTo = (function (arglist__28075){
var f = cljs.core.first(arglist__28075);
arglist__28075 = cljs.core.next(arglist__28075);
var c1 = cljs.core.first(arglist__28075);
arglist__28075 = cljs.core.next(arglist__28075);
var c2 = cljs.core.first(arglist__28075);
arglist__28075 = cljs.core.next(arglist__28075);
var c3 = cljs.core.first(arglist__28075);
var colls = cljs.core.rest(arglist__28075);
return G__28073__delegate(f,c1,c2,c3,colls);
});
G__28073.cljs$core$IFn$_invoke$arity$variadic = G__28073__delegate;
return G__28073;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__28076 = null;
if (arguments.length > 4) {
var G__28077__i = 0, G__28077__a = new Array(arguments.length -  4);
while (G__28077__i < G__28077__a.length) {G__28077__a[G__28077__i] = arguments[G__28077__i + 4]; ++G__28077__i;}
G__28076 = new cljs.core.IndexedSeq(G__28077__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__28076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__28086 = null;
var G__28086__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28086__1 = (function (result){
var G__28083 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28083) : rf.call(null,G__28083));
});
var G__28086__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__28084 = result;
var G__28085 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28084,G__28085) : rf.call(null,G__28084,G__28085));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__28086 = function(result,input){
switch(arguments.length){
case 0:
return G__28086__0.call(this);
case 1:
return G__28086__1.call(this,result);
case 2:
return G__28086__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28086.cljs$core$IFn$_invoke$arity$0 = G__28086__0;
G__28086.cljs$core$IFn$_invoke$arity$1 = G__28086__1;
G__28086.cljs$core$IFn$_invoke$arity$2 = G__28086__2;
return G__28086;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__28093 = null;
var G__28093__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28093__1 = (function (result){
var G__28090 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28090) : rf.call(null,G__28090));
});
var G__28093__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__28091 = result;
var G__28092 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28091,G__28092) : rf.call(null,G__28091,G__28092));
}
});
G__28093 = function(result,input){
switch(arguments.length){
case 0:
return G__28093__0.call(this);
case 1:
return G__28093__1.call(this,result);
case 2:
return G__28093__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28093.cljs$core$IFn$_invoke$arity$0 = G__28093__0;
G__28093.cljs$core$IFn$_invoke$arity$1 = G__28093__1;
G__28093.cljs$core$IFn$_invoke$arity$2 = G__28093__2;
return G__28093;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__28094 = (n__$1 - (1));
var G__28095 = cljs.core.rest(s);
n__$1 = G__28094;
coll__$1 = G__28095;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__28098 = cljs.core.next(s);
var G__28099 = cljs.core.next(lead);
s = G__28098;
lead = G__28099;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__28112 = null;
var G__28112__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28112__1 = (function (result){
var G__28106 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28106) : rf.call(null,G__28106));
});
var G__28112__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__17943__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__17943__auto__)){
var G__28107 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28107) : pred.call(null,G__28107));
} else {
return and__17943__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__28108 = result;
var G__28109 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28108,G__28109) : rf.call(null,G__28108,G__28109));
}
});
G__28112 = function(result,input){
switch(arguments.length){
case 0:
return G__28112__0.call(this);
case 1:
return G__28112__1.call(this,result);
case 2:
return G__28112__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28112.cljs$core$IFn$_invoke$arity$0 = G__28112__0;
G__28112.cljs$core$IFn$_invoke$arity$1 = G__28112__1;
G__28112.cljs$core$IFn$_invoke$arity$2 = G__28112__2;
return G__28112;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__17943__auto__ = s;
if(and__17943__auto__){
var G__28111 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__28111) : pred__$1.call(null,G__28111));
} else {
return and__17943__auto__;
}
})())){
var G__28113 = pred__$1;
var G__28114 = cljs.core.rest(s);
pred__$1 = G__28113;
coll__$1 = G__28114;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__28123 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28123) : f.call(null,G__28123));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__28126__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__28126 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__28127__i = 0, G__28127__a = new Array(arguments.length -  2);
while (G__28127__i < G__28127__a.length) {G__28127__a[G__28127__i] = arguments[G__28127__i + 2]; ++G__28127__i;}
  colls = new cljs.core.IndexedSeq(G__28127__a,0);
} 
return G__28126__delegate.call(this,c1,c2,colls);};
G__28126.cljs$lang$maxFixedArity = 2;
G__28126.cljs$lang$applyTo = (function (arglist__28128){
var c1 = cljs.core.first(arglist__28128);
arglist__28128 = cljs.core.next(arglist__28128);
var c2 = cljs.core.first(arglist__28128);
var colls = cljs.core.rest(arglist__28128);
return G__28126__delegate(c1,c2,colls);
});
G__28126.cljs$core$IFn$_invoke$arity$variadic = G__28126__delegate;
return G__28126;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__28129 = null;
if (arguments.length > 2) {
var G__28130__i = 0, G__28130__a = new Array(arguments.length -  2);
while (G__28130__i < G__28130__a.length) {G__28130__a[G__28130__i] = arguments[G__28130__i + 2]; ++G__28130__i;}
G__28129 = new cljs.core.IndexedSeq(G__28130__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__28129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__28145 = null;
var G__28145__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28145__1 = (function (result){
var G__28138 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28138) : rf.call(null,G__28138));
});
var G__28145__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__28139 = result;
var G__28140 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28139,G__28140) : rf.call(null,G__28139,G__28140));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__28141 = sepr;
var G__28142 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28141,G__28142) : rf.call(null,G__28141,G__28142));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__28143 = result;
var G__28144 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28143,G__28144) : rf.call(null,G__28143,G__28144));
}
});
G__28145 = function(result,input){
switch(arguments.length){
case 0:
return G__28145__0.call(this);
case 1:
return G__28145__1.call(this,result);
case 2:
return G__28145__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28145.cljs$core$IFn$_invoke$arity$0 = G__28145__0;
G__28145.cljs$core$IFn$_invoke$arity$1 = G__28145__1;
G__28145.cljs$core$IFn$_invoke$arity$2 = G__28145__2;
return G__28145;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__28154__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__28154 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__28155__i = 0, G__28155__a = new Array(arguments.length -  1);
while (G__28155__i < G__28155__a.length) {G__28155__a[G__28155__i] = arguments[G__28155__i + 1]; ++G__28155__i;}
  colls = new cljs.core.IndexedSeq(G__28155__a,0);
} 
return G__28154__delegate.call(this,f,colls);};
G__28154.cljs$lang$maxFixedArity = 1;
G__28154.cljs$lang$applyTo = (function (arglist__28156){
var f = cljs.core.first(arglist__28156);
var colls = cljs.core.rest(arglist__28156);
return G__28154__delegate(f,colls);
});
G__28154.cljs$core$IFn$_invoke$arity$variadic = G__28154__delegate;
return G__28154;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__28157 = null;
if (arguments.length > 1) {
var G__28158__i = 0, G__28158__a = new Array(arguments.length -  1);
while (G__28158__i < G__28158__a.length) {G__28158__a[G__28158__i] = arguments[G__28158__i + 1]; ++G__28158__i;}
G__28157 = new cljs.core.IndexedSeq(G__28158__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__28177 = null;
var G__28177__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28177__1 = (function (result){
var G__28171 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28171) : rf.call(null,G__28171));
});
var G__28177__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__28172 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28172) : pred.call(null,G__28172));
})())){
var G__28173 = result;
var G__28174 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28173,G__28174) : rf.call(null,G__28173,G__28174));
} else {
return result;
}
});
G__28177 = function(result,input){
switch(arguments.length){
case 0:
return G__28177__0.call(this);
case 1:
return G__28177__1.call(this,result);
case 2:
return G__28177__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28177.cljs$core$IFn$_invoke$arity$0 = G__28177__0;
G__28177.cljs$core$IFn$_invoke$arity$1 = G__28177__1;
G__28177.cljs$core$IFn$_invoke$arity$2 = G__28177__2;
return G__28177;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18842__auto___28178 = size;
var i_28179 = (0);
while(true){
if((i_28179 < n__18842__auto___28178)){
if(cljs.core.truth_((function (){var G__28175 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28179);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28175) : pred.call(null,G__28175));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_28179));
} else {
}

var G__28180 = (i_28179 + (1));
i_28179 = G__28180;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__28176 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28176) : pred.call(null,G__28176));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__28187 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__28187) : branch_QMARK_.call(null,G__28187));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__28188 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__28188) : children.call(null,G__28188));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__28189_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__28189_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__28192 = to;
if(G__28192){
var bit__18629__auto__ = (G__28192.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18629__auto__) || (G__28192.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__28193 = to;
if(G__28193){
var bit__18629__auto__ = (G__28193.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18629__auto__) || (G__28193.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__28195 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28195) : f.call(null,G__28195));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__28196__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__28196 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__28197__i = 0, G__28197__a = new Array(arguments.length -  4);
while (G__28197__i < G__28197__a.length) {G__28197__a[G__28197__i] = arguments[G__28197__i + 4]; ++G__28197__i;}
  colls = new cljs.core.IndexedSeq(G__28197__a,0);
} 
return G__28196__delegate.call(this,f,c1,c2,c3,colls);};
G__28196.cljs$lang$maxFixedArity = 4;
G__28196.cljs$lang$applyTo = (function (arglist__28198){
var f = cljs.core.first(arglist__28198);
arglist__28198 = cljs.core.next(arglist__28198);
var c1 = cljs.core.first(arglist__28198);
arglist__28198 = cljs.core.next(arglist__28198);
var c2 = cljs.core.first(arglist__28198);
arglist__28198 = cljs.core.next(arglist__28198);
var c3 = cljs.core.first(arglist__28198);
var colls = cljs.core.rest(arglist__28198);
return G__28196__delegate(f,c1,c2,c3,colls);
});
G__28196.cljs$core$IFn$_invoke$arity$variadic = G__28196__delegate;
return G__28196;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__28199 = null;
if (arguments.length > 4) {
var G__28200__i = 0, G__28200__a = new Array(arguments.length -  4);
while (G__28200__i < G__28200__a.length) {G__28200__a[G__28200__i] = arguments[G__28200__i + 4]; ++G__28200__i;}
G__28199 = new cljs.core.IndexedSeq(G__28200__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__28199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__28202 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28202) : pred.call(null,G__28202));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__28217 = m__$1;
if(G__28217){
var bit__18636__auto__ = (G__28217.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18636__auto__) || (G__28217.cljs$core$ILookup$)){
return true;
} else {
if((!G__28217.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__28217);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__28217);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__28218 = sentinel;
var G__28219 = m__$2;
var G__28220 = cljs.core.next(ks__$1);
sentinel = G__28218;
m__$1 = G__28219;
ks__$1 = G__28220;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__28221,v){
var vec__28226 = p__28221;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28226,(0),null);
var ks = cljs.core.nthnext(vec__28226,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__28227,f){
var vec__28265 = p__28227;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28265,(0),null);
var ks = cljs.core.nthnext(vec__28265,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28266 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28266) : f.call(null,G__28266));
})());
}
});
var update_in__4 = (function (m,p__28228,f,a){
var vec__28267 = p__28228;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28267,(0),null);
var ks = cljs.core.nthnext(vec__28267,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28268 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28269 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28268,G__28269) : f.call(null,G__28268,G__28269));
})());
}
});
var update_in__5 = (function (m,p__28229,f,a,b){
var vec__28270 = p__28229;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28270,(0),null);
var ks = cljs.core.nthnext(vec__28270,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28271 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28272 = a;
var G__28273 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28271,G__28272,G__28273) : f.call(null,G__28271,G__28272,G__28273));
})());
}
});
var update_in__6 = (function (m,p__28230,f,a,b,c){
var vec__28274 = p__28230;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28274,(0),null);
var ks = cljs.core.nthnext(vec__28274,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28275 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28276 = a;
var G__28277 = b;
var G__28278 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28275,G__28276,G__28277,G__28278) : f.call(null,G__28275,G__28276,G__28277,G__28278));
})());
}
});
var update_in__7 = (function() { 
var G__28280__delegate = function (m,p__28231,f,a,b,c,args){
var vec__28279 = p__28231;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28279,(0),null);
var ks = cljs.core.nthnext(vec__28279,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__28280 = function (m,p__28231,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__28281__i = 0, G__28281__a = new Array(arguments.length -  6);
while (G__28281__i < G__28281__a.length) {G__28281__a[G__28281__i] = arguments[G__28281__i + 6]; ++G__28281__i;}
  args = new cljs.core.IndexedSeq(G__28281__a,0);
} 
return G__28280__delegate.call(this,m,p__28231,f,a,b,c,args);};
G__28280.cljs$lang$maxFixedArity = 6;
G__28280.cljs$lang$applyTo = (function (arglist__28282){
var m = cljs.core.first(arglist__28282);
arglist__28282 = cljs.core.next(arglist__28282);
var p__28231 = cljs.core.first(arglist__28282);
arglist__28282 = cljs.core.next(arglist__28282);
var f = cljs.core.first(arglist__28282);
arglist__28282 = cljs.core.next(arglist__28282);
var a = cljs.core.first(arglist__28282);
arglist__28282 = cljs.core.next(arglist__28282);
var b = cljs.core.first(arglist__28282);
arglist__28282 = cljs.core.next(arglist__28282);
var c = cljs.core.first(arglist__28282);
var args = cljs.core.rest(arglist__28282);
return G__28280__delegate(m,p__28231,f,a,b,c,args);
});
G__28280.cljs$core$IFn$_invoke$arity$variadic = G__28280__delegate;
return G__28280;
})()
;
update_in = function(m,p__28231,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__28231,f);
case 4:
return update_in__4.call(this,m,p__28231,f,a);
case 5:
return update_in__5.call(this,m,p__28231,f,a,b);
case 6:
return update_in__6.call(this,m,p__28231,f,a,b,c);
default:
var G__28283 = null;
if (arguments.length > 6) {
var G__28284__i = 0, G__28284__a = new Array(arguments.length -  6);
while (G__28284__i < G__28284__a.length) {G__28284__a[G__28284__i] = arguments[G__28284__i + 6]; ++G__28284__i;}
G__28283 = new cljs.core.IndexedSeq(G__28284__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__28231,f,a,b,c, G__28283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28295 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28295) : f.call(null,G__28295));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28296 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28297 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28296,G__28297) : f.call(null,G__28296,G__28297));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28298 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28299 = x;
var G__28300 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28298,G__28299,G__28300) : f.call(null,G__28298,G__28299,G__28300));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28301 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28302 = x;
var G__28303 = y;
var G__28304 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__28301,G__28302,G__28303,G__28304) : f.call(null,G__28301,G__28302,G__28303,G__28304));
})());
});
var update__7 = (function() { 
var G__28305__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__28305 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__28306__i = 0, G__28306__a = new Array(arguments.length -  6);
while (G__28306__i < G__28306__a.length) {G__28306__a[G__28306__i] = arguments[G__28306__i + 6]; ++G__28306__i;}
  more = new cljs.core.IndexedSeq(G__28306__a,0);
} 
return G__28305__delegate.call(this,m,k,f,x,y,z,more);};
G__28305.cljs$lang$maxFixedArity = 6;
G__28305.cljs$lang$applyTo = (function (arglist__28307){
var m = cljs.core.first(arglist__28307);
arglist__28307 = cljs.core.next(arglist__28307);
var k = cljs.core.first(arglist__28307);
arglist__28307 = cljs.core.next(arglist__28307);
var f = cljs.core.first(arglist__28307);
arglist__28307 = cljs.core.next(arglist__28307);
var x = cljs.core.first(arglist__28307);
arglist__28307 = cljs.core.next(arglist__28307);
var y = cljs.core.first(arglist__28307);
arglist__28307 = cljs.core.next(arglist__28307);
var z = cljs.core.first(arglist__28307);
var more = cljs.core.rest(arglist__28307);
return G__28305__delegate(m,k,f,x,y,z,more);
});
G__28305.cljs$core$IFn$_invoke$arity$variadic = G__28305__delegate;
return G__28305;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__28308 = null;
if (arguments.length > 6) {
var G__28309__i = 0, G__28309__a = new Array(arguments.length -  6);
while (G__28309__i < G__28309__a.length) {G__28309__a[G__28309__i] = arguments[G__28309__i + 6]; ++G__28309__i;}
G__28308 = new cljs.core.IndexedSeq(G__28309__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__28308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__28310 = (ll - (5));
var G__28311 = r;
ll = G__28310;
ret = G__28311;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__28316 = cljs.core.pv_aget(node,(0));
var G__28317 = (level - (5));
node = G__28316;
level = G__28317;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__28318 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__28319 = (level - (5));
node = G__28318;
level = G__28319;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__28329 = init__$2;
var G__28330 = (j + i);
var G__28331 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28329,G__28330,G__28331) : f.call(null,G__28329,G__28330,G__28331));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__28342 = (j + (1));
var G__28343 = init__$3;
j = G__28342;
init__$2 = G__28343;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28332 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28332) : cljs.core.deref.call(null,G__28332));
} else {
var G__28344 = (i + len);
var G__28345 = init__$2;
i = G__28344;
init__$1 = G__28345;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__28333 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__28333) : cljs.core.tv_editable_root.call(null,G__28333));
})(),(function (){var G__28334 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__28334) : cljs.core.tv_editable_tail.call(null,G__28334));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__28335 = init__$2;
var G__28336 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28335,G__28336) : f.call(null,G__28335,G__28336));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__28346 = (j + (1));
var G__28347 = init__$3;
j = G__28346;
init__$2 = G__28347;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28337 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28337) : cljs.core.deref.call(null,G__28337));
} else {
var G__28348 = (i + len);
var G__28349 = init__$2;
i = G__28348;
init__$1 = G__28349;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__28338 = coll__$1;
var G__28339 = cljs.core.first_array_for_longvec(coll__$1);
var G__28340 = (0);
var G__28341 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28338,G__28339,G__28340,G__28341) : cljs.core.chunked_seq.call(null,G__28338,G__28339,G__28340,G__28341));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__18842__auto___28350 = len;
var i_28351 = (0);
while(true){
if((i_28351 < n__18842__auto___28350)){
(new_tail[i_28351] = (self__.tail[i_28351]));

var G__28352 = (i_28351 + (1));
i_28351 = G__28352;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__28353 = null;
var G__28353__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__28353__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__28353 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28353__2.call(this,self__,k);
case 3:
return G__28353__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28353.cljs$core$IFn$_invoke$arity$2 = G__28353__2;
G__28353.cljs$core$IFn$_invoke$arity$3 = G__28353__3;
return G__28353;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args28328){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28328)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__28354 = (i + (1));
var G__28355 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__28354;
out = G__28355;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28356__i = 0, G__28356__a = new Array(arguments.length -  0);
while (G__28356__i < G__28356__a.length) {G__28356__a[G__28356__i] = arguments[G__28356__i + 0]; ++G__28356__i;}
  args = new cljs.core.IndexedSeq(G__28356__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__28357){
var args = cljs.core.seq(arglist__28357);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__28358 = self__.vec;
var G__28359 = self__.node;
var G__28360 = self__.i;
var G__28361 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28358,G__28359,G__28360,G__28361) : cljs.core.chunked_seq.call(null,G__28358,G__28359,G__28360,G__28361));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__28362 = self__.vec;
var G__28363 = (self__.i + self__.off);
var G__28364 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__28362,G__28363,G__28364) : cljs.core.subvec.call(null,G__28362,G__28363,G__28364));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__28365 = self__.vec;
var G__28366 = (self__.i + self__.off);
var G__28367 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__28365,G__28366,G__28367) : cljs.core.subvec.call(null,G__28365,G__28366,G__28367));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__28368 = self__.vec;
var G__28369 = self__.node;
var G__28370 = self__.i;
var G__28371 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28368,G__28369,G__28370,G__28371) : cljs.core.chunked_seq.call(null,G__28368,G__28369,G__28370,G__28371));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__28372 = self__.vec;
var G__28373 = cljs.core.unchecked_array_for(self__.vec,end);
var G__28374 = end;
var G__28375 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28372,G__28373,G__28374,G__28375) : cljs.core.chunked_seq.call(null,G__28372,G__28373,G__28374,G__28375));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__28376 = self__.vec;
var G__28377 = self__.node;
var G__28378 = self__.i;
var G__28379 = self__.off;
var G__28380 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__28376,G__28377,G__28378,G__28379,G__28380) : cljs.core.chunked_seq.call(null,G__28376,G__28377,G__28378,G__28379,G__28380));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__28381 = self__.vec;
var G__28382 = cljs.core.unchecked_array_for(self__.vec,end);
var G__28383 = end;
var G__28384 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__28381,G__28382,G__28383,G__28384) : cljs.core.chunked_seq.call(null,G__28381,G__28382,G__28383,G__28384));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__28386 = self__.meta;
var G__28387 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__28388 = self__.start;
var G__28389 = (function (){var x__18272__auto__ = self__.end;
var y__18273__auto__ = (v_pos + (1));
return ((x__18272__auto__ > y__18273__auto__) ? x__18272__auto__ : y__18273__auto__);
})();
var G__28390 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28386,G__28387,G__28388,G__28389,G__28390) : cljs.core.build_subvec.call(null,G__28386,G__28387,G__28388,G__28389,G__28390));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__28391 = self__.meta;
var G__28392 = self__.v;
var G__28393 = self__.start;
var G__28394 = (self__.end - (1));
var G__28395 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28391,G__28392,G__28393,G__28394,G__28395) : cljs.core.build_subvec.call(null,G__28391,G__28392,G__28393,G__28394,G__28395));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__28397 = meta__$1;
var G__28398 = self__.v;
var G__28399 = self__.start;
var G__28400 = self__.end;
var G__28401 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28397,G__28398,G__28399,G__28400,G__28401) : cljs.core.build_subvec.call(null,G__28397,G__28398,G__28399,G__28400,G__28401));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__28402 = self__.meta;
var G__28403 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__28404 = self__.start;
var G__28405 = (self__.end + (1));
var G__28406 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__28402,G__28403,G__28404,G__28405,G__28406) : cljs.core.build_subvec.call(null,G__28402,G__28403,G__28404,G__28405,G__28406));
});

cljs.core.Subvec.prototype.call = (function() {
var G__28407 = null;
var G__28407__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__28407__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__28407 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28407__2.call(this,self__,k);
case 3:
return G__28407__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28407.cljs$core$IFn$_invoke$arity$2 = G__28407__2;
G__28407.cljs$core$IFn$_invoke$arity$3 = G__28407__3;
return G__28407;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args28385){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28385)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__28408 = meta;
var G__28409 = v.v;
var G__28410 = (v.start + start);
var G__28411 = (v.start + end);
var G__28412 = __hash;
meta = G__28408;
v = G__28409;
start = G__28410;
end = G__28411;
__hash = G__28412;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj28419 = {};
return obj28419;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__28427 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__28428 = (level - (5));
node = G__28427;
level = G__28428;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__28432 = null;
var G__28432__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28432__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28432 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28432__2.call(this,self__,k);
case 3:
return G__28432__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28432.cljs$core$IFn$_invoke$arity$2 = G__28432__2;
G__28432.cljs$core$IFn$_invoke$arity$3 = G__28432__3;
return G__28432;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args28429){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28429)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__17955__auto__ = self__.front;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17955__auto__ = self__.rear;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__28433 = (i + incr);
i = G__28433;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__28434 = (i + (1));
var G__28435 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__28434;
out = G__28435;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj28439 = {};
return obj28439;
})();
var l = ks.length;
var i_28440 = (0);
while(true){
if((i_28440 < l)){
var k_28441 = (ks[i_28440]);
(new_obj[k_28441] = (obj[k_28441]));

var G__28442 = (i_28440 + (1));
i_28440 = G__28442;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17943__auto__ = (function (){var G__28446 = k;
return goog.isString(G__28446);
})();
if(cljs.core.truth_(and__17943__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17943__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__28447 = init__$1;
var G__28448 = k;
var G__28449 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28447,G__28448,G__28449) : f.call(null,G__28447,G__28448,G__28449));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28450 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28450) : cljs.core.deref.call(null,G__28450));
} else {
var G__28456 = cljs.core.rest(keys__$1);
var G__28457 = init__$2;
keys__$1 = G__28456;
init__$1 = G__28457;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17943__auto__ = (function (){var G__28452 = k;
return goog.isString(G__28452);
})();
if(cljs.core.truth_(and__17943__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17943__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__28453 = k;
return goog.isString(G__28453);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17943__auto__ = (function (){var G__28455 = k;
return goog.isString(G__28455);
})();
if(cljs.core.truth_(and__17943__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17943__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__28443_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__28443_SHARP_,(self__.strobj[p1__28443_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__28458 = null;
var G__28458__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28458__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28458 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28458__2.call(this,self__,k);
case 3:
return G__28458__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28458.cljs$core$IFn$_invoke$arity$2 = G__28458__2;
G__28458.cljs$core$IFn$_invoke$arity$3 = G__28458__3;
return G__28458;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args28444){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28444)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj28460 = {};
return obj28460;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__28461 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28461,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28461,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__28462 = (i + (2));
i = G__28462;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__28463 = (i + (2));
i = G__28463;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__28464 = (i + (2));
i = G__28464;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__28465 = (i + (2));
i = G__28465;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__28466 = (i + (2));
i = G__28466;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__17955__auto__ = (function (){var G__28470 = k;
return goog.isString(G__28470);
})();
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_28471 = (0);
while(true){
if((i_28471 < l)){
(narr[i_28471] = (arr[i_28471]));

var G__28472 = (i_28471 + (1));
i_28471 = G__28472;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28474 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28474) : cljs.core.keys.call(null,G__28474));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28475 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28475) : cljs.core.vals.call(null,G__28475));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28476 = cljs.core.seq(coll);
var chunk__28477 = null;
var count__28478 = (0);
var i__28479 = (0);
while(true){
if((i__28479 < count__28478)){
var vec__28480 = chunk__28477.cljs$core$IIndexed$_nth$arity$2(null,i__28479);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28480,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28480,(1),null);
var G__28481_28494 = v;
var G__28482_28495 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28481_28494,G__28482_28495) : f.call(null,G__28481_28494,G__28482_28495));

var G__28496 = seq__28476;
var G__28497 = chunk__28477;
var G__28498 = count__28478;
var G__28499 = (i__28479 + (1));
seq__28476 = G__28496;
chunk__28477 = G__28497;
count__28478 = G__28498;
i__28479 = G__28499;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28476);
if(temp__4126__auto__){
var seq__28476__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28476__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__28476__$1);
var G__28500 = cljs.core.chunk_rest(seq__28476__$1);
var G__28501 = c__18742__auto__;
var G__28502 = cljs.core.count(c__18742__auto__);
var G__28503 = (0);
seq__28476 = G__28500;
chunk__28477 = G__28501;
count__28478 = G__28502;
i__28479 = G__28503;
continue;
} else {
var vec__28483 = cljs.core.first(seq__28476__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28483,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28483,(1),null);
var G__28484_28504 = v;
var G__28485_28505 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28484_28504,G__28485_28505) : f.call(null,G__28484_28504,G__28485_28505));

var G__28506 = cljs.core.next(seq__28476__$1);
var G__28507 = null;
var G__28508 = (0);
var G__28509 = (0);
seq__28476 = G__28506;
chunk__28477 = G__28507;
count__28478 = G__28508;
i__28479 = G__28509;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__28486 = init__$1;
var G__28487 = (self__.arr[i]);
var G__28488 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28486,G__28487,G__28488) : f.call(null,G__28486,G__28487,G__28488));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28489 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28489) : cljs.core.deref.call(null,G__28489));
} else {
var G__28510 = (i + (2));
var G__28511 = init__$2;
i = G__28510;
init__$1 = G__28511;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__28490 = other;
if(G__28490){
var bit__18629__auto__ = (G__28490.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18629__auto__) || (G__28490.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__28512 = (i + (2));
i = G__28512;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj28492 = {};
return obj28492;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__28513 = (s + (2));
var G__28514 = d;
s = G__28513;
d = G__28514;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__28515 = (s + (2));
var G__28516 = (d + (2));
s = G__28515;
d = G__28516;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__28493 = cljs.core.aclone(self__.arr);
(G__28493[(idx + (1))] = v);

return G__28493;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28517 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28518 = cljs.core.next(es);
ret = G__28517;
es = G__28518;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__28519 = null;
var G__28519__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28519__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28519 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28519__2.call(this,self__,k);
case 3:
return G__28519__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28519.cljs$core$IFn$_invoke$arity$2 = G__28519__2;
G__28519.cljs$core$IFn$_invoke$arity$3 = G__28519__3;
return G__28519;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args28473){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28473)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28520 = (i + (2));
var G__28521 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__28520;
ret = G__28521;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__28522_28530 = self__.arr;
G__28522_28530.pop();

G__28522_28530.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__28523 = self__.len;
var G__28524 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__28523,G__28524) : cljs.core.array__GT_transient_hash_map.call(null,G__28523,G__28524));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__28525 = o;
if(G__28525){
var bit__18636__auto__ = (G__28525.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18636__auto__) || (G__28525.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28525);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__28526 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28526) : cljs.core.key.call(null,G__28526));
})(),(function (){var G__28527 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28527) : cljs.core.val.call(null,G__28527));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__28531 = cljs.core.next(es);
var G__28532 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__28528 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28528) : cljs.core.key.call(null,G__28528));
})(),(function (){var G__28529 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28529) : cljs.core.val.call(null,G__28529));
})());
es = G__28531;
tcoll__$2 = G__28532;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__28533 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__28534 = (i + (2));
out = G__28533;
i = G__28534;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__28537 = cljs.core.aclone(arr);
(G__28537[i] = a);

return G__28537;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__28538 = cljs.core.aclone(arr);
(G__28538[i] = a);

(G__28538[j] = b);

return G__28538;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__28543 = init__$1;
var G__28544 = k;
var G__28545 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28543,G__28544,G__28545) : f.call(null,G__28543,G__28544,G__28545));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28546 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28546) : cljs.core.deref.call(null,G__28546));
} else {
var G__28547 = (i + (2));
var G__28548 = init__$2;
i = G__28547;
init__$1 = G__28548;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28549 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__28549) : cljs.core.create_inode_seq.call(null,G__28549));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_28563 = (0);
var j_28564 = (0);
while(true){
if((i_28563 < (32))){
if((((self__.bitmap >>> i_28563) & (1)) === (0))){
var G__28565 = (i_28563 + (1));
var G__28566 = j_28564;
i_28563 = G__28565;
j_28564 = G__28566;
continue;
} else {
(nodes[i_28563] = ((!(((self__.arr[j_28564]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_28564])),(self__.arr[j_28564]),(self__.arr[(j_28564 + (1))]),added_leaf_QMARK_):(self__.arr[(j_28564 + (1))])));

var G__28567 = (i_28563 + (1));
var G__28568 = (j_28564 + (2));
i_28563 = G__28567;
j_28564 = G__28568;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__28550 = edit__$1;
var G__28551 = (shift + (5));
var G__28552 = key_or_nil;
var G__28553 = val_or_node;
var G__28554 = hash;
var G__28555 = key;
var G__28556 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__28550,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556) : cljs.core.create_node.call(null,G__28550,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_28569 = (0);
var j_28570 = (0);
while(true){
if((i_28569 < (32))){
if((((self__.bitmap >>> i_28569) & (1)) === (0))){
var G__28571 = (i_28569 + (1));
var G__28572 = j_28570;
i_28569 = G__28571;
j_28570 = G__28572;
continue;
} else {
(nodes[i_28569] = ((!(((self__.arr[j_28570]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_28570])),(self__.arr[j_28570]),(self__.arr[(j_28570 + (1))]),added_leaf_QMARK_):(self__.arr[(j_28570 + (1))])));

var G__28573 = (i_28569 + (1));
var G__28574 = (j_28570 + (2));
i_28569 = G__28573;
j_28570 = G__28574;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__28557 = (shift + (5));
var G__28558 = key_or_nil;
var G__28559 = val_or_node;
var G__28560 = hash;
var G__28561 = key;
var G__28562 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__28557,G__28558,G__28559,G__28560,G__28561,G__28562) : cljs.core.create_node.call(null,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__28575 = (i + (1));
var G__28576 = (j + (2));
var G__28577 = (bitmap | ((1) << i));
i = G__28575;
j = G__28576;
bitmap = G__28577;
continue;
} else {
var G__28578 = (i + (1));
var G__28579 = j;
var G__28580 = bitmap;
i = G__28578;
j = G__28579;
bitmap = G__28580;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28581 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__28581) : cljs.core.create_array_node_seq.call(null,G__28581));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28582 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28582) : cljs.core.deref.call(null,G__28582));
} else {
var G__28583 = (i + (1));
var G__28584 = init__$2;
i = G__28583;
init__$1 = G__28584;
continue;
}
} else {
var G__28585 = (i + (1));
var G__28586 = init__$1;
i = G__28585;
init__$1 = G__28586;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__28587 = (i + (2));
i = G__28587;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28588 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__28588) : cljs.core.create_inode_seq.call(null,G__28588));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__28589 = self__.nodes;
var G__28590 = (self__.i + (2));
var G__28591 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__28589,G__28590,G__28591) : cljs.core.create_inode_seq.call(null,G__28589,G__28590,G__28591));
} else {
var G__28592 = self__.nodes;
var G__28593 = self__.i;
var G__28594 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__28592,G__28593,G__28594) : cljs.core.create_inode_seq.call(null,G__28592,G__28593,G__28594));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__28598 = (j + (2));
j = G__28598;
continue;
}
} else {
var G__28599 = (j + (2));
j = G__28599;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__28600 = null;
var G__28601 = self__.nodes;
var G__28602 = self__.i;
var G__28603 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__28600,G__28601,G__28602,G__28603) : cljs.core.create_array_node_seq.call(null,G__28600,G__28601,G__28602,G__28603));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__28608 = (j + (1));
j = G__28608;
continue;
}
} else {
var G__28609 = (j + (1));
j = G__28609;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28611 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28611) : cljs.core.keys.call(null,G__28611));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28612 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28612) : cljs.core.vals.call(null,G__28612));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28613 = cljs.core.seq(coll);
var chunk__28614 = null;
var count__28615 = (0);
var i__28616 = (0);
while(true){
if((i__28616 < count__28615)){
var vec__28617 = chunk__28614.cljs$core$IIndexed$_nth$arity$2(null,i__28616);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28617,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28617,(1),null);
var G__28618_28629 = v;
var G__28619_28630 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28618_28629,G__28619_28630) : f.call(null,G__28618_28629,G__28619_28630));

var G__28631 = seq__28613;
var G__28632 = chunk__28614;
var G__28633 = count__28615;
var G__28634 = (i__28616 + (1));
seq__28613 = G__28631;
chunk__28614 = G__28632;
count__28615 = G__28633;
i__28616 = G__28634;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28613);
if(temp__4126__auto__){
var seq__28613__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28613__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__28613__$1);
var G__28635 = cljs.core.chunk_rest(seq__28613__$1);
var G__28636 = c__18742__auto__;
var G__28637 = cljs.core.count(c__18742__auto__);
var G__28638 = (0);
seq__28613 = G__28635;
chunk__28614 = G__28636;
count__28615 = G__28637;
i__28616 = G__28638;
continue;
} else {
var vec__28620 = cljs.core.first(seq__28613__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28620,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28620,(1),null);
var G__28621_28639 = v;
var G__28622_28640 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28621_28639,G__28622_28640) : f.call(null,G__28621_28639,G__28622_28640));

var G__28641 = cljs.core.next(seq__28613__$1);
var G__28642 = null;
var G__28643 = (0);
var G__28644 = (0);
seq__28613 = G__28641;
chunk__28614 = G__28642;
count__28615 = G__28643;
i__28616 = G__28644;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__28623 = init;
var G__28624 = null;
var G__28625 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28623,G__28624,G__28625) : f.call(null,G__28623,G__28624,G__28625));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28626 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28626) : cljs.core.deref.call(null,G__28626));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj28628 = {};
return obj28628;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28645 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28646 = cljs.core.next(es);
ret = G__28645;
es = G__28646;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__28647 = null;
var G__28647__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28647__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28647 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28647__2.call(this,self__,k);
case 3:
return G__28647__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28647.cljs$core$IFn$_invoke$arity$2 = G__28647__2;
G__28647.cljs$core$IFn$_invoke$arity$3 = G__28647__3;
return G__28647;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args28610){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28610)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28648 = (i + (2));
var G__28649 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__28648;
ret = G__28649;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28650 = (i + (1));
var G__28651 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__28650;
out = G__28651;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__28652 = o;
if(G__28652){
var bit__18636__auto__ = (G__28652.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18636__auto__) || (G__28652.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28652.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28652);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28652);
}
})()){
return tcoll.assoc_BANG_((function (){var G__28653 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28653) : cljs.core.key.call(null,G__28653));
})(),(function (){var G__28654 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28654) : cljs.core.val.call(null,G__28654));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__28657 = cljs.core.next(es);
var G__28658 = tcoll__$1.assoc_BANG_((function (){var G__28655 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28655) : cljs.core.key.call(null,G__28655));
})(),(function (){var G__28656 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28656) : cljs.core.val.call(null,G__28656));
})());
es = G__28657;
tcoll__$1 = G__28658;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__28659 = ((ascending_QMARK_)?t.left:t.right);
var G__28660 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__28659;
stack__$1 = G__28660;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28673 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28673) : cljs.core.deref.call(null,G__28673));
} else {
var init__$2 = (function (){var G__28674 = init__$1;
var G__28675 = node.key;
var G__28676 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28674,G__28675,G__28676) : f.call(null,G__28674,G__28675,G__28676));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28677 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28677) : cljs.core.deref.call(null,G__28677));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__28678 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28678) : cljs.core.deref.call(null,G__28678));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__28680 = null;
var G__28680__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28680__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28680 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28680__2.call(this,self__,k);
case 3:
return G__28680__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28680.cljs$core$IFn$_invoke$arity$2 = G__28680__2;
G__28680.cljs$core$IFn$_invoke$arity$3 = G__28680__3;
return G__28680;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args28679){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28679)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__28682 = null;
var G__28682__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28682__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28682 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28682__2.call(this,self__,k);
case 3:
return G__28682__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28682.cljs$core$IFn$_invoke$arity$2 = G__28682__2;
G__28682.cljs$core$IFn$_invoke$arity$3 = G__28682__3;
return G__28682;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args28681){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28681)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__28695 = k;
var G__28696 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28695,G__28696) : comp.call(null,G__28695,G__28696));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__28715 = k;
var G__28716 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28715,G__28716) : comp.call(null,G__28715,G__28716));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__28727 = k;
var G__28728 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28727,G__28728) : comp.call(null,G__28727,G__28728));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28730 = cljs.core.seq(coll);
var chunk__28731 = null;
var count__28732 = (0);
var i__28733 = (0);
while(true){
if((i__28733 < count__28732)){
var vec__28734 = chunk__28731.cljs$core$IIndexed$_nth$arity$2(null,i__28733);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28734,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28734,(1),null);
var G__28735_28747 = v;
var G__28736_28748 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28735_28747,G__28736_28748) : f.call(null,G__28735_28747,G__28736_28748));

var G__28749 = seq__28730;
var G__28750 = chunk__28731;
var G__28751 = count__28732;
var G__28752 = (i__28733 + (1));
seq__28730 = G__28749;
chunk__28731 = G__28750;
count__28732 = G__28751;
i__28733 = G__28752;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28730);
if(temp__4126__auto__){
var seq__28730__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28730__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__28730__$1);
var G__28753 = cljs.core.chunk_rest(seq__28730__$1);
var G__28754 = c__18742__auto__;
var G__28755 = cljs.core.count(c__18742__auto__);
var G__28756 = (0);
seq__28730 = G__28753;
chunk__28731 = G__28754;
count__28732 = G__28755;
i__28733 = G__28756;
continue;
} else {
var vec__28737 = cljs.core.first(seq__28730__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28737,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28737,(1),null);
var G__28738_28757 = v;
var G__28739_28758 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28738_28757,G__28739_28758) : f.call(null,G__28738_28757,G__28739_28758));

var G__28759 = cljs.core.next(seq__28730__$1);
var G__28760 = null;
var G__28761 = (0);
var G__28762 = (0);
seq__28730 = G__28759;
chunk__28731 = G__28760;
count__28732 = G__28761;
i__28733 = G__28762;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28740 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28740) : cljs.core.keys.call(null,G__28740));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28741 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28741) : cljs.core.vals.call(null,G__28741));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28742 = k;
var G__28743 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28742,G__28743) : self__.comp.call(null,G__28742,G__28743));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__28763 = t.left;
t = G__28763;
continue;
} else {
var G__28764 = t.right;
t = G__28764;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28765 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28766 = cljs.core.next(es);
ret = G__28765;
es = G__28766;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__28767 = null;
var G__28767__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28767__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28767 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28767__2.call(this,self__,k);
case 3:
return G__28767__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28767.cljs$core$IFn$_invoke$arity$2 = G__28767__2;
G__28767.cljs$core$IFn$_invoke$arity$3 = G__28767__3;
return G__28767;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args28729){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28729)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28744 = k;
var G__28745 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28744,G__28745) : self__.comp.call(null,G__28744,G__28745));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__28768 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28769 = t.left;
stack = G__28768;
t = G__28769;
continue;
} else {
var G__28770 = stack;
var G__28771 = t.right;
stack = G__28770;
t = G__28771;
continue;
}
} else {
if((c > (0))){
var G__28772 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28773 = t.right;
stack = G__28772;
t = G__28773;
continue;
} else {
var G__28774 = stack;
var G__28775 = t.left;
stack = G__28774;
t = G__28775;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__28746 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28746) : cljs.core.key.call(null,G__28746));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__28776 = cljs.core.nnext(in$);
var G__28777 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28776;
out = G__28777;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28778__i = 0, G__28778__a = new Array(arguments.length -  0);
while (G__28778__i < G__28778__a.length) {G__28778__a[G__28778__i] = arguments[G__28778__i + 0]; ++G__28778__i;}
  keyvals = new cljs.core.IndexedSeq(G__28778__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__28779){
var keyvals = cljs.core.seq(arglist__28779);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28780__i = 0, G__28780__a = new Array(arguments.length -  0);
while (G__28780__i < G__28780__a.length) {G__28780__a[G__28780__i] = arguments[G__28780__i + 0]; ++G__28780__i;}
  keyvals = new cljs.core.IndexedSeq(G__28780__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__28781){
var keyvals = cljs.core.seq(arglist__28781);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj28785 = {};
return obj28785;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__28786 = cljs.core.nnext(kvs);
kvs = G__28786;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28787__i = 0, G__28787__a = new Array(arguments.length -  0);
while (G__28787__i < G__28787__a.length) {G__28787__a[G__28787__i] = arguments[G__28787__i + 0]; ++G__28787__i;}
  keyvals = new cljs.core.IndexedSeq(G__28787__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__28788){
var keyvals = cljs.core.seq(arglist__28788);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__28789 = cljs.core.nnext(in$);
var G__28790 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28789;
out = G__28790;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28791__i = 0, G__28791__a = new Array(arguments.length -  0);
while (G__28791__i < G__28791__a.length) {G__28791__a[G__28791__i] = arguments[G__28791__i + 0]; ++G__28791__i;}
  keyvals = new cljs.core.IndexedSeq(G__28791__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__28792){
var keyvals = cljs.core.seq(arglist__28792);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__28793 = cljs.core.nnext(in$);
var G__28794 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28793;
out = G__28794;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__28795__i = 0, G__28795__a = new Array(arguments.length -  1);
while (G__28795__i < G__28795__a.length) {G__28795__a[G__28795__i] = arguments[G__28795__i + 1]; ++G__28795__i;}
  keyvals = new cljs.core.IndexedSeq(G__28795__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__28796){
var comparator = cljs.core.first(arglist__28796);
var keyvals = cljs.core.rest(arglist__28796);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28797 = self__.mseq;
if(G__28797){
var bit__18636__auto__ = (G__28797.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18636__auto__) || (G__28797.cljs$core$INext$)){
return true;
} else {
if((!G__28797.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28797);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28797);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28798 = self__.mseq;
if(G__28798){
var bit__18636__auto__ = (G__28798.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18636__auto__) || (G__28798.cljs$core$INext$)){
return true;
} else {
if((!G__28798.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28798);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28798);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28799 = self__.mseq;
if(G__28799){
var bit__18636__auto__ = (G__28799.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18636__auto__) || (G__28799.cljs$core$INext$)){
return true;
} else {
if((!G__28799.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28799);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28799);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28800 = self__.mseq;
if(G__28800){
var bit__18636__auto__ = (G__28800.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18636__auto__) || (G__28800.cljs$core$INext$)){
return true;
} else {
if((!G__28800.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28800);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28800);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__28801_SHARP_,p2__28802_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17955__auto__ = p1__28801_SHARP_;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__28802_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__28803__i = 0, G__28803__a = new Array(arguments.length -  0);
while (G__28803__i < G__28803__a.length) {G__28803__a[G__28803__i] = arguments[G__28803__i + 0]; ++G__28803__i;}
  maps = new cljs.core.IndexedSeq(G__28803__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__28804){
var maps = cljs.core.seq(arglist__28804);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28807 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28808 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28807,G__28808) : f.call(null,G__28807,G__28808));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__17955__auto__ = m1;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__28809__i = 0, G__28809__a = new Array(arguments.length -  1);
while (G__28809__i < G__28809__a.length) {G__28809__a[G__28809__i] = arguments[G__28809__i + 1]; ++G__28809__i;}
  maps = new cljs.core.IndexedSeq(G__28809__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__28810){
var f = cljs.core.first(arglist__28810);
var maps = cljs.core.rest(arglist__28810);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__28811 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__28812 = cljs.core.next(keys);
ret = G__28811;
keys = G__28812;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28815 = cljs.core.seq(coll);
var chunk__28816 = null;
var count__28817 = (0);
var i__28818 = (0);
while(true){
if((i__28818 < count__28817)){
var vec__28819 = chunk__28816.cljs$core$IIndexed$_nth$arity$2(null,i__28818);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28819,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28819,(1),null);
var G__28820_28825 = v;
var G__28821_28826 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28820_28825,G__28821_28826) : f.call(null,G__28820_28825,G__28821_28826));

var G__28827 = seq__28815;
var G__28828 = chunk__28816;
var G__28829 = count__28817;
var G__28830 = (i__28818 + (1));
seq__28815 = G__28827;
chunk__28816 = G__28828;
count__28817 = G__28829;
i__28818 = G__28830;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28815);
if(temp__4126__auto__){
var seq__28815__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28815__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__28815__$1);
var G__28831 = cljs.core.chunk_rest(seq__28815__$1);
var G__28832 = c__18742__auto__;
var G__28833 = cljs.core.count(c__18742__auto__);
var G__28834 = (0);
seq__28815 = G__28831;
chunk__28816 = G__28832;
count__28817 = G__28833;
i__28818 = G__28834;
continue;
} else {
var vec__28822 = cljs.core.first(seq__28815__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28822,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28822,(1),null);
var G__28823_28835 = v;
var G__28824_28836 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28823_28835,G__28824_28836) : f.call(null,G__28823_28835,G__28824_28836));

var G__28837 = cljs.core.next(seq__28815__$1);
var G__28838 = null;
var G__28839 = (0);
var G__28840 = (0);
seq__28815 = G__28837;
chunk__28816 = G__28838;
count__28817 = G__28839;
i__28818 = G__28840;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28813_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28813_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__28841 = null;
var G__28841__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28841__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28841 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28841__2.call(this,self__,k);
case 3:
return G__28841__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28841.cljs$core$IFn$_invoke$arity$2 = G__28841__2;
G__28841.cljs$core$IFn$_invoke$arity$3 = G__28841__3;
return G__28841;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args28814){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28814)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28842 = (i + (1));
var G__28843 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__28842;
out = G__28843;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__28844 = (i + (1));
var G__28845 = cljs.core._conj_BANG_(out,(items[i]));
i = G__28844;
out = G__28845;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__28847 = null;
var G__28847__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__28847__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__28847 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28847__2.call(this,self__,k);
case 3:
return G__28847__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28847.cljs$core$IFn$_invoke$arity$2 = G__28847__2;
G__28847.cljs$core$IFn$_invoke$arity$3 = G__28847__3;
return G__28847;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args28846){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28846)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28850 = cljs.core.seq(coll);
var chunk__28851 = null;
var count__28852 = (0);
var i__28853 = (0);
while(true){
if((i__28853 < count__28852)){
var vec__28854 = chunk__28851.cljs$core$IIndexed$_nth$arity$2(null,i__28853);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28854,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28854,(1),null);
var G__28855_28860 = v;
var G__28856_28861 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28855_28860,G__28856_28861) : f.call(null,G__28855_28860,G__28856_28861));

var G__28862 = seq__28850;
var G__28863 = chunk__28851;
var G__28864 = count__28852;
var G__28865 = (i__28853 + (1));
seq__28850 = G__28862;
chunk__28851 = G__28863;
count__28852 = G__28864;
i__28853 = G__28865;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28850);
if(temp__4126__auto__){
var seq__28850__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28850__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__28850__$1);
var G__28866 = cljs.core.chunk_rest(seq__28850__$1);
var G__28867 = c__18742__auto__;
var G__28868 = cljs.core.count(c__18742__auto__);
var G__28869 = (0);
seq__28850 = G__28866;
chunk__28851 = G__28867;
count__28852 = G__28868;
i__28853 = G__28869;
continue;
} else {
var vec__28857 = cljs.core.first(seq__28850__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28857,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28857,(1),null);
var G__28858_28870 = v;
var G__28859_28871 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28858_28870,G__28859_28871) : f.call(null,G__28858_28870,G__28859_28871));

var G__28872 = cljs.core.next(seq__28850__$1);
var G__28873 = null;
var G__28874 = (0);
var G__28875 = (0);
seq__28850 = G__28872;
chunk__28851 = G__28873;
count__28852 = G__28874;
i__28853 = G__28875;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28848_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28848_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__28876 = null;
var G__28876__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28876__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28876 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28876__2.call(this,self__,k);
case 3:
return G__28876__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28876.cljs$core$IFn$_invoke$arity$2 = G__28876__2;
G__28876.cljs$core$IFn$_invoke$arity$3 = G__28876__3;
return G__28876;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args28849){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28849)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__18836__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__18836__auto__.length)){
var G__28877 = (i + (1));
var G__28878 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__28877;
res = G__28878;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__28879 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__28880 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__28879;
out = G__28880;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__28881__delegate = function (keys){
return cljs.core.set(keys);
};
var G__28881 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28882__i = 0, G__28882__a = new Array(arguments.length -  0);
while (G__28882__i < G__28882__a.length) {G__28882__a[G__28882__i] = arguments[G__28882__i + 0]; ++G__28882__i;}
  keys = new cljs.core.IndexedSeq(G__28882__a,0);
} 
return G__28881__delegate.call(this,keys);};
G__28881.cljs$lang$maxFixedArity = 0;
G__28881.cljs$lang$applyTo = (function (arglist__28883){
var keys = cljs.core.seq(arglist__28883);
return G__28881__delegate(keys);
});
G__28881.cljs$core$IFn$_invoke$arity$variadic = G__28881__delegate;
return G__28881;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__28884 = null;
if (arguments.length > 0) {
var G__28885__i = 0, G__28885__a = new Array(arguments.length -  0);
while (G__28885__i < G__28885__a.length) {G__28885__a[G__28885__i] = arguments[G__28885__i + 0]; ++G__28885__i;}
G__28884 = new cljs.core.IndexedSeq(G__28885__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__28884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28886__i = 0, G__28886__a = new Array(arguments.length -  0);
while (G__28886__i < G__28886__a.length) {G__28886__a[G__28886__i] = arguments[G__28886__i + 0]; ++G__28886__i;}
  keys = new cljs.core.IndexedSeq(G__28886__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__28887){
var keys = cljs.core.seq(arglist__28887);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__28888__i = 0, G__28888__a = new Array(arguments.length -  1);
while (G__28888__i < G__28888__a.length) {G__28888__a[G__28888__i] = arguments[G__28888__i + 1]; ++G__28888__i;}
  keys = new cljs.core.IndexedSeq(G__28888__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__28889){
var comparator = cljs.core.first(arglist__28889);
var keys = cljs.core.rest(arglist__28889);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__28890_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28890_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__28890_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28891_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28891_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__28891_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__28912 = null;
var G__28912__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28912__1 = (function (result){
var G__28902 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28902) : rf.call(null,G__28902));
});
var G__28912__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__28903 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28903) : cljs.core.deref.call(null,G__28903));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__28904 = result;
var G__28905 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28904,G__28905) : rf.call(null,G__28904,G__28905));
}
});
G__28912 = function(result,input){
switch(arguments.length){
case 0:
return G__28912__0.call(this);
case 1:
return G__28912__1.call(this,result);
case 2:
return G__28912__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28912.cljs$core$IFn$_invoke$arity$0 = G__28912__0;
G__28912.cljs$core$IFn$_invoke$arity$1 = G__28912__1;
G__28912.cljs$core$IFn$_invoke$arity$2 = G__28912__2;
return G__28912;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__28910,seen__$1){
while(true){
var vec__28911 = p__28910;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28911,(0),null);
var xs__$1 = vec__28911;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__28913 = cljs.core.rest(s);
var G__28914 = seen__$1;
p__28910 = G__28913;
seen__$1 = G__28914;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__28915 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__28916 = cljs.core.next(s__$1);
ret = G__28915;
s__$1 = G__28916;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__28918 = x;
if(G__28918){
var bit__18629__auto__ = (G__28918.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18629__auto__) || (G__28918.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__28919 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__28920 = cljs.core.next(ks);
var G__28921 = cljs.core.next(vs);
map = G__28919;
ks = G__28920;
vs = G__28921;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__28932 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28932) : k.call(null,G__28932));
})() > (function (){var G__28933 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28933) : k.call(null,G__28933));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__28934__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28922_SHARP_,p2__28923_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__28922_SHARP_,p2__28923_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28934 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28935__i = 0, G__28935__a = new Array(arguments.length -  3);
while (G__28935__i < G__28935__a.length) {G__28935__a[G__28935__i] = arguments[G__28935__i + 3]; ++G__28935__i;}
  more = new cljs.core.IndexedSeq(G__28935__a,0);
} 
return G__28934__delegate.call(this,k,x,y,more);};
G__28934.cljs$lang$maxFixedArity = 3;
G__28934.cljs$lang$applyTo = (function (arglist__28936){
var k = cljs.core.first(arglist__28936);
arglist__28936 = cljs.core.next(arglist__28936);
var x = cljs.core.first(arglist__28936);
arglist__28936 = cljs.core.next(arglist__28936);
var y = cljs.core.first(arglist__28936);
var more = cljs.core.rest(arglist__28936);
return G__28934__delegate(k,x,y,more);
});
G__28934.cljs$core$IFn$_invoke$arity$variadic = G__28934__delegate;
return G__28934;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__28937 = null;
if (arguments.length > 3) {
var G__28938__i = 0, G__28938__a = new Array(arguments.length -  3);
while (G__28938__i < G__28938__a.length) {G__28938__a[G__28938__i] = arguments[G__28938__i + 3]; ++G__28938__i;}
G__28937 = new cljs.core.IndexedSeq(G__28938__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__28949 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28949) : k.call(null,G__28949));
})() < (function (){var G__28950 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28950) : k.call(null,G__28950));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__28951__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28939_SHARP_,p2__28940_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__28939_SHARP_,p2__28940_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28951 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28952__i = 0, G__28952__a = new Array(arguments.length -  3);
while (G__28952__i < G__28952__a.length) {G__28952__a[G__28952__i] = arguments[G__28952__i + 3]; ++G__28952__i;}
  more = new cljs.core.IndexedSeq(G__28952__a,0);
} 
return G__28951__delegate.call(this,k,x,y,more);};
G__28951.cljs$lang$maxFixedArity = 3;
G__28951.cljs$lang$applyTo = (function (arglist__28953){
var k = cljs.core.first(arglist__28953);
arglist__28953 = cljs.core.next(arglist__28953);
var x = cljs.core.first(arglist__28953);
arglist__28953 = cljs.core.next(arglist__28953);
var y = cljs.core.first(arglist__28953);
var more = cljs.core.rest(arglist__28953);
return G__28951__delegate(k,x,y,more);
});
G__28951.cljs$core$IFn$_invoke$arity$variadic = G__28951__delegate;
return G__28951;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__28954 = null;
if (arguments.length > 3) {
var G__28955__i = 0, G__28955__a = new Array(arguments.length -  3);
while (G__28955__i < G__28955__a.length) {G__28955__a[G__28955__i] = arguments[G__28955__i + 3]; ++G__28955__i;}
G__28954 = new cljs.core.IndexedSeq(G__28955__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__28972 = null;
var G__28972__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28972__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28967 = result;
var G__28968 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28967,G__28968) : rf.call(null,G__28967,G__28968));
})());
})());
var G__28969 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28969) : rf.call(null,G__28969));
});
var G__28972__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__28970 = result;
var G__28971 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28970,G__28971) : rf.call(null,G__28970,G__28971));
} else {
return result;
}
});
G__28972 = function(result,input){
switch(arguments.length){
case 0:
return G__28972__0.call(this);
case 1:
return G__28972__1.call(this,result);
case 2:
return G__28972__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28972.cljs$core$IFn$_invoke$arity$0 = G__28972__0;
G__28972.cljs$core$IFn$_invoke$arity$1 = G__28972__1;
G__28972.cljs$core$IFn$_invoke$arity$2 = G__28972__2;
return G__28972;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__28985 = null;
var G__28985__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28985__1 = (function (result){
var G__28980 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28980) : rf.call(null,G__28980));
});
var G__28985__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__28981 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28981) : pred.call(null,G__28981));
})())){
var G__28982 = result;
var G__28983 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28982,G__28983) : rf.call(null,G__28982,G__28983));
} else {
return cljs.core.reduced(result);
}
});
G__28985 = function(result,input){
switch(arguments.length){
case 0:
return G__28985__0.call(this);
case 1:
return G__28985__1.call(this,result);
case 2:
return G__28985__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28985.cljs$core$IFn$_invoke$arity$0 = G__28985__0;
G__28985.cljs$core$IFn$_invoke$arity$1 = G__28985__1;
G__28985.cljs$core$IFn$_invoke$arity$2 = G__28985__2;
return G__28985;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__28984 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28984) : pred.call(null,G__28984));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__28990 = (function (){var G__28992 = cljs.core._entry_key(sc,e);
var G__28993 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28992,G__28993) : comp.call(null,G__28992,G__28993));
})();
var G__28991 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__28990,G__28991) : test.call(null,G__28990,G__28991));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28997 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28997,(0),null);
var s = vec__28997;
if(cljs.core.truth_((function (){var G__28998 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28998) : include.call(null,G__28998));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28999 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28999,(0),null);
var s = vec__28999;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__29003 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29003,(0),null);
var s = vec__29003;
if(cljs.core.truth_((function (){var G__29004 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__29004) : include.call(null,G__29004));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__29005 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29005,(0),null);
var s = vec__29005;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__29006 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__29006) : Math.ceil.call(null,G__29006));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__18376__auto__ = self__.__hash;
if(!((h__18376__auto__ == null))){
return h__18376__auto__;
} else {
var h__18376__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__18376__auto____$1;

return h__18376__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__29007 = ret;
var G__29008 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29007,G__29008) : f.call(null,G__29007,G__29008));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__29009 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29009) : cljs.core.deref.call(null,G__29009));
} else {
var G__29010 = (i + self__.step);
var G__29011 = ret__$1;
i = G__29010;
ret = G__29011;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__29029 = null;
var G__29029__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29029__1 = (function (result){
var G__29026 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29026) : rf.call(null,G__29026));
});
var G__29029__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__29027 = result;
var G__29028 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29027,G__29028) : rf.call(null,G__29027,G__29028));
} else {
return result;
}
});
G__29029 = function(result,input){
switch(arguments.length){
case 0:
return G__29029__0.call(this);
case 1:
return G__29029__1.call(this,result);
case 2:
return G__29029__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29029.cljs$core$IFn$_invoke$arity$0 = G__29029__0;
G__29029.cljs$core$IFn$_invoke$arity$1 = G__29029__1;
G__29029.cljs$core$IFn$_invoke$arity$2 = G__29029__2;
return G__29029;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__29051 = null;
var G__29051__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29051__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__29042 = result;
var G__29043 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29042,G__29043) : rf.call(null,G__29042,G__29043));
})());
})());
var G__29044 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29044) : rf.call(null,G__29044));
});
var G__29051__2 = (function (result,input){
var pval = (function (){var G__29045 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29045) : cljs.core.deref.call(null,G__29045));
})();
var val = (function (){var G__29046 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29046) : f.call(null,G__29046));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__29047 = result;
var G__29048 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29047,G__29048) : rf.call(null,G__29047,G__29048));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__29051 = function(result,input){
switch(arguments.length){
case 0:
return G__29051__0.call(this);
case 1:
return G__29051__1.call(this,result);
case 2:
return G__29051__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29051.cljs$core$IFn$_invoke$arity$0 = G__29051__0;
G__29051.cljs$core$IFn$_invoke$arity$1 = G__29051__1;
G__29051.cljs$core$IFn$_invoke$arity$2 = G__29051__2;
return G__29051;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__29049 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29049) : f.call(null,G__29049));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__29030_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__29050 = p1__29030_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29050) : f.call(null,G__29050));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__29060 = init;
var G__29061 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29060,G__29061) : f.call(null,G__29060,G__29061));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__29156 = null;
var G__29156__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__29156__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29114 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29114) : f.call(null,G__29114));
})()],null));
});
var G__29156__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29115 = x;
var G__29116 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29115,G__29116) : f.call(null,G__29115,G__29116));
})()],null));
});
var G__29156__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29117 = x;
var G__29118 = y;
var G__29119 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29117,G__29118,G__29119) : f.call(null,G__29117,G__29118,G__29119));
})()],null));
});
var G__29156__4 = (function() { 
var G__29157__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__29157 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29158__i = 0, G__29158__a = new Array(arguments.length -  3);
while (G__29158__i < G__29158__a.length) {G__29158__a[G__29158__i] = arguments[G__29158__i + 3]; ++G__29158__i;}
  args = new cljs.core.IndexedSeq(G__29158__a,0);
} 
return G__29157__delegate.call(this,x,y,z,args);};
G__29157.cljs$lang$maxFixedArity = 3;
G__29157.cljs$lang$applyTo = (function (arglist__29159){
var x = cljs.core.first(arglist__29159);
arglist__29159 = cljs.core.next(arglist__29159);
var y = cljs.core.first(arglist__29159);
arglist__29159 = cljs.core.next(arglist__29159);
var z = cljs.core.first(arglist__29159);
var args = cljs.core.rest(arglist__29159);
return G__29157__delegate(x,y,z,args);
});
G__29157.cljs$core$IFn$_invoke$arity$variadic = G__29157__delegate;
return G__29157;
})()
;
G__29156 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29156__0.call(this);
case 1:
return G__29156__1.call(this,x);
case 2:
return G__29156__2.call(this,x,y);
case 3:
return G__29156__3.call(this,x,y,z);
default:
var G__29160 = null;
if (arguments.length > 3) {
var G__29161__i = 0, G__29161__a = new Array(arguments.length -  3);
while (G__29161__i < G__29161__a.length) {G__29161__a[G__29161__i] = arguments[G__29161__i + 3]; ++G__29161__i;}
G__29160 = new cljs.core.IndexedSeq(G__29161__a,0);
}
return G__29156__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29156.cljs$lang$maxFixedArity = 3;
G__29156.cljs$lang$applyTo = G__29156__4.cljs$lang$applyTo;
G__29156.cljs$core$IFn$_invoke$arity$0 = G__29156__0;
G__29156.cljs$core$IFn$_invoke$arity$1 = G__29156__1;
G__29156.cljs$core$IFn$_invoke$arity$2 = G__29156__2;
G__29156.cljs$core$IFn$_invoke$arity$3 = G__29156__3;
G__29156.cljs$core$IFn$_invoke$arity$variadic = G__29156__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29156;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__29162 = null;
var G__29162__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__29162__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29120 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29120) : f.call(null,G__29120));
})(),(function (){var G__29121 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29121) : g.call(null,G__29121));
})()],null));
});
var G__29162__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29122 = x;
var G__29123 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29122,G__29123) : f.call(null,G__29122,G__29123));
})(),(function (){var G__29124 = x;
var G__29125 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__29124,G__29125) : g.call(null,G__29124,G__29125));
})()],null));
});
var G__29162__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29126 = x;
var G__29127 = y;
var G__29128 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29126,G__29127,G__29128) : f.call(null,G__29126,G__29127,G__29128));
})(),(function (){var G__29129 = x;
var G__29130 = y;
var G__29131 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__29129,G__29130,G__29131) : g.call(null,G__29129,G__29130,G__29131));
})()],null));
});
var G__29162__4 = (function() { 
var G__29163__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__29163 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29164__i = 0, G__29164__a = new Array(arguments.length -  3);
while (G__29164__i < G__29164__a.length) {G__29164__a[G__29164__i] = arguments[G__29164__i + 3]; ++G__29164__i;}
  args = new cljs.core.IndexedSeq(G__29164__a,0);
} 
return G__29163__delegate.call(this,x,y,z,args);};
G__29163.cljs$lang$maxFixedArity = 3;
G__29163.cljs$lang$applyTo = (function (arglist__29165){
var x = cljs.core.first(arglist__29165);
arglist__29165 = cljs.core.next(arglist__29165);
var y = cljs.core.first(arglist__29165);
arglist__29165 = cljs.core.next(arglist__29165);
var z = cljs.core.first(arglist__29165);
var args = cljs.core.rest(arglist__29165);
return G__29163__delegate(x,y,z,args);
});
G__29163.cljs$core$IFn$_invoke$arity$variadic = G__29163__delegate;
return G__29163;
})()
;
G__29162 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29162__0.call(this);
case 1:
return G__29162__1.call(this,x);
case 2:
return G__29162__2.call(this,x,y);
case 3:
return G__29162__3.call(this,x,y,z);
default:
var G__29166 = null;
if (arguments.length > 3) {
var G__29167__i = 0, G__29167__a = new Array(arguments.length -  3);
while (G__29167__i < G__29167__a.length) {G__29167__a[G__29167__i] = arguments[G__29167__i + 3]; ++G__29167__i;}
G__29166 = new cljs.core.IndexedSeq(G__29167__a,0);
}
return G__29162__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29162.cljs$lang$maxFixedArity = 3;
G__29162.cljs$lang$applyTo = G__29162__4.cljs$lang$applyTo;
G__29162.cljs$core$IFn$_invoke$arity$0 = G__29162__0;
G__29162.cljs$core$IFn$_invoke$arity$1 = G__29162__1;
G__29162.cljs$core$IFn$_invoke$arity$2 = G__29162__2;
G__29162.cljs$core$IFn$_invoke$arity$3 = G__29162__3;
G__29162.cljs$core$IFn$_invoke$arity$variadic = G__29162__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29162;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__29168 = null;
var G__29168__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__29168__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29132 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29132) : f.call(null,G__29132));
})(),(function (){var G__29133 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29133) : g.call(null,G__29133));
})(),(function (){var G__29134 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__29134) : h.call(null,G__29134));
})()],null));
});
var G__29168__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29135 = x;
var G__29136 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29135,G__29136) : f.call(null,G__29135,G__29136));
})(),(function (){var G__29137 = x;
var G__29138 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__29137,G__29138) : g.call(null,G__29137,G__29138));
})(),(function (){var G__29139 = x;
var G__29140 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__29139,G__29140) : h.call(null,G__29139,G__29140));
})()],null));
});
var G__29168__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__29141 = x;
var G__29142 = y;
var G__29143 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29141,G__29142,G__29143) : f.call(null,G__29141,G__29142,G__29143));
})(),(function (){var G__29144 = x;
var G__29145 = y;
var G__29146 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__29144,G__29145,G__29146) : g.call(null,G__29144,G__29145,G__29146));
})(),(function (){var G__29147 = x;
var G__29148 = y;
var G__29149 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__29147,G__29148,G__29149) : h.call(null,G__29147,G__29148,G__29149));
})()],null));
});
var G__29168__4 = (function() { 
var G__29169__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__29169 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29170__i = 0, G__29170__a = new Array(arguments.length -  3);
while (G__29170__i < G__29170__a.length) {G__29170__a[G__29170__i] = arguments[G__29170__i + 3]; ++G__29170__i;}
  args = new cljs.core.IndexedSeq(G__29170__a,0);
} 
return G__29169__delegate.call(this,x,y,z,args);};
G__29169.cljs$lang$maxFixedArity = 3;
G__29169.cljs$lang$applyTo = (function (arglist__29171){
var x = cljs.core.first(arglist__29171);
arglist__29171 = cljs.core.next(arglist__29171);
var y = cljs.core.first(arglist__29171);
arglist__29171 = cljs.core.next(arglist__29171);
var z = cljs.core.first(arglist__29171);
var args = cljs.core.rest(arglist__29171);
return G__29169__delegate(x,y,z,args);
});
G__29169.cljs$core$IFn$_invoke$arity$variadic = G__29169__delegate;
return G__29169;
})()
;
G__29168 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29168__0.call(this);
case 1:
return G__29168__1.call(this,x);
case 2:
return G__29168__2.call(this,x,y);
case 3:
return G__29168__3.call(this,x,y,z);
default:
var G__29172 = null;
if (arguments.length > 3) {
var G__29173__i = 0, G__29173__a = new Array(arguments.length -  3);
while (G__29173__i < G__29173__a.length) {G__29173__a[G__29173__i] = arguments[G__29173__i + 3]; ++G__29173__i;}
G__29172 = new cljs.core.IndexedSeq(G__29173__a,0);
}
return G__29168__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29168.cljs$lang$maxFixedArity = 3;
G__29168.cljs$lang$applyTo = G__29168__4.cljs$lang$applyTo;
G__29168.cljs$core$IFn$_invoke$arity$0 = G__29168__0;
G__29168.cljs$core$IFn$_invoke$arity$1 = G__29168__1;
G__29168.cljs$core$IFn$_invoke$arity$2 = G__29168__2;
G__29168.cljs$core$IFn$_invoke$arity$3 = G__29168__3;
G__29168.cljs$core$IFn$_invoke$arity$variadic = G__29168__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29168;
})()
});
var juxt__4 = (function() { 
var G__29174__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__29175 = null;
var G__29175__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__29062_SHARP_,p2__29063_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__29062_SHARP_,(function (){return (p2__29063_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__29063_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__29063_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__29175__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__29064_SHARP_,p2__29065_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__29064_SHARP_,(function (){var G__29150 = x;
return (p2__29065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__29065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__29150) : p2__29065_SHARP_.call(null,G__29150));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__29175__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__29066_SHARP_,p2__29067_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__29066_SHARP_,(function (){var G__29151 = x;
var G__29152 = y;
return (p2__29067_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__29067_SHARP_.cljs$core$IFn$_invoke$arity$2(G__29151,G__29152) : p2__29067_SHARP_.call(null,G__29151,G__29152));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__29175__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__29068_SHARP_,p2__29069_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__29068_SHARP_,(function (){var G__29153 = x;
var G__29154 = y;
var G__29155 = z;
return (p2__29069_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__29069_SHARP_.cljs$core$IFn$_invoke$arity$3(G__29153,G__29154,G__29155) : p2__29069_SHARP_.call(null,G__29153,G__29154,G__29155));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__29175__4 = (function() { 
var G__29176__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__29070_SHARP_,p2__29071_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__29070_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__29071_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__29176 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29177__i = 0, G__29177__a = new Array(arguments.length -  3);
while (G__29177__i < G__29177__a.length) {G__29177__a[G__29177__i] = arguments[G__29177__i + 3]; ++G__29177__i;}
  args = new cljs.core.IndexedSeq(G__29177__a,0);
} 
return G__29176__delegate.call(this,x,y,z,args);};
G__29176.cljs$lang$maxFixedArity = 3;
G__29176.cljs$lang$applyTo = (function (arglist__29178){
var x = cljs.core.first(arglist__29178);
arglist__29178 = cljs.core.next(arglist__29178);
var y = cljs.core.first(arglist__29178);
arglist__29178 = cljs.core.next(arglist__29178);
var z = cljs.core.first(arglist__29178);
var args = cljs.core.rest(arglist__29178);
return G__29176__delegate(x,y,z,args);
});
G__29176.cljs$core$IFn$_invoke$arity$variadic = G__29176__delegate;
return G__29176;
})()
;
G__29175 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29175__0.call(this);
case 1:
return G__29175__1.call(this,x);
case 2:
return G__29175__2.call(this,x,y);
case 3:
return G__29175__3.call(this,x,y,z);
default:
var G__29179 = null;
if (arguments.length > 3) {
var G__29180__i = 0, G__29180__a = new Array(arguments.length -  3);
while (G__29180__i < G__29180__a.length) {G__29180__a[G__29180__i] = arguments[G__29180__i + 3]; ++G__29180__i;}
G__29179 = new cljs.core.IndexedSeq(G__29180__a,0);
}
return G__29175__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29179);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29175.cljs$lang$maxFixedArity = 3;
G__29175.cljs$lang$applyTo = G__29175__4.cljs$lang$applyTo;
G__29175.cljs$core$IFn$_invoke$arity$0 = G__29175__0;
G__29175.cljs$core$IFn$_invoke$arity$1 = G__29175__1;
G__29175.cljs$core$IFn$_invoke$arity$2 = G__29175__2;
G__29175.cljs$core$IFn$_invoke$arity$3 = G__29175__3;
G__29175.cljs$core$IFn$_invoke$arity$variadic = G__29175__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29175;
})()
;})(fs__$1))
};
var G__29174 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__29181__i = 0, G__29181__a = new Array(arguments.length -  3);
while (G__29181__i < G__29181__a.length) {G__29181__a[G__29181__i] = arguments[G__29181__i + 3]; ++G__29181__i;}
  fs = new cljs.core.IndexedSeq(G__29181__a,0);
} 
return G__29174__delegate.call(this,f,g,h,fs);};
G__29174.cljs$lang$maxFixedArity = 3;
G__29174.cljs$lang$applyTo = (function (arglist__29182){
var f = cljs.core.first(arglist__29182);
arglist__29182 = cljs.core.next(arglist__29182);
var g = cljs.core.first(arglist__29182);
arglist__29182 = cljs.core.next(arglist__29182);
var h = cljs.core.first(arglist__29182);
var fs = cljs.core.rest(arglist__29182);
return G__29174__delegate(f,g,h,fs);
});
G__29174.cljs$core$IFn$_invoke$arity$variadic = G__29174__delegate;
return G__29174;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__29183 = null;
if (arguments.length > 3) {
var G__29184__i = 0, G__29184__a = new Array(arguments.length -  3);
while (G__29184__i < G__29184__a.length) {G__29184__a[G__29184__i] = arguments[G__29184__i + 3]; ++G__29184__i;}
G__29183 = new cljs.core.IndexedSeq(G__29184__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__29183);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__29185 = cljs.core.next(coll);
coll = G__29185;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__29186 = (n - (1));
var G__29187 = cljs.core.next(coll);
n = G__29186;
coll = G__29187;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__29191 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29191,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29191,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29191,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_29199 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__29200_29206 = cljs.core.first(coll);
var G__29201_29207 = writer;
var G__29202_29208 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__29200_29206,G__29201_29207,G__29202_29208) : print_one.call(null,G__29200_29206,G__29201_29207,G__29202_29208));
} else {
}

var coll_29209__$1 = cljs.core.next(coll);
var n_29210 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_29209__$1) && (((n_29210 == null)) || (!((n_29210 === (0)))))){
cljs.core._write(writer,sep);

var G__29203_29211 = cljs.core.first(coll_29209__$1);
var G__29204_29212 = writer;
var G__29205_29213 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__29203_29211,G__29204_29212,G__29205_29213) : print_one.call(null,G__29203_29211,G__29204_29212,G__29205_29213));

var G__29214 = cljs.core.next(coll_29209__$1);
var G__29215 = (n_29210 - (1));
coll_29209__$1 = G__29214;
n_29210 = G__29215;
continue;
} else {
if((cljs.core.seq(coll_29209__$1)) && ((n_29210 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_29199;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__29220 = cljs.core.seq(ss);
var chunk__29221 = null;
var count__29222 = (0);
var i__29223 = (0);
while(true){
if((i__29223 < count__29222)){
var s = chunk__29221.cljs$core$IIndexed$_nth$arity$2(null,i__29223);
cljs.core._write(writer,s);

var G__29224 = seq__29220;
var G__29225 = chunk__29221;
var G__29226 = count__29222;
var G__29227 = (i__29223 + (1));
seq__29220 = G__29224;
chunk__29221 = G__29225;
count__29222 = G__29226;
i__29223 = G__29227;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29220);
if(temp__4126__auto__){
var seq__29220__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29220__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__29220__$1);
var G__29228 = cljs.core.chunk_rest(seq__29220__$1);
var G__29229 = c__18742__auto__;
var G__29230 = cljs.core.count(c__18742__auto__);
var G__29231 = (0);
seq__29220 = G__29228;
chunk__29221 = G__29229;
count__29222 = G__29230;
i__29223 = G__29231;
continue;
} else {
var s = cljs.core.first(seq__29220__$1);
cljs.core._write(writer,s);

var G__29232 = cljs.core.next(seq__29220__$1);
var G__29233 = null;
var G__29234 = (0);
var G__29235 = (0);
seq__29220 = G__29232;
chunk__29221 = G__29233;
count__29222 = G__29234;
i__29223 = G__29235;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__29236__i = 0, G__29236__a = new Array(arguments.length -  1);
while (G__29236__i < G__29236__a.length) {G__29236__a[G__29236__i] = arguments[G__29236__i + 1]; ++G__29236__i;}
  ss = new cljs.core.IndexedSeq(G__29236__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__29237){
var writer = cljs.core.first(arglist__29237);
var ss = cljs.core.rest(arglist__29237);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj29239 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj29239;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__29242 = "[\\\\\"\b\f\n\r\t]";
var G__29243 = "g";
return RegExp(G__29242,G__29243);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__17943__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__17943__auto__)){
var and__17943__auto____$1 = (function (){var G__29257 = obj;
if(G__29257){
var bit__18636__auto__ = (G__29257.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18636__auto__) || (G__29257.cljs$core$IMeta$)){
return true;
} else {
if((!G__29257.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__29257);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__29257);
}
})();
if(and__17943__auto____$1){
return cljs.core.meta(obj);
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__29258 = obj;
if(G__29258){
var bit__18629__auto__ = (G__29258.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18629__auto__) || (G__29258.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__29259 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__29260 = pr_writer;
var G__29261 = writer;
var G__29262 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__29259,G__29260,G__29261,G__29262) : cljs.core.print_map.call(null,G__29259,G__29260,G__29261,G__29262));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__29263 = obj;
return goog.isString(G__29263);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__29265 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__29265;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__29264 = obj;
if(G__29264){
var bit__18636__auto__ = (G__29264.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18636__auto__) || (G__29264.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__29264.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__29264);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__29264);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__29270 = cljs.core.seq(cljs.core.next(objs));
var chunk__29271 = null;
var count__29272 = (0);
var i__29273 = (0);
while(true){
if((i__29273 < count__29272)){
var obj = chunk__29271.cljs$core$IIndexed$_nth$arity$2(null,i__29273);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__29274 = seq__29270;
var G__29275 = chunk__29271;
var G__29276 = count__29272;
var G__29277 = (i__29273 + (1));
seq__29270 = G__29274;
chunk__29271 = G__29275;
count__29272 = G__29276;
i__29273 = G__29277;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__29270);
if(temp__4126__auto__){
var seq__29270__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29270__$1)){
var c__18742__auto__ = cljs.core.chunk_first(seq__29270__$1);
var G__29278 = cljs.core.chunk_rest(seq__29270__$1);
var G__29279 = c__18742__auto__;
var G__29280 = cljs.core.count(c__18742__auto__);
var G__29281 = (0);
seq__29270 = G__29278;
chunk__29271 = G__29279;
count__29272 = G__29280;
i__29273 = G__29281;
continue;
} else {
var obj = cljs.core.first(seq__29270__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__29282 = cljs.core.next(seq__29270__$1);
var G__29283 = null;
var G__29284 = (0);
var G__29285 = (0);
seq__29270 = G__29282;
chunk__29271 = G__29283;
count__29272 = G__29284;
i__29273 = G__29285;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29286__i = 0, G__29286__a = new Array(arguments.length -  0);
while (G__29286__i < G__29286__a.length) {G__29286__a[G__29286__i] = arguments[G__29286__i + 0]; ++G__29286__i;}
  objs = new cljs.core.IndexedSeq(G__29286__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__29287){
var objs = cljs.core.seq(arglist__29287);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29288__i = 0, G__29288__a = new Array(arguments.length -  0);
while (G__29288__i < G__29288__a.length) {G__29288__a[G__29288__i] = arguments[G__29288__i + 0]; ++G__29288__i;}
  objs = new cljs.core.IndexedSeq(G__29288__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__29289){
var objs = cljs.core.seq(arglist__29289);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29290__i = 0, G__29290__a = new Array(arguments.length -  0);
while (G__29290__i < G__29290__a.length) {G__29290__a[G__29290__i] = arguments[G__29290__i + 0]; ++G__29290__i;}
  objs = new cljs.core.IndexedSeq(G__29290__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__29291){
var objs = cljs.core.seq(arglist__29291);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29292__i = 0, G__29292__a = new Array(arguments.length -  0);
while (G__29292__i < G__29292__a.length) {G__29292__a[G__29292__i] = arguments[G__29292__i + 0]; ++G__29292__i;}
  objs = new cljs.core.IndexedSeq(G__29292__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__29293){
var objs = cljs.core.seq(arglist__29293);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29294__i = 0, G__29294__a = new Array(arguments.length -  0);
while (G__29294__i < G__29294__a.length) {G__29294__a[G__29294__i] = arguments[G__29294__i + 0]; ++G__29294__i;}
  objs = new cljs.core.IndexedSeq(G__29294__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__29295){
var objs = cljs.core.seq(arglist__29295);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29296__i = 0, G__29296__a = new Array(arguments.length -  0);
while (G__29296__i < G__29296__a.length) {G__29296__a[G__29296__i] = arguments[G__29296__i + 0]; ++G__29296__i;}
  objs = new cljs.core.IndexedSeq(G__29296__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__29297){
var objs = cljs.core.seq(arglist__29297);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29298__i = 0, G__29298__a = new Array(arguments.length -  0);
while (G__29298__i < G__29298__a.length) {G__29298__a[G__29298__i] = arguments[G__29298__i + 0]; ++G__29298__i;}
  objs = new cljs.core.IndexedSeq(G__29298__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__29299){
var objs = cljs.core.seq(arglist__29299);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__29300__i = 0, G__29300__a = new Array(arguments.length -  0);
while (G__29300__i < G__29300__a.length) {G__29300__a[G__29300__i] = arguments[G__29300__i + 0]; ++G__29300__i;}
  objs = new cljs.core.IndexedSeq(G__29300__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__29301){
var objs = cljs.core.seq(arglist__29301);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__29308_29314 = cljs.core.key(e);
var G__29309_29315 = w;
var G__29310_29316 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__29308_29314,G__29309_29315,G__29310_29316) : print_one.call(null,G__29308_29314,G__29309_29315,G__29310_29316));

cljs.core._write(w," ");

var G__29311 = cljs.core.val(e);
var G__29312 = w;
var G__29313 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__29311,G__29312,G__29313) : print_one.call(null,G__29311,G__29312,G__29313));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__29317__i = 0, G__29317__a = new Array(arguments.length -  2);
while (G__29317__i < G__29317__a.length) {G__29317__a[G__29317__i] = arguments[G__29317__i + 2]; ++G__29317__i;}
  args = new cljs.core.IndexedSeq(G__29317__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__29318){
var iref = cljs.core.first(arglist__29318);
arglist__29318 = cljs.core.next(arglist__29318);
var f = cljs.core.first(arglist__29318);
var args = cljs.core.rest(arglist__29318);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__29321 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29321) : cljs.core.atom.call(null,G__29321));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__29323 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29323) : cljs.core.deref.call(null,G__29323));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__29324_SHARP_,p2__29325_SHARP_){
var ret = (function (){var G__29328 = p1__29324_SHARP_;
var G__29329 = p2__29325_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29328,G__29329) : rf.call(null,G__29328,G__29329));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__29332 = null;
var G__29332__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29332__1 = (function (result){
var G__29331 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29331) : rf.call(null,G__29331));
});
var G__29332__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__29332 = function(result,input){
switch(arguments.length){
case 0:
return G__29332__0.call(this);
case 1:
return G__29332__1.call(this,result);
case 2:
return G__29332__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29332.cljs$core$IFn$_invoke$arity$0 = G__29332__0;
G__29332.cljs$core$IFn$_invoke$arity$1 = G__29332__1;
G__29332.cljs$core$IFn$_invoke$arity$2 = G__29332__2;
return G__29332;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__29341 = null;
var G__29341__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29341__1 = (function (result){
var G__29337 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29337) : rf.call(null,G__29337));
});
var G__29341__2 = (function (result,input){
var prior = (function (){var G__29338 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29338) : cljs.core.deref.call(null,G__29338));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__29339 = result;
var G__29340 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29339,G__29340) : rf.call(null,G__29339,G__29340));
}
});
G__29341 = function(result,input){
switch(arguments.length){
case 0:
return G__29341__0.call(this);
case 1:
return G__29341__1.call(this,result);
case 2:
return G__29341__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29341.cljs$core$IFn$_invoke$arity$0 = G__29341__0;
G__29341.cljs$core$IFn$_invoke$arity$1 = G__29341__1;
G__29341.cljs$core$IFn$_invoke$arity$2 = G__29341__2;
return G__29341;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18933__auto__ = this;
return cljs.core.es6_iterator(this__18933__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__29343_SHARP_,p2__29342_SHARP_){
var G__29345 = p2__29342_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__29345) : proc.call(null,G__29345));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj29347 = {};
return obj29347;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__17943__auto__ = x;
if(and__17943__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__17943__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__18599__auto__ = (((x == null))?null:x);
return (function (){var or__17955__auto__ = (cljs.core._clj__GT_js[(function (){var G__29351 = x__18599__auto__;
return goog.typeOf(G__29351);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__17943__auto__ = x;
if(and__17943__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__17943__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__18599__auto__ = (((x == null))?null:x);
return (function (){var or__17955__auto__ = (cljs.core._key__GT_js[(function (){var G__29355 = x__18599__auto__;
return goog.typeOf(G__29355);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__29358 = k;
if(G__29358){
var bit__18636__auto__ = null;
if(cljs.core.truth_((function (){var or__17955__auto__ = bit__18636__auto__;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return G__29358.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__29358.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29358);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__29359 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__29359) : cljs.core.clj__GT_js.call(null,G__29359));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__29375 = x;
if(G__29375){
var bit__18636__auto__ = null;
if(cljs.core.truth_((function (){var or__17955__auto__ = bit__18636__auto__;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return G__29375.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__29375.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29375);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__29375);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj29377 = {};
return obj29377;
})();
var seq__29378_29388 = cljs.core.seq(x);
var chunk__29379_29389 = null;
var count__29380_29390 = (0);
var i__29381_29391 = (0);
while(true){
if((i__29381_29391 < count__29380_29390)){
var vec__29382_29392 = chunk__29379_29389.cljs$core$IIndexed$_nth$arity$2(null,i__29381_29391);
var k_29393 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29382_29392,(0),null);
var v_29394 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29382_29392,(1),null);
(m[cljs.core.key__GT_js(k_29393)] = clj__GT_js(v_29394));

var G__29395 = seq__29378_29388;
var G__29396 = chunk__29379_29389;
var G__29397 = count__29380_29390;
var G__29398 = (i__29381_29391 + (1));
seq__29378_29388 = G__29395;
chunk__29379_29389 = G__29396;
count__29380_29390 = G__29397;
i__29381_29391 = G__29398;
continue;
} else {
var temp__4126__auto___29399 = cljs.core.seq(seq__29378_29388);
if(temp__4126__auto___29399){
var seq__29378_29400__$1 = temp__4126__auto___29399;
if(cljs.core.chunked_seq_QMARK_(seq__29378_29400__$1)){
var c__18742__auto___29401 = cljs.core.chunk_first(seq__29378_29400__$1);
var G__29402 = cljs.core.chunk_rest(seq__29378_29400__$1);
var G__29403 = c__18742__auto___29401;
var G__29404 = cljs.core.count(c__18742__auto___29401);
var G__29405 = (0);
seq__29378_29388 = G__29402;
chunk__29379_29389 = G__29403;
count__29380_29390 = G__29404;
i__29381_29391 = G__29405;
continue;
} else {
var vec__29383_29406 = cljs.core.first(seq__29378_29400__$1);
var k_29407 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29383_29406,(0),null);
var v_29408 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29383_29406,(1),null);
(m[cljs.core.key__GT_js(k_29407)] = clj__GT_js(v_29408));

var G__29409 = cljs.core.next(seq__29378_29400__$1);
var G__29410 = null;
var G__29411 = (0);
var G__29412 = (0);
seq__29378_29388 = G__29409;
chunk__29379_29389 = G__29410;
count__29380_29390 = G__29411;
i__29381_29391 = G__29412;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__29384_29413 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__29385_29414 = null;
var count__29386_29415 = (0);
var i__29387_29416 = (0);
while(true){
if((i__29387_29416 < count__29386_29415)){
var x_29417__$1 = chunk__29385_29414.cljs$core$IIndexed$_nth$arity$2(null,i__29387_29416);
arr.push(x_29417__$1);

var G__29418 = seq__29384_29413;
var G__29419 = chunk__29385_29414;
var G__29420 = count__29386_29415;
var G__29421 = (i__29387_29416 + (1));
seq__29384_29413 = G__29418;
chunk__29385_29414 = G__29419;
count__29386_29415 = G__29420;
i__29387_29416 = G__29421;
continue;
} else {
var temp__4126__auto___29422 = cljs.core.seq(seq__29384_29413);
if(temp__4126__auto___29422){
var seq__29384_29423__$1 = temp__4126__auto___29422;
if(cljs.core.chunked_seq_QMARK_(seq__29384_29423__$1)){
var c__18742__auto___29424 = cljs.core.chunk_first(seq__29384_29423__$1);
var G__29425 = cljs.core.chunk_rest(seq__29384_29423__$1);
var G__29426 = c__18742__auto___29424;
var G__29427 = cljs.core.count(c__18742__auto___29424);
var G__29428 = (0);
seq__29384_29413 = G__29425;
chunk__29385_29414 = G__29426;
count__29386_29415 = G__29427;
i__29387_29416 = G__29428;
continue;
} else {
var x_29429__$1 = cljs.core.first(seq__29384_29423__$1);
arr.push(x_29429__$1);

var G__29430 = cljs.core.next(seq__29384_29423__$1);
var G__29431 = null;
var G__29432 = (0);
var G__29433 = (0);
seq__29384_29413 = G__29430;
chunk__29385_29414 = G__29431;
count__29386_29415 = G__29432;
i__29387_29416 = G__29433;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj29435 = {};
return obj29435;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__17943__auto__ = x;
if(and__17943__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__17943__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__18599__auto__ = (((x == null))?null:x);
return (function (){var or__17955__auto__ = (cljs.core._js__GT_clj[(function (){var G__29439 = x__18599__auto__;
return goog.typeOf(G__29439);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__29496__delegate = function (x,opts){
var map__29469 = opts;
var map__29469__$1 = ((cljs.core.seq_QMARK_(map__29469))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29469):map__29469);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29469__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__29469,map__29469__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__29485 = x__$1;
if(G__29485){
var bit__18636__auto__ = null;
if(cljs.core.truth_((function (){var or__17955__auto__ = bit__18636__auto__;
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return G__29485.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__29485.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__29485);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__29485);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__18711__auto__ = ((function (map__29469,map__29469__$1,keywordize_keys,keyfn){
return (function iter__29486(s__29487){
return (new cljs.core.LazySeq(null,((function (map__29469,map__29469__$1,keywordize_keys,keyfn){
return (function (){
var s__29487__$1 = s__29487;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__29487__$1);
if(temp__4126__auto__){
var s__29487__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__29487__$2)){
var c__18709__auto__ = cljs.core.chunk_first(s__29487__$2);
var size__18710__auto__ = cljs.core.count(c__18709__auto__);
var b__29489 = cljs.core.chunk_buffer(size__18710__auto__);
if((function (){var i__29488 = (0);
while(true){
if((i__29488 < size__18710__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__18709__auto__,i__29488);
cljs.core.chunk_append(b__29489,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__29494 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29494) : keyfn.call(null,G__29494));
})(),thisfn((x__$1[k]))], null));

var G__29497 = (i__29488 + (1));
i__29488 = G__29497;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__29489),iter__29486(cljs.core.chunk_rest(s__29487__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__29489),null);
}
} else {
var k = cljs.core.first(s__29487__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__29495 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29495) : keyfn.call(null,G__29495));
})(),thisfn((x__$1[k]))], null),iter__29486(cljs.core.rest(s__29487__$2)));
}
} else {
return null;
}
break;
}
});})(map__29469,map__29469__$1,keywordize_keys,keyfn))
,null,null));
});})(map__29469,map__29469__$1,keywordize_keys,keyfn))
;
return iter__18711__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__29469,map__29469__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__29496 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__29498__i = 0, G__29498__a = new Array(arguments.length -  1);
while (G__29498__i < G__29498__a.length) {G__29498__a[G__29498__i] = arguments[G__29498__i + 1]; ++G__29498__i;}
  opts = new cljs.core.IndexedSeq(G__29498__a,0);
} 
return G__29496__delegate.call(this,x,opts);};
G__29496.cljs$lang$maxFixedArity = 1;
G__29496.cljs$lang$applyTo = (function (arglist__29499){
var x = cljs.core.first(arglist__29499);
var opts = cljs.core.rest(arglist__29499);
return G__29496__delegate(x,opts);
});
G__29496.cljs$core$IFn$_invoke$arity$variadic = G__29496__delegate;
return G__29496;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__29500 = null;
if (arguments.length > 1) {
var G__29501__i = 0, G__29501__a = new Array(arguments.length -  1);
while (G__29501__i < G__29501__a.length) {G__29501__a[G__29501__i] = arguments[G__29501__i + 1]; ++G__29501__i;}
G__29500 = new cljs.core.IndexedSeq(G__29501__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__29504 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29504) : cljs.core.atom.call(null,G__29504));
})();
return ((function (mem){
return (function() { 
var G__29506__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__29505 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29505) : cljs.core.deref.call(null,G__29505));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__29506 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29507__i = 0, G__29507__a = new Array(arguments.length -  0);
while (G__29507__i < G__29507__a.length) {G__29507__a[G__29507__i] = arguments[G__29507__i + 0]; ++G__29507__i;}
  args = new cljs.core.IndexedSeq(G__29507__a,0);
} 
return G__29506__delegate.call(this,args);};
G__29506.cljs$lang$maxFixedArity = 0;
G__29506.cljs$lang$applyTo = (function (arglist__29508){
var args = cljs.core.seq(arglist__29508);
return G__29506__delegate(args);
});
G__29506.cljs$core$IFn$_invoke$arity$variadic = G__29506__delegate;
return G__29506;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__29510 = ret;
f = G__29510;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__29511__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__29511 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__29512__i = 0, G__29512__a = new Array(arguments.length -  1);
while (G__29512__i < G__29512__a.length) {G__29512__a[G__29512__i] = arguments[G__29512__i + 1]; ++G__29512__i;}
  args = new cljs.core.IndexedSeq(G__29512__a,0);
} 
return G__29511__delegate.call(this,f,args);};
G__29511.cljs$lang$maxFixedArity = 1;
G__29511.cljs$lang$applyTo = (function (arglist__29513){
var f = cljs.core.first(arglist__29513);
var args = cljs.core.rest(arglist__29513);
return G__29511__delegate(f,args);
});
G__29511.cljs$core$IFn$_invoke$arity$variadic = G__29511__delegate;
return G__29511;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__29514 = null;
if (arguments.length > 1) {
var G__29515__i = 0, G__29515__a = new Array(arguments.length -  1);
while (G__29515__i < G__29515__a.length) {G__29515__a[G__29515__i] = arguments[G__29515__i + 1]; ++G__29515__i;}
G__29514 = new cljs.core.IndexedSeq(G__29515__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__29514);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__29518 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__29518) : Math.floor.call(null,G__29518));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__29520 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29520) : f.call(null,G__29520));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__29522 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29522) : cljs.core.atom.call(null,G__29522));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__29523__i = 0, G__29523__a = new Array(arguments.length -  1);
while (G__29523__i < G__29523__a.length) {G__29523__a[G__29523__i] = arguments[G__29523__i + 1]; ++G__29523__i;}
  args = new cljs.core.IndexedSeq(G__29523__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__29524){
var f = cljs.core.first(arglist__29524);
var args = cljs.core.rest(arglist__29524);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29589 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29589) : cljs.core.deref.call(null,G__29589));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__17955__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
var and__17943__auto__ = cljs.core.vector_QMARK_(parent);
if(and__17943__auto__){
var and__17943__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__17943__auto____$1){
var and__17943__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__17943__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__29614 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__29612 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__29612) : child.call(null,G__29612));
})(),(function (){var G__29613 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__29613) : parent.call(null,G__29613));
})());
var G__29615 = (i + (1));
ret = G__29614;
i = G__29615;
continue;
}
break;
}
} else {
return and__17943__auto____$2;
}
} else {
return and__17943__auto____$1;
}
} else {
return and__17943__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__29619 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29619) : cljs.core.deref.call(null,G__29619));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__29623 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29623) : cljs.core.deref.call(null,G__29623));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__29627 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29627) : cljs.core.deref.call(null,G__29627));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__29636 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__29636) : targets.call(null,G__29636));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__29637 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__29637) : sources.call(null,G__29637));
})()));
});})(tp,td,ta))
;
var or__17955__auto__ = ((cljs.core.contains_QMARK_((function (){var G__29641 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__29641) : tp.call(null,G__29641));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__29642 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29642) : ta.call(null,G__29642));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__29643 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29643) : ta.call(null,G__29643));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__29650 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29650) : parentMap.call(null,G__29650));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__29651 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29651) : parentMap.call(null,G__29651));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__29644_SHARP_){
return cljs.core.cons(cljs.core.first(p1__29644_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__29644_SHARP_),cljs.core.second(p1__29644_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__29652 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29652) : parentMap.call(null,G__29652));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__29645_SHARP_,p2__29646_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__29645_SHARP_,p2__29646_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__29655 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29655) : cljs.core.deref.call(null,G__29655));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__29656 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29656) : cljs.core.deref.call(null,G__29656));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__29672 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29672) : cljs.core.deref.call(null,G__29672));
})().call(null,x);
var or__17955__auto__ = (cljs.core.truth_((function (){var and__17943__auto__ = xprefs;
if(cljs.core.truth_(and__17943__auto__)){
var G__29674 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__29674) : xprefs.call(null,G__29674));
} else {
return and__17943__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__29675 = cljs.core.rest(ps);
ps = G__29675;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17955__auto____$1)){
return or__17955__auto____$1;
} else {
var or__17955__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__29676 = cljs.core.rest(ps);
ps = G__29676;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17955__auto____$2)){
return or__17955__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__17955__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__17955__auto__)){
return or__17955__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__29690){
var vec__29691 = p__29690;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29691,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29691,(1),null);
var e = vec__29691;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29692 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29692) : cljs.core.deref.call(null,G__29692));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__17955__auto__ = (be == null);
if(or__17955__auto__){
return or__17955__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__29693 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29693) : cljs.core.deref.call(null,G__29693));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29694 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29694) : cljs.core.deref.call(null,G__29694));
})(),(function (){var G__29695 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29695) : cljs.core.deref.call(null,G__29695));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj29697 = {};
return obj29697;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._reset[(function (){var G__29701 = x__18599__auto__;
return goog.typeOf(G__29701);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._reset["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._add_method[(function (){var G__29705 = x__18599__auto__;
return goog.typeOf(G__29705);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._add_method["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._remove_method[(function (){var G__29709 = x__18599__auto__;
return goog.typeOf(G__29709);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._remove_method["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._prefer_method[(function (){var G__29713 = x__18599__auto__;
return goog.typeOf(G__29713);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._get_method[(function (){var G__29717 = x__18599__auto__;
return goog.typeOf(G__29717);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._get_method["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._methods[(function (){var G__29721 = x__18599__auto__;
return goog.typeOf(G__29721);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._methods["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__17943__auto__ = mf;
if(and__17943__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__17943__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__18599__auto__ = (((mf == null))?null:mf);
return (function (){var or__17955__auto__ = (cljs.core._prefers[(function (){var G__29725 = x__18599__auto__;
return goog.typeOf(G__29725);
})()]);
if(or__17955__auto__){
return or__17955__auto__;
} else {
var or__17955__auto____$1 = (cljs.core._prefers["_"]);
if(or__17955__auto____$1){
return or__17955__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29727 = this$__$1;
return goog.getUid(G__29727);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29728 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29728) : cljs.core.deref.call(null,G__29728));
})(),(function (){var G__29729 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29729) : cljs.core.deref.call(null,G__29729));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__29730 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29730) : cljs.core.deref.call(null,G__29730));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__29731 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29731) : cljs.core.deref.call(null,G__29731));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29732 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29732) : cljs.core.deref.call(null,G__29732));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29733 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29733) : cljs.core.deref.call(null,G__29733));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__30574 = null;
var G__30574__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__30574__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29734 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29734) : self__.dispatch_fn.call(null,G__29734));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29735 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29735) : target_fn.call(null,G__29735));
});
var G__30574__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29736 = a;
var G__29737 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29736,G__29737) : self__.dispatch_fn.call(null,G__29736,G__29737));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29738 = a;
var G__29739 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29738,G__29739) : target_fn.call(null,G__29738,G__29739));
});
var G__30574__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29740 = a;
var G__29741 = b;
var G__29742 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29740,G__29741,G__29742) : self__.dispatch_fn.call(null,G__29740,G__29741,G__29742));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29743 = a;
var G__29744 = b;
var G__29745 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29743,G__29744,G__29745) : target_fn.call(null,G__29743,G__29744,G__29745));
});
var G__30574__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29746 = a;
var G__29747 = b;
var G__29748 = c;
var G__29749 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29746,G__29747,G__29748,G__29749) : self__.dispatch_fn.call(null,G__29746,G__29747,G__29748,G__29749));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29750 = a;
var G__29751 = b;
var G__29752 = c;
var G__29753 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29750,G__29751,G__29752,G__29753) : target_fn.call(null,G__29750,G__29751,G__29752,G__29753));
});
var G__30574__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29754 = a;
var G__29755 = b;
var G__29756 = c;
var G__29757 = d;
var G__29758 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29754,G__29755,G__29756,G__29757,G__29758) : self__.dispatch_fn.call(null,G__29754,G__29755,G__29756,G__29757,G__29758));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29759 = a;
var G__29760 = b;
var G__29761 = c;
var G__29762 = d;
var G__29763 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29759,G__29760,G__29761,G__29762,G__29763) : target_fn.call(null,G__29759,G__29760,G__29761,G__29762,G__29763));
});
var G__30574__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29764 = a;
var G__29765 = b;
var G__29766 = c;
var G__29767 = d;
var G__29768 = e;
var G__29769 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29764,G__29765,G__29766,G__29767,G__29768,G__29769) : self__.dispatch_fn.call(null,G__29764,G__29765,G__29766,G__29767,G__29768,G__29769));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29770 = a;
var G__29771 = b;
var G__29772 = c;
var G__29773 = d;
var G__29774 = e;
var G__29775 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29770,G__29771,G__29772,G__29773,G__29774,G__29775) : target_fn.call(null,G__29770,G__29771,G__29772,G__29773,G__29774,G__29775));
});
var G__30574__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29776 = a;
var G__29777 = b;
var G__29778 = c;
var G__29779 = d;
var G__29780 = e;
var G__29781 = f;
var G__29782 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782) : self__.dispatch_fn.call(null,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29783 = a;
var G__29784 = b;
var G__29785 = c;
var G__29786 = d;
var G__29787 = e;
var G__29788 = f;
var G__29789 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29783,G__29784,G__29785,G__29786,G__29787,G__29788,G__29789) : target_fn.call(null,G__29783,G__29784,G__29785,G__29786,G__29787,G__29788,G__29789));
});
var G__30574__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29790 = a;
var G__29791 = b;
var G__29792 = c;
var G__29793 = d;
var G__29794 = e;
var G__29795 = f;
var G__29796 = g;
var G__29797 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29790,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797) : self__.dispatch_fn.call(null,G__29790,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29798 = a;
var G__29799 = b;
var G__29800 = c;
var G__29801 = d;
var G__29802 = e;
var G__29803 = f;
var G__29804 = g;
var G__29805 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29798,G__29799,G__29800,G__29801,G__29802,G__29803,G__29804,G__29805) : target_fn.call(null,G__29798,G__29799,G__29800,G__29801,G__29802,G__29803,G__29804,G__29805));
});
var G__30574__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29806 = a;
var G__29807 = b;
var G__29808 = c;
var G__29809 = d;
var G__29810 = e;
var G__29811 = f;
var G__29812 = g;
var G__29813 = h;
var G__29814 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29806,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814) : self__.dispatch_fn.call(null,G__29806,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29815 = a;
var G__29816 = b;
var G__29817 = c;
var G__29818 = d;
var G__29819 = e;
var G__29820 = f;
var G__29821 = g;
var G__29822 = h;
var G__29823 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821,G__29822,G__29823) : target_fn.call(null,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821,G__29822,G__29823));
});
var G__30574__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29824 = a;
var G__29825 = b;
var G__29826 = c;
var G__29827 = d;
var G__29828 = e;
var G__29829 = f;
var G__29830 = g;
var G__29831 = h;
var G__29832 = i;
var G__29833 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833) : self__.dispatch_fn.call(null,G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29834 = a;
var G__29835 = b;
var G__29836 = c;
var G__29837 = d;
var G__29838 = e;
var G__29839 = f;
var G__29840 = g;
var G__29841 = h;
var G__29842 = i;
var G__29843 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29834,G__29835,G__29836,G__29837,G__29838,G__29839,G__29840,G__29841,G__29842,G__29843) : target_fn.call(null,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839,G__29840,G__29841,G__29842,G__29843));
});
var G__30574__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29844 = a;
var G__29845 = b;
var G__29846 = c;
var G__29847 = d;
var G__29848 = e;
var G__29849 = f;
var G__29850 = g;
var G__29851 = h;
var G__29852 = i;
var G__29853 = j;
var G__29854 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854) : self__.dispatch_fn.call(null,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29855 = a;
var G__29856 = b;
var G__29857 = c;
var G__29858 = d;
var G__29859 = e;
var G__29860 = f;
var G__29861 = g;
var G__29862 = h;
var G__29863 = i;
var G__29864 = j;
var G__29865 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29855,G__29856,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865) : target_fn.call(null,G__29855,G__29856,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865));
});
var G__30574__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29866 = a;
var G__29867 = b;
var G__29868 = c;
var G__29869 = d;
var G__29870 = e;
var G__29871 = f;
var G__29872 = g;
var G__29873 = h;
var G__29874 = i;
var G__29875 = j;
var G__29876 = k;
var G__29877 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877) : self__.dispatch_fn.call(null,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29878 = a;
var G__29879 = b;
var G__29880 = c;
var G__29881 = d;
var G__29882 = e;
var G__29883 = f;
var G__29884 = g;
var G__29885 = h;
var G__29886 = i;
var G__29887 = j;
var G__29888 = k;
var G__29889 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889) : target_fn.call(null,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889));
});
var G__30574__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29890 = a;
var G__29891 = b;
var G__29892 = c;
var G__29893 = d;
var G__29894 = e;
var G__29895 = f;
var G__29896 = g;
var G__29897 = h;
var G__29898 = i;
var G__29899 = j;
var G__29900 = k;
var G__29901 = l;
var G__29902 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898,G__29899,G__29900,G__29901,G__29902) : self__.dispatch_fn.call(null,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898,G__29899,G__29900,G__29901,G__29902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29903 = a;
var G__29904 = b;
var G__29905 = c;
var G__29906 = d;
var G__29907 = e;
var G__29908 = f;
var G__29909 = g;
var G__29910 = h;
var G__29911 = i;
var G__29912 = j;
var G__29913 = k;
var G__29914 = l;
var G__29915 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915) : target_fn.call(null,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914,G__29915));
});
var G__30574__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29916 = a;
var G__29917 = b;
var G__29918 = c;
var G__29919 = d;
var G__29920 = e;
var G__29921 = f;
var G__29922 = g;
var G__29923 = h;
var G__29924 = i;
var G__29925 = j;
var G__29926 = k;
var G__29927 = l;
var G__29928 = m;
var G__29929 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29916,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929) : self__.dispatch_fn.call(null,G__29916,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29930 = a;
var G__29931 = b;
var G__29932 = c;
var G__29933 = d;
var G__29934 = e;
var G__29935 = f;
var G__29936 = g;
var G__29937 = h;
var G__29938 = i;
var G__29939 = j;
var G__29940 = k;
var G__29941 = l;
var G__29942 = m;
var G__29943 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29930,G__29931,G__29932,G__29933,G__29934,G__29935,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943) : target_fn.call(null,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943));
});
var G__30574__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29944 = a;
var G__29945 = b;
var G__29946 = c;
var G__29947 = d;
var G__29948 = e;
var G__29949 = f;
var G__29950 = g;
var G__29951 = h;
var G__29952 = i;
var G__29953 = j;
var G__29954 = k;
var G__29955 = l;
var G__29956 = m;
var G__29957 = n;
var G__29958 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29944,G__29945,G__29946,G__29947,G__29948,G__29949,G__29950,G__29951,G__29952,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958) : self__.dispatch_fn.call(null,G__29944,G__29945,G__29946,G__29947,G__29948,G__29949,G__29950,G__29951,G__29952,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29959 = a;
var G__29960 = b;
var G__29961 = c;
var G__29962 = d;
var G__29963 = e;
var G__29964 = f;
var G__29965 = g;
var G__29966 = h;
var G__29967 = i;
var G__29968 = j;
var G__29969 = k;
var G__29970 = l;
var G__29971 = m;
var G__29972 = n;
var G__29973 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968,G__29969,G__29970,G__29971,G__29972,G__29973) : target_fn.call(null,G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968,G__29969,G__29970,G__29971,G__29972,G__29973));
});
var G__30574__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29974 = a;
var G__29975 = b;
var G__29976 = c;
var G__29977 = d;
var G__29978 = e;
var G__29979 = f;
var G__29980 = g;
var G__29981 = h;
var G__29982 = i;
var G__29983 = j;
var G__29984 = k;
var G__29985 = l;
var G__29986 = m;
var G__29987 = n;
var G__29988 = o;
var G__29989 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989) : self__.dispatch_fn.call(null,G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29990 = a;
var G__29991 = b;
var G__29992 = c;
var G__29993 = d;
var G__29994 = e;
var G__29995 = f;
var G__29996 = g;
var G__29997 = h;
var G__29998 = i;
var G__29999 = j;
var G__30000 = k;
var G__30001 = l;
var G__30002 = m;
var G__30003 = n;
var G__30004 = o;
var G__30005 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005) : target_fn.call(null,G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005));
});
var G__30574__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30006 = a;
var G__30007 = b;
var G__30008 = c;
var G__30009 = d;
var G__30010 = e;
var G__30011 = f;
var G__30012 = g;
var G__30013 = h;
var G__30014 = i;
var G__30015 = j;
var G__30016 = k;
var G__30017 = l;
var G__30018 = m;
var G__30019 = n;
var G__30020 = o;
var G__30021 = p;
var G__30022 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__30006,G__30007,G__30008,G__30009,G__30010,G__30011,G__30012,G__30013,G__30014,G__30015,G__30016,G__30017,G__30018,G__30019,G__30020,G__30021,G__30022) : self__.dispatch_fn.call(null,G__30006,G__30007,G__30008,G__30009,G__30010,G__30011,G__30012,G__30013,G__30014,G__30015,G__30016,G__30017,G__30018,G__30019,G__30020,G__30021,G__30022));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30023 = a;
var G__30024 = b;
var G__30025 = c;
var G__30026 = d;
var G__30027 = e;
var G__30028 = f;
var G__30029 = g;
var G__30030 = h;
var G__30031 = i;
var G__30032 = j;
var G__30033 = k;
var G__30034 = l;
var G__30035 = m;
var G__30036 = n;
var G__30037 = o;
var G__30038 = p;
var G__30039 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__30023,G__30024,G__30025,G__30026,G__30027,G__30028,G__30029,G__30030,G__30031,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038,G__30039) : target_fn.call(null,G__30023,G__30024,G__30025,G__30026,G__30027,G__30028,G__30029,G__30030,G__30031,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038,G__30039));
});
var G__30574__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30040 = a;
var G__30041 = b;
var G__30042 = c;
var G__30043 = d;
var G__30044 = e;
var G__30045 = f;
var G__30046 = g;
var G__30047 = h;
var G__30048 = i;
var G__30049 = j;
var G__30050 = k;
var G__30051 = l;
var G__30052 = m;
var G__30053 = n;
var G__30054 = o;
var G__30055 = p;
var G__30056 = q;
var G__30057 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__30040,G__30041,G__30042,G__30043,G__30044,G__30045,G__30046,G__30047,G__30048,G__30049,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055,G__30056,G__30057) : self__.dispatch_fn.call(null,G__30040,G__30041,G__30042,G__30043,G__30044,G__30045,G__30046,G__30047,G__30048,G__30049,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055,G__30056,G__30057));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30058 = a;
var G__30059 = b;
var G__30060 = c;
var G__30061 = d;
var G__30062 = e;
var G__30063 = f;
var G__30064 = g;
var G__30065 = h;
var G__30066 = i;
var G__30067 = j;
var G__30068 = k;
var G__30069 = l;
var G__30070 = m;
var G__30071 = n;
var G__30072 = o;
var G__30073 = p;
var G__30074 = q;
var G__30075 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__30058,G__30059,G__30060,G__30061,G__30062,G__30063,G__30064,G__30065,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075) : target_fn.call(null,G__30058,G__30059,G__30060,G__30061,G__30062,G__30063,G__30064,G__30065,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075));
});
var G__30574__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30076 = a;
var G__30077 = b;
var G__30078 = c;
var G__30079 = d;
var G__30080 = e;
var G__30081 = f;
var G__30082 = g;
var G__30083 = h;
var G__30084 = i;
var G__30085 = j;
var G__30086 = k;
var G__30087 = l;
var G__30088 = m;
var G__30089 = n;
var G__30090 = o;
var G__30091 = p;
var G__30092 = q;
var G__30093 = r;
var G__30094 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__30076,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094) : self__.dispatch_fn.call(null,G__30076,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30095 = a;
var G__30096 = b;
var G__30097 = c;
var G__30098 = d;
var G__30099 = e;
var G__30100 = f;
var G__30101 = g;
var G__30102 = h;
var G__30103 = i;
var G__30104 = j;
var G__30105 = k;
var G__30106 = l;
var G__30107 = m;
var G__30108 = n;
var G__30109 = o;
var G__30110 = p;
var G__30111 = q;
var G__30112 = r;
var G__30113 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__30095,G__30096,G__30097,G__30098,G__30099,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113) : target_fn.call(null,G__30095,G__30096,G__30097,G__30098,G__30099,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113));
});
var G__30574__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__30114 = a;
var G__30115 = b;
var G__30116 = c;
var G__30117 = d;
var G__30118 = e;
var G__30119 = f;
var G__30120 = g;
var G__30121 = h;
var G__30122 = i;
var G__30123 = j;
var G__30124 = k;
var G__30125 = l;
var G__30126 = m;
var G__30127 = n;
var G__30128 = o;
var G__30129 = p;
var G__30130 = q;
var G__30131 = r;
var G__30132 = s;
var G__30133 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__30114,G__30115,G__30116,G__30117,G__30118,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127,G__30128,G__30129,G__30130,G__30131,G__30132,G__30133) : self__.dispatch_fn.call(null,G__30114,G__30115,G__30116,G__30117,G__30118,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127,G__30128,G__30129,G__30130,G__30131,G__30132,G__30133));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30134 = a;
var G__30135 = b;
var G__30136 = c;
var G__30137 = d;
var G__30138 = e;
var G__30139 = f;
var G__30140 = g;
var G__30141 = h;
var G__30142 = i;
var G__30143 = j;
var G__30144 = k;
var G__30145 = l;
var G__30146 = m;
var G__30147 = n;
var G__30148 = o;
var G__30149 = p;
var G__30150 = q;
var G__30151 = r;
var G__30152 = s;
var G__30153 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__30134,G__30135,G__30136,G__30137,G__30138,G__30139,G__30140,G__30141,G__30142,G__30143,G__30144,G__30145,G__30146,G__30147,G__30148,G__30149,G__30150,G__30151,G__30152,G__30153) : target_fn.call(null,G__30134,G__30135,G__30136,G__30137,G__30138,G__30139,G__30140,G__30141,G__30142,G__30143,G__30144,G__30145,G__30146,G__30147,G__30148,G__30149,G__30150,G__30151,G__30152,G__30153));
});
var G__30574__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__30574 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30574__1.call(this,self__);
case 2:
return G__30574__2.call(this,self__,a);
case 3:
return G__30574__3.call(this,self__,a,b);
case 4:
return G__30574__4.call(this,self__,a,b,c);
case 5:
return G__30574__5.call(this,self__,a,b,c,d);
case 6:
return G__30574__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30574__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30574__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30574__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30574__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30574__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30574__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30574__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30574__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30574__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30574__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30574__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30574__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30574__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30574__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30574__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30574__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30574.cljs$core$IFn$_invoke$arity$1 = G__30574__1;
G__30574.cljs$core$IFn$_invoke$arity$2 = G__30574__2;
G__30574.cljs$core$IFn$_invoke$arity$3 = G__30574__3;
G__30574.cljs$core$IFn$_invoke$arity$4 = G__30574__4;
G__30574.cljs$core$IFn$_invoke$arity$5 = G__30574__5;
G__30574.cljs$core$IFn$_invoke$arity$6 = G__30574__6;
G__30574.cljs$core$IFn$_invoke$arity$7 = G__30574__7;
G__30574.cljs$core$IFn$_invoke$arity$8 = G__30574__8;
G__30574.cljs$core$IFn$_invoke$arity$9 = G__30574__9;
G__30574.cljs$core$IFn$_invoke$arity$10 = G__30574__10;
G__30574.cljs$core$IFn$_invoke$arity$11 = G__30574__11;
G__30574.cljs$core$IFn$_invoke$arity$12 = G__30574__12;
G__30574.cljs$core$IFn$_invoke$arity$13 = G__30574__13;
G__30574.cljs$core$IFn$_invoke$arity$14 = G__30574__14;
G__30574.cljs$core$IFn$_invoke$arity$15 = G__30574__15;
G__30574.cljs$core$IFn$_invoke$arity$16 = G__30574__16;
G__30574.cljs$core$IFn$_invoke$arity$17 = G__30574__17;
G__30574.cljs$core$IFn$_invoke$arity$18 = G__30574__18;
G__30574.cljs$core$IFn$_invoke$arity$19 = G__30574__19;
G__30574.cljs$core$IFn$_invoke$arity$20 = G__30574__20;
G__30574.cljs$core$IFn$_invoke$arity$21 = G__30574__21;
G__30574.cljs$core$IFn$_invoke$arity$22 = G__30574__22;
return G__30574;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args29726){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29726)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30154 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__30154) : self__.dispatch_fn.call(null,G__30154));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30155 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__30155) : target_fn.call(null,G__30155));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30156 = a;
var G__30157 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__30156,G__30157) : self__.dispatch_fn.call(null,G__30156,G__30157));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30158 = a;
var G__30159 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__30158,G__30159) : target_fn.call(null,G__30158,G__30159));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30160 = a;
var G__30161 = b;
var G__30162 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__30160,G__30161,G__30162) : self__.dispatch_fn.call(null,G__30160,G__30161,G__30162));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30163 = a;
var G__30164 = b;
var G__30165 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__30163,G__30164,G__30165) : target_fn.call(null,G__30163,G__30164,G__30165));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30166 = a;
var G__30167 = b;
var G__30168 = c;
var G__30169 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__30166,G__30167,G__30168,G__30169) : self__.dispatch_fn.call(null,G__30166,G__30167,G__30168,G__30169));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30170 = a;
var G__30171 = b;
var G__30172 = c;
var G__30173 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__30170,G__30171,G__30172,G__30173) : target_fn.call(null,G__30170,G__30171,G__30172,G__30173));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30174 = a;
var G__30175 = b;
var G__30176 = c;
var G__30177 = d;
var G__30178 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__30174,G__30175,G__30176,G__30177,G__30178) : self__.dispatch_fn.call(null,G__30174,G__30175,G__30176,G__30177,G__30178));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30179 = a;
var G__30180 = b;
var G__30181 = c;
var G__30182 = d;
var G__30183 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__30179,G__30180,G__30181,G__30182,G__30183) : target_fn.call(null,G__30179,G__30180,G__30181,G__30182,G__30183));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30184 = a;
var G__30185 = b;
var G__30186 = c;
var G__30187 = d;
var G__30188 = e;
var G__30189 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__30184,G__30185,G__30186,G__30187,G__30188,G__30189) : self__.dispatch_fn.call(null,G__30184,G__30185,G__30186,G__30187,G__30188,G__30189));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30190 = a;
var G__30191 = b;
var G__30192 = c;
var G__30193 = d;
var G__30194 = e;
var G__30195 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__30190,G__30191,G__30192,G__30193,G__30194,G__30195) : target_fn.call(null,G__30190,G__30191,G__30192,G__30193,G__30194,G__30195));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30196 = a;
var G__30197 = b;
var G__30198 = c;
var G__30199 = d;
var G__30200 = e;
var G__30201 = f;
var G__30202 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__30196,G__30197,G__30198,G__30199,G__30200,G__30201,G__30202) : self__.dispatch_fn.call(null,G__30196,G__30197,G__30198,G__30199,G__30200,G__30201,G__30202));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30203 = a;
var G__30204 = b;
var G__30205 = c;
var G__30206 = d;
var G__30207 = e;
var G__30208 = f;
var G__30209 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__30203,G__30204,G__30205,G__30206,G__30207,G__30208,G__30209) : target_fn.call(null,G__30203,G__30204,G__30205,G__30206,G__30207,G__30208,G__30209));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30210 = a;
var G__30211 = b;
var G__30212 = c;
var G__30213 = d;
var G__30214 = e;
var G__30215 = f;
var G__30216 = g;
var G__30217 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__30210,G__30211,G__30212,G__30213,G__30214,G__30215,G__30216,G__30217) : self__.dispatch_fn.call(null,G__30210,G__30211,G__30212,G__30213,G__30214,G__30215,G__30216,G__30217));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30218 = a;
var G__30219 = b;
var G__30220 = c;
var G__30221 = d;
var G__30222 = e;
var G__30223 = f;
var G__30224 = g;
var G__30225 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__30218,G__30219,G__30220,G__30221,G__30222,G__30223,G__30224,G__30225) : target_fn.call(null,G__30218,G__30219,G__30220,G__30221,G__30222,G__30223,G__30224,G__30225));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30226 = a;
var G__30227 = b;
var G__30228 = c;
var G__30229 = d;
var G__30230 = e;
var G__30231 = f;
var G__30232 = g;
var G__30233 = h;
var G__30234 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__30226,G__30227,G__30228,G__30229,G__30230,G__30231,G__30232,G__30233,G__30234) : self__.dispatch_fn.call(null,G__30226,G__30227,G__30228,G__30229,G__30230,G__30231,G__30232,G__30233,G__30234));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30235 = a;
var G__30236 = b;
var G__30237 = c;
var G__30238 = d;
var G__30239 = e;
var G__30240 = f;
var G__30241 = g;
var G__30242 = h;
var G__30243 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__30235,G__30236,G__30237,G__30238,G__30239,G__30240,G__30241,G__30242,G__30243) : target_fn.call(null,G__30235,G__30236,G__30237,G__30238,G__30239,G__30240,G__30241,G__30242,G__30243));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30244 = a;
var G__30245 = b;
var G__30246 = c;
var G__30247 = d;
var G__30248 = e;
var G__30249 = f;
var G__30250 = g;
var G__30251 = h;
var G__30252 = i;
var G__30253 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__30244,G__30245,G__30246,G__30247,G__30248,G__30249,G__30250,G__30251,G__30252,G__30253) : self__.dispatch_fn.call(null,G__30244,G__30245,G__30246,G__30247,G__30248,G__30249,G__30250,G__30251,G__30252,G__30253));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30254 = a;
var G__30255 = b;
var G__30256 = c;
var G__30257 = d;
var G__30258 = e;
var G__30259 = f;
var G__30260 = g;
var G__30261 = h;
var G__30262 = i;
var G__30263 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__30254,G__30255,G__30256,G__30257,G__30258,G__30259,G__30260,G__30261,G__30262,G__30263) : target_fn.call(null,G__30254,G__30255,G__30256,G__30257,G__30258,G__30259,G__30260,G__30261,G__30262,G__30263));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30264 = a;
var G__30265 = b;
var G__30266 = c;
var G__30267 = d;
var G__30268 = e;
var G__30269 = f;
var G__30270 = g;
var G__30271 = h;
var G__30272 = i;
var G__30273 = j;
var G__30274 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__30264,G__30265,G__30266,G__30267,G__30268,G__30269,G__30270,G__30271,G__30272,G__30273,G__30274) : self__.dispatch_fn.call(null,G__30264,G__30265,G__30266,G__30267,G__30268,G__30269,G__30270,G__30271,G__30272,G__30273,G__30274));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30275 = a;
var G__30276 = b;
var G__30277 = c;
var G__30278 = d;
var G__30279 = e;
var G__30280 = f;
var G__30281 = g;
var G__30282 = h;
var G__30283 = i;
var G__30284 = j;
var G__30285 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__30275,G__30276,G__30277,G__30278,G__30279,G__30280,G__30281,G__30282,G__30283,G__30284,G__30285) : target_fn.call(null,G__30275,G__30276,G__30277,G__30278,G__30279,G__30280,G__30281,G__30282,G__30283,G__30284,G__30285));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30286 = a;
var G__30287 = b;
var G__30288 = c;
var G__30289 = d;
var G__30290 = e;
var G__30291 = f;
var G__30292 = g;
var G__30293 = h;
var G__30294 = i;
var G__30295 = j;
var G__30296 = k;
var G__30297 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__30286,G__30287,G__30288,G__30289,G__30290,G__30291,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297) : self__.dispatch_fn.call(null,G__30286,G__30287,G__30288,G__30289,G__30290,G__30291,G__30292,G__30293,G__30294,G__30295,G__30296,G__30297));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30298 = a;
var G__30299 = b;
var G__30300 = c;
var G__30301 = d;
var G__30302 = e;
var G__30303 = f;
var G__30304 = g;
var G__30305 = h;
var G__30306 = i;
var G__30307 = j;
var G__30308 = k;
var G__30309 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__30298,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306,G__30307,G__30308,G__30309) : target_fn.call(null,G__30298,G__30299,G__30300,G__30301,G__30302,G__30303,G__30304,G__30305,G__30306,G__30307,G__30308,G__30309));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30310 = a;
var G__30311 = b;
var G__30312 = c;
var G__30313 = d;
var G__30314 = e;
var G__30315 = f;
var G__30316 = g;
var G__30317 = h;
var G__30318 = i;
var G__30319 = j;
var G__30320 = k;
var G__30321 = l;
var G__30322 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__30310,G__30311,G__30312,G__30313,G__30314,G__30315,G__30316,G__30317,G__30318,G__30319,G__30320,G__30321,G__30322) : self__.dispatch_fn.call(null,G__30310,G__30311,G__30312,G__30313,G__30314,G__30315,G__30316,G__30317,G__30318,G__30319,G__30320,G__30321,G__30322));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30323 = a;
var G__30324 = b;
var G__30325 = c;
var G__30326 = d;
var G__30327 = e;
var G__30328 = f;
var G__30329 = g;
var G__30330 = h;
var G__30331 = i;
var G__30332 = j;
var G__30333 = k;
var G__30334 = l;
var G__30335 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__30323,G__30324,G__30325,G__30326,G__30327,G__30328,G__30329,G__30330,G__30331,G__30332,G__30333,G__30334,G__30335) : target_fn.call(null,G__30323,G__30324,G__30325,G__30326,G__30327,G__30328,G__30329,G__30330,G__30331,G__30332,G__30333,G__30334,G__30335));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30336 = a;
var G__30337 = b;
var G__30338 = c;
var G__30339 = d;
var G__30340 = e;
var G__30341 = f;
var G__30342 = g;
var G__30343 = h;
var G__30344 = i;
var G__30345 = j;
var G__30346 = k;
var G__30347 = l;
var G__30348 = m;
var G__30349 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__30336,G__30337,G__30338,G__30339,G__30340,G__30341,G__30342,G__30343,G__30344,G__30345,G__30346,G__30347,G__30348,G__30349) : self__.dispatch_fn.call(null,G__30336,G__30337,G__30338,G__30339,G__30340,G__30341,G__30342,G__30343,G__30344,G__30345,G__30346,G__30347,G__30348,G__30349));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30350 = a;
var G__30351 = b;
var G__30352 = c;
var G__30353 = d;
var G__30354 = e;
var G__30355 = f;
var G__30356 = g;
var G__30357 = h;
var G__30358 = i;
var G__30359 = j;
var G__30360 = k;
var G__30361 = l;
var G__30362 = m;
var G__30363 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__30350,G__30351,G__30352,G__30353,G__30354,G__30355,G__30356,G__30357,G__30358,G__30359,G__30360,G__30361,G__30362,G__30363) : target_fn.call(null,G__30350,G__30351,G__30352,G__30353,G__30354,G__30355,G__30356,G__30357,G__30358,G__30359,G__30360,G__30361,G__30362,G__30363));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30364 = a;
var G__30365 = b;
var G__30366 = c;
var G__30367 = d;
var G__30368 = e;
var G__30369 = f;
var G__30370 = g;
var G__30371 = h;
var G__30372 = i;
var G__30373 = j;
var G__30374 = k;
var G__30375 = l;
var G__30376 = m;
var G__30377 = n;
var G__30378 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__30364,G__30365,G__30366,G__30367,G__30368,G__30369,G__30370,G__30371,G__30372,G__30373,G__30374,G__30375,G__30376,G__30377,G__30378) : self__.dispatch_fn.call(null,G__30364,G__30365,G__30366,G__30367,G__30368,G__30369,G__30370,G__30371,G__30372,G__30373,G__30374,G__30375,G__30376,G__30377,G__30378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30379 = a;
var G__30380 = b;
var G__30381 = c;
var G__30382 = d;
var G__30383 = e;
var G__30384 = f;
var G__30385 = g;
var G__30386 = h;
var G__30387 = i;
var G__30388 = j;
var G__30389 = k;
var G__30390 = l;
var G__30391 = m;
var G__30392 = n;
var G__30393 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__30379,G__30380,G__30381,G__30382,G__30383,G__30384,G__30385,G__30386,G__30387,G__30388,G__30389,G__30390,G__30391,G__30392,G__30393) : target_fn.call(null,G__30379,G__30380,G__30381,G__30382,G__30383,G__30384,G__30385,G__30386,G__30387,G__30388,G__30389,G__30390,G__30391,G__30392,G__30393));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30394 = a;
var G__30395 = b;
var G__30396 = c;
var G__30397 = d;
var G__30398 = e;
var G__30399 = f;
var G__30400 = g;
var G__30401 = h;
var G__30402 = i;
var G__30403 = j;
var G__30404 = k;
var G__30405 = l;
var G__30406 = m;
var G__30407 = n;
var G__30408 = o;
var G__30409 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__30394,G__30395,G__30396,G__30397,G__30398,G__30399,G__30400,G__30401,G__30402,G__30403,G__30404,G__30405,G__30406,G__30407,G__30408,G__30409) : self__.dispatch_fn.call(null,G__30394,G__30395,G__30396,G__30397,G__30398,G__30399,G__30400,G__30401,G__30402,G__30403,G__30404,G__30405,G__30406,G__30407,G__30408,G__30409));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30410 = a;
var G__30411 = b;
var G__30412 = c;
var G__30413 = d;
var G__30414 = e;
var G__30415 = f;
var G__30416 = g;
var G__30417 = h;
var G__30418 = i;
var G__30419 = j;
var G__30420 = k;
var G__30421 = l;
var G__30422 = m;
var G__30423 = n;
var G__30424 = o;
var G__30425 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__30410,G__30411,G__30412,G__30413,G__30414,G__30415,G__30416,G__30417,G__30418,G__30419,G__30420,G__30421,G__30422,G__30423,G__30424,G__30425) : target_fn.call(null,G__30410,G__30411,G__30412,G__30413,G__30414,G__30415,G__30416,G__30417,G__30418,G__30419,G__30420,G__30421,G__30422,G__30423,G__30424,G__30425));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30426 = a;
var G__30427 = b;
var G__30428 = c;
var G__30429 = d;
var G__30430 = e;
var G__30431 = f;
var G__30432 = g;
var G__30433 = h;
var G__30434 = i;
var G__30435 = j;
var G__30436 = k;
var G__30437 = l;
var G__30438 = m;
var G__30439 = n;
var G__30440 = o;
var G__30441 = p;
var G__30442 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__30426,G__30427,G__30428,G__30429,G__30430,G__30431,G__30432,G__30433,G__30434,G__30435,G__30436,G__30437,G__30438,G__30439,G__30440,G__30441,G__30442) : self__.dispatch_fn.call(null,G__30426,G__30427,G__30428,G__30429,G__30430,G__30431,G__30432,G__30433,G__30434,G__30435,G__30436,G__30437,G__30438,G__30439,G__30440,G__30441,G__30442));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30443 = a;
var G__30444 = b;
var G__30445 = c;
var G__30446 = d;
var G__30447 = e;
var G__30448 = f;
var G__30449 = g;
var G__30450 = h;
var G__30451 = i;
var G__30452 = j;
var G__30453 = k;
var G__30454 = l;
var G__30455 = m;
var G__30456 = n;
var G__30457 = o;
var G__30458 = p;
var G__30459 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__30443,G__30444,G__30445,G__30446,G__30447,G__30448,G__30449,G__30450,G__30451,G__30452,G__30453,G__30454,G__30455,G__30456,G__30457,G__30458,G__30459) : target_fn.call(null,G__30443,G__30444,G__30445,G__30446,G__30447,G__30448,G__30449,G__30450,G__30451,G__30452,G__30453,G__30454,G__30455,G__30456,G__30457,G__30458,G__30459));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30460 = a;
var G__30461 = b;
var G__30462 = c;
var G__30463 = d;
var G__30464 = e;
var G__30465 = f;
var G__30466 = g;
var G__30467 = h;
var G__30468 = i;
var G__30469 = j;
var G__30470 = k;
var G__30471 = l;
var G__30472 = m;
var G__30473 = n;
var G__30474 = o;
var G__30475 = p;
var G__30476 = q;
var G__30477 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__30460,G__30461,G__30462,G__30463,G__30464,G__30465,G__30466,G__30467,G__30468,G__30469,G__30470,G__30471,G__30472,G__30473,G__30474,G__30475,G__30476,G__30477) : self__.dispatch_fn.call(null,G__30460,G__30461,G__30462,G__30463,G__30464,G__30465,G__30466,G__30467,G__30468,G__30469,G__30470,G__30471,G__30472,G__30473,G__30474,G__30475,G__30476,G__30477));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30478 = a;
var G__30479 = b;
var G__30480 = c;
var G__30481 = d;
var G__30482 = e;
var G__30483 = f;
var G__30484 = g;
var G__30485 = h;
var G__30486 = i;
var G__30487 = j;
var G__30488 = k;
var G__30489 = l;
var G__30490 = m;
var G__30491 = n;
var G__30492 = o;
var G__30493 = p;
var G__30494 = q;
var G__30495 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__30478,G__30479,G__30480,G__30481,G__30482,G__30483,G__30484,G__30485,G__30486,G__30487,G__30488,G__30489,G__30490,G__30491,G__30492,G__30493,G__30494,G__30495) : target_fn.call(null,G__30478,G__30479,G__30480,G__30481,G__30482,G__30483,G__30484,G__30485,G__30486,G__30487,G__30488,G__30489,G__30490,G__30491,G__30492,G__30493,G__30494,G__30495));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30496 = a;
var G__30497 = b;
var G__30498 = c;
var G__30499 = d;
var G__30500 = e;
var G__30501 = f;
var G__30502 = g;
var G__30503 = h;
var G__30504 = i;
var G__30505 = j;
var G__30506 = k;
var G__30507 = l;
var G__30508 = m;
var G__30509 = n;
var G__30510 = o;
var G__30511 = p;
var G__30512 = q;
var G__30513 = r;
var G__30514 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__30496,G__30497,G__30498,G__30499,G__30500,G__30501,G__30502,G__30503,G__30504,G__30505,G__30506,G__30507,G__30508,G__30509,G__30510,G__30511,G__30512,G__30513,G__30514) : self__.dispatch_fn.call(null,G__30496,G__30497,G__30498,G__30499,G__30500,G__30501,G__30502,G__30503,G__30504,G__30505,G__30506,G__30507,G__30508,G__30509,G__30510,G__30511,G__30512,G__30513,G__30514));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30515 = a;
var G__30516 = b;
var G__30517 = c;
var G__30518 = d;
var G__30519 = e;
var G__30520 = f;
var G__30521 = g;
var G__30522 = h;
var G__30523 = i;
var G__30524 = j;
var G__30525 = k;
var G__30526 = l;
var G__30527 = m;
var G__30528 = n;
var G__30529 = o;
var G__30530 = p;
var G__30531 = q;
var G__30532 = r;
var G__30533 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__30515,G__30516,G__30517,G__30518,G__30519,G__30520,G__30521,G__30522,G__30523,G__30524,G__30525,G__30526,G__30527,G__30528,G__30529,G__30530,G__30531,G__30532,G__30533) : target_fn.call(null,G__30515,G__30516,G__30517,G__30518,G__30519,G__30520,G__30521,G__30522,G__30523,G__30524,G__30525,G__30526,G__30527,G__30528,G__30529,G__30530,G__30531,G__30532,G__30533));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30534 = a;
var G__30535 = b;
var G__30536 = c;
var G__30537 = d;
var G__30538 = e;
var G__30539 = f;
var G__30540 = g;
var G__30541 = h;
var G__30542 = i;
var G__30543 = j;
var G__30544 = k;
var G__30545 = l;
var G__30546 = m;
var G__30547 = n;
var G__30548 = o;
var G__30549 = p;
var G__30550 = q;
var G__30551 = r;
var G__30552 = s;
var G__30553 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__30534,G__30535,G__30536,G__30537,G__30538,G__30539,G__30540,G__30541,G__30542,G__30543,G__30544,G__30545,G__30546,G__30547,G__30548,G__30549,G__30550,G__30551,G__30552,G__30553) : self__.dispatch_fn.call(null,G__30534,G__30535,G__30536,G__30537,G__30538,G__30539,G__30540,G__30541,G__30542,G__30543,G__30544,G__30545,G__30546,G__30547,G__30548,G__30549,G__30550,G__30551,G__30552,G__30553));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30554 = a;
var G__30555 = b;
var G__30556 = c;
var G__30557 = d;
var G__30558 = e;
var G__30559 = f;
var G__30560 = g;
var G__30561 = h;
var G__30562 = i;
var G__30563 = j;
var G__30564 = k;
var G__30565 = l;
var G__30566 = m;
var G__30567 = n;
var G__30568 = o;
var G__30569 = p;
var G__30570 = q;
var G__30571 = r;
var G__30572 = s;
var G__30573 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__30554,G__30555,G__30556,G__30557,G__30558,G__30559,G__30560,G__30561,G__30562,G__30563,G__30564,G__30565,G__30566,G__30567,G__30568,G__30569,G__30570,G__30571,G__30572,G__30573) : target_fn.call(null,G__30554,G__30555,G__30556,G__30557,G__30558,G__30559,G__30560,G__30561,G__30562,G__30563,G__30564,G__30565,G__30566,G__30567,G__30568,G__30569,G__30570,G__30571,G__30572,G__30573));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__30575 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__30575);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__18542__auto__,writer__18543__auto__,opt__18544__auto__){
return cljs.core._write(writer__18543__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__30580 = msg;
return Error(G__30580);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__30585 = x;
var G__30586 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__30585,G__30586) : pred.call(null,G__30585,G__30586));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__30587 = y;
var G__30588 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__30587,G__30588) : pred.call(null,G__30587,G__30588));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map