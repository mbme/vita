// Compiled by ClojureScript 0.0-2740 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2740";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__19194__delegate = function (args){
return console.log.apply(console,(function (){var G__19193 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__19193) : cljs.core.into_array.call(null,G__19193));
})());
};
var G__19194 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19195__i = 0, G__19195__a = new Array(arguments.length -  0);
while (G__19195__i < G__19195__a.length) {G__19195__a[G__19195__i] = arguments[G__19195__i + 0]; ++G__19195__i;}
  args = new cljs.core.IndexedSeq(G__19195__a,0);
} 
return G__19194__delegate.call(this,args);};
G__19194.cljs$lang$maxFixedArity = 0;
G__19194.cljs$lang$applyTo = (function (arglist__19196){
var args = cljs.core.seq(arglist__19196);
return G__19194__delegate(args);
});
G__19194.cljs$core$IFn$_invoke$arity$variadic = G__19194__delegate;
return G__19194;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__19198 = x;
return goog.isString(G__19198);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__19200 = x__$1;
return goog.typeOf(G__19200);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12613__auto__ = ty;
if(cljs.core.truth_(and__12613__auto__)){
return ty.cljs$lang$type;
} else {
return and__12613__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__19202 = obj;
return goog.typeOf(G__19202);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__19204 = Symbol;
return goog.typeOf(G__19204);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13512__auto___19206 = len;
var i_19207 = (0);
while(true){
if((i_19207 < n__13512__auto___19206)){
(new_arr[i_19207] = (arr[i_19207]));

var G__19208 = (i_19207 + (1));
i_19207 = G__19208;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__19209 = (i + (1));
i = G__19209;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__19218__delegate = function (array,i,idxs){
var G__19215 = aget;
var G__19216 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__19217 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__19215,G__19216,G__19217) : cljs.core.apply.call(null,G__19215,G__19216,G__19217));
};
var G__19218 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__19219__i = 0, G__19219__a = new Array(arguments.length -  2);
while (G__19219__i < G__19219__a.length) {G__19219__a[G__19219__i] = arguments[G__19219__i + 2]; ++G__19219__i;}
  idxs = new cljs.core.IndexedSeq(G__19219__a,0);
} 
return G__19218__delegate.call(this,array,i,idxs);};
G__19218.cljs$lang$maxFixedArity = 2;
G__19218.cljs$lang$applyTo = (function (arglist__19220){
var array = cljs.core.first(arglist__19220);
arglist__19220 = cljs.core.next(arglist__19220);
var i = cljs.core.first(arglist__19220);
var idxs = cljs.core.rest(arglist__19220);
return G__19218__delegate(array,i,idxs);
});
G__19218.cljs$core$IFn$_invoke$arity$variadic = G__19218__delegate;
return G__19218;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__19221 = null;
if (arguments.length > 2) {
var G__19222__i = 0, G__19222__a = new Array(arguments.length -  2);
while (G__19222__i < G__19222__a.length) {G__19222__a[G__19222__i] = arguments[G__19222__i + 2]; ++G__19222__i;}
G__19221 = new cljs.core.IndexedSeq(G__19222__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__19221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__19231__delegate = function (array,idx,idx2,idxv){
var G__19227 = aset;
var G__19228 = (array[idx]);
var G__19229 = idx2;
var G__19230 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__19227,G__19228,G__19229,G__19230) : cljs.core.apply.call(null,G__19227,G__19228,G__19229,G__19230));
};
var G__19231 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__19232__i = 0, G__19232__a = new Array(arguments.length -  3);
while (G__19232__i < G__19232__a.length) {G__19232__a[G__19232__i] = arguments[G__19232__i + 3]; ++G__19232__i;}
  idxv = new cljs.core.IndexedSeq(G__19232__a,0);
} 
return G__19231__delegate.call(this,array,idx,idx2,idxv);};
G__19231.cljs$lang$maxFixedArity = 3;
G__19231.cljs$lang$applyTo = (function (arglist__19233){
var array = cljs.core.first(arglist__19233);
arglist__19233 = cljs.core.next(arglist__19233);
var idx = cljs.core.first(arglist__19233);
arglist__19233 = cljs.core.next(arglist__19233);
var idx2 = cljs.core.first(arglist__19233);
var idxv = cljs.core.rest(arglist__19233);
return G__19231__delegate(array,idx,idx2,idxv);
});
G__19231.cljs$core$IFn$_invoke$arity$variadic = G__19231__delegate;
return G__19231;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__19234 = null;
if (arguments.length > 3) {
var G__19235__i = 0, G__19235__a = new Array(arguments.length -  3);
while (G__19235__i < G__19235__a.length) {G__19235__a[G__19235__i] = arguments[G__19235__i + 3]; ++G__19235__i;}
G__19234 = new cljs.core.IndexedSeq(G__19235__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__19234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__19241 = (function (a,x){
a.push(x);

return a;
});
var G__19242 = [];
var G__19243 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19241,G__19242,G__19243) : cljs.core.reduce.call(null,G__19241,G__19242,G__19243));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__19244__i = 0, G__19244__a = new Array(arguments.length -  2);
while (G__19244__i < G__19244__a.length) {G__19244__a[G__19244__i] = arguments[G__19244__i + 2]; ++G__19244__i;}
  args = new cljs.core.IndexedSeq(G__19244__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__19245){
var obj = cljs.core.first(arglist__19245);
arglist__19245 = cljs.core.next(arglist__19245);
var s = cljs.core.first(arglist__19245);
var args = cljs.core.rest(arglist__19245);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj19247 = {};
return obj19247;
})();


cljs.core.IFn = (function (){var obj19249 = {};
return obj19249;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19295 = x__13269__auto__;
return goog.typeOf(G__19295);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19297 = x__13269__auto__;
return goog.typeOf(G__19297);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19299 = x__13269__auto__;
return goog.typeOf(G__19299);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19301 = x__13269__auto__;
return goog.typeOf(G__19301);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19303 = x__13269__auto__;
return goog.typeOf(G__19303);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19305 = x__13269__auto__;
return goog.typeOf(G__19305);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19307 = x__13269__auto__;
return goog.typeOf(G__19307);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19309 = x__13269__auto__;
return goog.typeOf(G__19309);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19311 = x__13269__auto__;
return goog.typeOf(G__19311);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19313 = x__13269__auto__;
return goog.typeOf(G__19313);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19315 = x__13269__auto__;
return goog.typeOf(G__19315);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19317 = x__13269__auto__;
return goog.typeOf(G__19317);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19319 = x__13269__auto__;
return goog.typeOf(G__19319);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19321 = x__13269__auto__;
return goog.typeOf(G__19321);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19323 = x__13269__auto__;
return goog.typeOf(G__19323);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19325 = x__13269__auto__;
return goog.typeOf(G__19325);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19327 = x__13269__auto__;
return goog.typeOf(G__19327);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19329 = x__13269__auto__;
return goog.typeOf(G__19329);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19331 = x__13269__auto__;
return goog.typeOf(G__19331);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19333 = x__13269__auto__;
return goog.typeOf(G__19333);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19335 = x__13269__auto__;
return goog.typeOf(G__19335);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._invoke[(function (){var G__19337 = x__13269__auto__;
return goog.typeOf(G__19337);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._invoke["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj19339 = {};
return obj19339;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12613__auto__ = value;
if(and__12613__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12613__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13269__auto__ = (((value == null))?null:value);
return (function (){var or__12625__auto__ = (cljs.core._clone[(function (){var G__19343 = x__13269__auto__;
return goog.typeOf(G__19343);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._clone["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj19345 = {};
return obj19345;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._count[(function (){var G__19349 = x__13269__auto__;
return goog.typeOf(G__19349);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._count["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj19351 = {};
return obj19351;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._empty[(function (){var G__19355 = x__13269__auto__;
return goog.typeOf(G__19355);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._empty["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj19357 = {};
return obj19357;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._conj[(function (){var G__19361 = x__13269__auto__;
return goog.typeOf(G__19361);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._conj["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj19363 = {};
return obj19363;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._nth[(function (){var G__19369 = x__13269__auto__;
return goog.typeOf(G__19369);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._nth["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._nth[(function (){var G__19371 = x__13269__auto__;
return goog.typeOf(G__19371);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._nth["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj19373 = {};
return obj19373;
})();


cljs.core.ISeq = (function (){var obj19375 = {};
return obj19375;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._first[(function (){var G__19379 = x__13269__auto__;
return goog.typeOf(G__19379);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._first["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._rest[(function (){var G__19383 = x__13269__auto__;
return goog.typeOf(G__19383);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._rest["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj19385 = {};
return obj19385;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._next[(function (){var G__19389 = x__13269__auto__;
return goog.typeOf(G__19389);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._next["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj19391 = {};
return obj19391;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._lookup[(function (){var G__19397 = x__13269__auto__;
return goog.typeOf(G__19397);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._lookup["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._lookup[(function (){var G__19399 = x__13269__auto__;
return goog.typeOf(G__19399);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._lookup["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj19401 = {};
return obj19401;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__19405 = x__13269__auto__;
return goog.typeOf(G__19405);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._assoc[(function (){var G__19409 = x__13269__auto__;
return goog.typeOf(G__19409);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._assoc["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj19411 = {};
return obj19411;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._dissoc[(function (){var G__19415 = x__13269__auto__;
return goog.typeOf(G__19415);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj19417 = {};
return obj19417;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._key[(function (){var G__19421 = x__13269__auto__;
return goog.typeOf(G__19421);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._key["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._val[(function (){var G__19425 = x__13269__auto__;
return goog.typeOf(G__19425);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._val["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj19427 = {};
return obj19427;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._disjoin[(function (){var G__19431 = x__13269__auto__;
return goog.typeOf(G__19431);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj19433 = {};
return obj19433;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._peek[(function (){var G__19437 = x__13269__auto__;
return goog.typeOf(G__19437);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._peek["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._pop[(function (){var G__19441 = x__13269__auto__;
return goog.typeOf(G__19441);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._pop["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj19443 = {};
return obj19443;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._assoc_n[(function (){var G__19447 = x__13269__auto__;
return goog.typeOf(G__19447);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj19449 = {};
return obj19449;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._deref[(function (){var G__19453 = x__13269__auto__;
return goog.typeOf(G__19453);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._deref["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj19455 = {};
return obj19455;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._deref_with_timeout[(function (){var G__19459 = x__13269__auto__;
return goog.typeOf(G__19459);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj19461 = {};
return obj19461;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._meta[(function (){var G__19465 = x__13269__auto__;
return goog.typeOf(G__19465);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._meta["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj19467 = {};
return obj19467;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._with_meta[(function (){var G__19471 = x__13269__auto__;
return goog.typeOf(G__19471);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj19473 = {};
return obj19473;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._reduce[(function (){var G__19479 = x__13269__auto__;
return goog.typeOf(G__19479);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._reduce["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._reduce[(function (){var G__19481 = x__13269__auto__;
return goog.typeOf(G__19481);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._reduce["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj19483 = {};
return obj19483;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._kv_reduce[(function (){var G__19487 = x__13269__auto__;
return goog.typeOf(G__19487);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj19489 = {};
return obj19489;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._equiv[(function (){var G__19493 = x__13269__auto__;
return goog.typeOf(G__19493);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._equiv["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj19495 = {};
return obj19495;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._hash[(function (){var G__19499 = x__13269__auto__;
return goog.typeOf(G__19499);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._hash["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj19501 = {};
return obj19501;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._seq[(function (){var G__19505 = x__13269__auto__;
return goog.typeOf(G__19505);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._seq["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj19507 = {};
return obj19507;
})();


cljs.core.IList = (function (){var obj19509 = {};
return obj19509;
})();


cljs.core.IRecord = (function (){var obj19511 = {};
return obj19511;
})();


cljs.core.IReversible = (function (){var obj19513 = {};
return obj19513;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._rseq[(function (){var G__19517 = x__13269__auto__;
return goog.typeOf(G__19517);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._rseq["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj19519 = {};
return obj19519;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._sorted_seq[(function (){var G__19523 = x__13269__auto__;
return goog.typeOf(G__19523);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._sorted_seq_from[(function (){var G__19527 = x__13269__auto__;
return goog.typeOf(G__19527);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._entry_key[(function (){var G__19531 = x__13269__auto__;
return goog.typeOf(G__19531);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._comparator[(function (){var G__19535 = x__13269__auto__;
return goog.typeOf(G__19535);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._comparator["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj19537 = {};
return obj19537;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12613__auto__ = writer;
if(and__12613__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12613__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13269__auto__ = (((writer == null))?null:writer);
return (function (){var or__12625__auto__ = (cljs.core._write[(function (){var G__19541 = x__13269__auto__;
return goog.typeOf(G__19541);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._write["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12613__auto__ = writer;
if(and__12613__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12613__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13269__auto__ = (((writer == null))?null:writer);
return (function (){var or__12625__auto__ = (cljs.core._flush[(function (){var G__19545 = x__13269__auto__;
return goog.typeOf(G__19545);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._flush["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj19547 = {};
return obj19547;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._pr_writer[(function (){var G__19551 = x__13269__auto__;
return goog.typeOf(G__19551);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj19553 = {};
return obj19553;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12613__auto__ = d;
if(and__12613__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12613__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13269__auto__ = (((d == null))?null:d);
return (function (){var or__12625__auto__ = (cljs.core._realized_QMARK_[(function (){var G__19557 = x__13269__auto__;
return goog.typeOf(G__19557);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj19559 = {};
return obj19559;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._notify_watches[(function (){var G__19563 = x__13269__auto__;
return goog.typeOf(G__19563);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._add_watch[(function (){var G__19567 = x__13269__auto__;
return goog.typeOf(G__19567);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12613__auto__ = this$;
if(and__12613__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12613__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13269__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12625__auto__ = (cljs.core._remove_watch[(function (){var G__19571 = x__13269__auto__;
return goog.typeOf(G__19571);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj19573 = {};
return obj19573;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._as_transient[(function (){var G__19577 = x__13269__auto__;
return goog.typeOf(G__19577);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj19579 = {};
return obj19579;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._conj_BANG_[(function (){var G__19583 = x__13269__auto__;
return goog.typeOf(G__19583);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._persistent_BANG_[(function (){var G__19587 = x__13269__auto__;
return goog.typeOf(G__19587);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj19589 = {};
return obj19589;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._assoc_BANG_[(function (){var G__19593 = x__13269__auto__;
return goog.typeOf(G__19593);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj19595 = {};
return obj19595;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__19599 = x__13269__auto__;
return goog.typeOf(G__19599);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj19601 = {};
return obj19601;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__19605 = x__13269__auto__;
return goog.typeOf(G__19605);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._pop_BANG_[(function (){var G__19609 = x__13269__auto__;
return goog.typeOf(G__19609);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj19611 = {};
return obj19611;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12613__auto__ = tcoll;
if(and__12613__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13269__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12625__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__19615 = x__13269__auto__;
return goog.typeOf(G__19615);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj19617 = {};
return obj19617;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12613__auto__ = x;
if(and__12613__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12613__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13269__auto__ = (((x == null))?null:x);
return (function (){var or__12625__auto__ = (cljs.core._compare[(function (){var G__19621 = x__13269__auto__;
return goog.typeOf(G__19621);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._compare["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj19623 = {};
return obj19623;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._drop_first[(function (){var G__19627 = x__13269__auto__;
return goog.typeOf(G__19627);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj19629 = {};
return obj19629;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._chunked_first[(function (){var G__19633 = x__13269__auto__;
return goog.typeOf(G__19633);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._chunked_rest[(function (){var G__19637 = x__13269__auto__;
return goog.typeOf(G__19637);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj19639 = {};
return obj19639;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._chunked_next[(function (){var G__19643 = x__13269__auto__;
return goog.typeOf(G__19643);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj19645 = {};
return obj19645;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12613__auto__ = x;
if(and__12613__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12613__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13269__auto__ = (((x == null))?null:x);
return (function (){var or__12625__auto__ = (cljs.core._name[(function (){var G__19649 = x__13269__auto__;
return goog.typeOf(G__19649);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._name["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12613__auto__ = x;
if(and__12613__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12613__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13269__auto__ = (((x == null))?null:x);
return (function (){var or__12625__auto__ = (cljs.core._namespace[(function (){var G__19653 = x__13269__auto__;
return goog.typeOf(G__19653);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._namespace["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj19655 = {};
return obj19655;
})();


cljs.core.IReset = (function (){var obj19657 = {};
return obj19657;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._reset_BANG_[(function (){var G__19661 = x__13269__auto__;
return goog.typeOf(G__19661);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj19663 = {};
return obj19663;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._swap_BANG_[(function (){var G__19673 = x__13269__auto__;
return goog.typeOf(G__19673);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._swap_BANG_[(function (){var G__19675 = x__13269__auto__;
return goog.typeOf(G__19675);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._swap_BANG_[(function (){var G__19677 = x__13269__auto__;
return goog.typeOf(G__19677);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._swap_BANG_[(function (){var G__19679 = x__13269__auto__;
return goog.typeOf(G__19679);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj19681 = {};
return obj19681;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12613__auto__ = o;
if(and__12613__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12613__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13269__auto__ = (((o == null))?null:o);
return (function (){var or__12625__auto__ = (cljs.core._vreset_BANG_[(function (){var G__19685 = x__13269__auto__;
return goog.typeOf(G__19685);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj19687 = {};
return obj19687;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12613__auto__ = coll;
if(and__12613__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12613__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13269__auto__ = (((coll == null))?null:coll);
return (function (){var or__12625__auto__ = (cljs.core._iterator[(function (){var G__19691 = x__13269__auto__;
return goog.typeOf(G__19691);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._iterator["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__19694 = (4294967295);
var G__19695 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__19694,G__19695) : Math.imul.call(null,G__19694,G__19695));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__19698 = a;
var G__19699 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__19698,G__19699) : Math.imul.call(null,G__19698,G__19699));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__19700 = (i + (2));
var G__19701 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__19700;
h1 = G__19701;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj19703 = {};
return obj19703;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__19704 = (i + (1));
var G__19705 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__19704;
hash = G__19705;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj19709 = {};
return obj19709;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__19712 = o;
if(G__19712){
var bit__13299__auto__ = (G__19712.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13299__auto__) || (G__19712.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__19713 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19713) : Math.floor.call(null,G__19713));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12613__auto__ = cljs.core.not(a.ns);
if(and__12613__auto__){
return b.ns;
} else {
return and__12613__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19720 = a.ns;
var G__19721 = b.ns;
return goog.array.defaultCompare(G__19720,G__19721);
})();
if(((0) === nsc)){
var G__19722 = a.name;
var G__19723 = b.name;
return goog.array.defaultCompare(G__19722,G__19723);
} else {
return nsc;
}
}
} else {
var G__19724 = a.name;
var G__19725 = b.name;
return goog.array.defaultCompare(G__19724,G__19725);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13046__auto__ = self__._hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__19727 = null;
var G__19727__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__19727__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__19727 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19727__2.call(this,self__,coll);
case 3:
return G__19727__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19727.cljs$core$IFn$_invoke$arity$2 = G__19727__2;
G__19727.cljs$core$IFn$_invoke$arity$3 = G__19727__3;
return G__19727;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args19726){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19726)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__19775 = null;
var G__19775__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__19775__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__19775__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__19775__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__19775__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__19775__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__19775__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__19775__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__19775__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__19775__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__19775__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__19775__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__19775__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__19775__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__19775__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__19775__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__19775__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__19775__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__19775__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__19775__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__19775__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__19775__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19731 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__19732 = a;
var G__19733 = b;
var G__19734 = c;
var G__19735 = d;
var G__19736 = e;
var G__19737 = f;
var G__19738 = g;
var G__19739 = h;
var G__19740 = i;
var G__19741 = j;
var G__19742 = k;
var G__19743 = l;
var G__19744 = m;
var G__19745 = n;
var G__19746 = o;
var G__19747 = p;
var G__19748 = q;
var G__19749 = r;
var G__19750 = s;
var G__19751 = t;
var G__19752 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19731,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752) : cljs.core.apply.call(null,G__19731,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752));
});
G__19775 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19775__1.call(this,self__);
case 2:
return G__19775__2.call(this,self__,a);
case 3:
return G__19775__3.call(this,self__,a,b);
case 4:
return G__19775__4.call(this,self__,a,b,c);
case 5:
return G__19775__5.call(this,self__,a,b,c,d);
case 6:
return G__19775__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19775__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19775__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19775__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19775__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19775__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19775__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19775__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19775__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19775__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19775__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19775__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19775__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19775__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19775__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19775__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19775__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19775.cljs$core$IFn$_invoke$arity$1 = G__19775__1;
G__19775.cljs$core$IFn$_invoke$arity$2 = G__19775__2;
G__19775.cljs$core$IFn$_invoke$arity$3 = G__19775__3;
G__19775.cljs$core$IFn$_invoke$arity$4 = G__19775__4;
G__19775.cljs$core$IFn$_invoke$arity$5 = G__19775__5;
G__19775.cljs$core$IFn$_invoke$arity$6 = G__19775__6;
G__19775.cljs$core$IFn$_invoke$arity$7 = G__19775__7;
G__19775.cljs$core$IFn$_invoke$arity$8 = G__19775__8;
G__19775.cljs$core$IFn$_invoke$arity$9 = G__19775__9;
G__19775.cljs$core$IFn$_invoke$arity$10 = G__19775__10;
G__19775.cljs$core$IFn$_invoke$arity$11 = G__19775__11;
G__19775.cljs$core$IFn$_invoke$arity$12 = G__19775__12;
G__19775.cljs$core$IFn$_invoke$arity$13 = G__19775__13;
G__19775.cljs$core$IFn$_invoke$arity$14 = G__19775__14;
G__19775.cljs$core$IFn$_invoke$arity$15 = G__19775__15;
G__19775.cljs$core$IFn$_invoke$arity$16 = G__19775__16;
G__19775.cljs$core$IFn$_invoke$arity$17 = G__19775__17;
G__19775.cljs$core$IFn$_invoke$arity$18 = G__19775__18;
G__19775.cljs$core$IFn$_invoke$arity$19 = G__19775__19;
G__19775.cljs$core$IFn$_invoke$arity$20 = G__19775__20;
G__19775.cljs$core$IFn$_invoke$arity$21 = G__19775__21;
G__19775.cljs$core$IFn$_invoke$arity$22 = G__19775__22;
return G__19775;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args19730){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19730)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__19753 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__19754 = a;
var G__19755 = b;
var G__19756 = c;
var G__19757 = d;
var G__19758 = e;
var G__19759 = f;
var G__19760 = g;
var G__19761 = h;
var G__19762 = i;
var G__19763 = j;
var G__19764 = k;
var G__19765 = l;
var G__19766 = m;
var G__19767 = n;
var G__19768 = o;
var G__19769 = p;
var G__19770 = q;
var G__19771 = r;
var G__19772 = s;
var G__19773 = t;
var G__19774 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19753,G__19754,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774) : cljs.core.apply.call(null,G__19753,G__19754,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__19777 = x;
if(G__19777){
var bit__13306__auto__ = null;
if(cljs.core.truth_((function (){var or__12625__auto__ = bit__13306__auto__;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return G__19777.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__19777.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19777);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19777);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__19779 = value;
if(G__19779){
var bit__13306__auto__ = (G__19779.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__13306__auto__) || (G__19779.cljs$core$ICloneable$)){
return true;
} else {
if((!G__19779.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19779);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19779);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19781 = coll;
if(G__19781){
var bit__13299__auto__ = (G__19781.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13299__auto__) || (G__19781.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19783 = coll;
if(G__19783){
var bit__13299__auto__ = (G__19783.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13299__auto__) || (G__19783.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__19785 = coll;
if(G__19785){
var bit__13299__auto__ = (G__19785.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13299__auto__) || (G__19785.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19787 = coll;
if(G__19787){
var bit__13299__auto__ = (G__19787.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13299__auto__) || (G__19787.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__19792__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19793 = y;
var G__19794 = cljs.core.first(more);
var G__19795 = cljs.core.next(more);
x = G__19793;
y = G__19794;
more = G__19795;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19792 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19796__i = 0, G__19796__a = new Array(arguments.length -  2);
while (G__19796__i < G__19796__a.length) {G__19796__a[G__19796__i] = arguments[G__19796__i + 2]; ++G__19796__i;}
  more = new cljs.core.IndexedSeq(G__19796__a,0);
} 
return G__19792__delegate.call(this,x,y,more);};
G__19792.cljs$lang$maxFixedArity = 2;
G__19792.cljs$lang$applyTo = (function (arglist__19797){
var x = cljs.core.first(arglist__19797);
arglist__19797 = cljs.core.next(arglist__19797);
var y = cljs.core.first(arglist__19797);
var more = cljs.core.rest(arglist__19797);
return G__19792__delegate(x,y,more);
});
G__19792.cljs$core$IFn$_invoke$arity$variadic = G__19792__delegate;
return G__19792;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__19798 = null;
if (arguments.length > 2) {
var G__19799__i = 0, G__19799__a = new Array(arguments.length -  2);
while (G__19799__i < G__19799__a.length) {G__19799__a[G__19799__i] = arguments[G__19799__i + 2]; ++G__19799__i;}
G__19798 = new cljs.core.IndexedSeq(G__19799__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__19800 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__19800) : cljs.core.es6_iterator_seq.call(null,G__19800));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19801 = (n + (1));
var G__19802 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19803 = cljs.core.next(coll__$1);
n = G__19801;
hash_code = G__19802;
coll__$1 = G__19803;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19804 = (n + (1));
var G__19805 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19806 = cljs.core.next(coll__$1);
n = G__19804;
hash_code = G__19805;
coll__$1 = G__19806;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__19807 = o;
return goog.getUid(G__19807);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__19809 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19809) : cljs.core.deref.call(null,G__19809));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19816 = val;
var G__19817 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19816,G__19817) : f.call(null,G__19816,G__19817));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19822 = nval;
var G__19823 = (n + (1));
val = G__19822;
n = G__19823;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19818 = val__$1;
var G__19819 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19818,G__19819) : f.call(null,G__19818,G__19819));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19824 = nval;
var G__19825 = (n + (1));
val__$1 = G__19824;
n = G__19825;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19820 = val__$1;
var G__19821 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19820,G__19821) : f.call(null,G__19820,G__19821));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19826 = nval;
var G__19827 = (n + (1));
val__$1 = G__19826;
n = G__19827;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19834 = val;
var G__19835 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19834,G__19835) : f.call(null,G__19834,G__19835));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19840 = nval;
var G__19841 = (n + (1));
val = G__19840;
n = G__19841;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19836 = val__$1;
var G__19837 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19836,G__19837) : f.call(null,G__19836,G__19837));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19842 = nval;
var G__19843 = (n + (1));
val__$1 = G__19842;
n = G__19843;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19838 = val__$1;
var G__19839 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19838,G__19839) : f.call(null,G__19838,G__19839));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19844 = nval;
var G__19845 = (n + (1));
val__$1 = G__19844;
n = G__19845;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__19847 = x;
if(G__19847){
var bit__13306__auto__ = (G__19847.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13306__auto__) || (G__19847.cljs$core$ICounted$)){
return true;
} else {
if((!G__19847.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19847);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19847);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__19849 = x;
if(G__19849){
var bit__13306__auto__ = (G__19849.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13306__auto__) || (G__19849.cljs$core$IIndexed$)){
return true;
} else {
if((!G__19849.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19849);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19850 = coll__$1;
var G__19851 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19850,G__19851) : cljs.core.equiv_sequential.call(null,G__19850,G__19851));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19852 = o;
var G__19853 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19852,G__19853) : cljs.core.cons.call(null,G__19852,G__19853));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19856 = coll__$1;
var G__19857 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19856,G__19857) : cljs.core.equiv_sequential.call(null,G__19856,G__19857));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__19858 = cljs.core.List.EMPTY;
var G__19859 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__19858,G__19859) : cljs.core.with_meta.call(null,G__19858,G__19859));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__19860 = f;
var G__19861 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__19860,G__19861) : cljs.core.seq_reduce.call(null,G__19860,G__19861));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__19862 = f;
var G__19863 = start;
var G__19864 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__19862,G__19863,G__19864) : cljs.core.seq_reduce.call(null,G__19862,G__19863,G__19864));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19865 = o;
var G__19866 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19865,G__19866) : cljs.core.cons.call(null,G__19865,G__19866));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__19867 = sn;
s = G__19867;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__19872__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__19873 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__19874 = cljs.core.first(xs);
var G__19875 = cljs.core.next(xs);
coll = G__19873;
x = G__19874;
xs = G__19875;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__19872 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__19876__i = 0, G__19876__a = new Array(arguments.length -  2);
while (G__19876__i < G__19876__a.length) {G__19876__a[G__19876__i] = arguments[G__19876__i + 2]; ++G__19876__i;}
  xs = new cljs.core.IndexedSeq(G__19876__a,0);
} 
return G__19872__delegate.call(this,coll,x,xs);};
G__19872.cljs$lang$maxFixedArity = 2;
G__19872.cljs$lang$applyTo = (function (arglist__19877){
var coll = cljs.core.first(arglist__19877);
arglist__19877 = cljs.core.next(arglist__19877);
var x = cljs.core.first(arglist__19877);
var xs = cljs.core.rest(arglist__19877);
return G__19872__delegate(coll,x,xs);
});
G__19872.cljs$core$IFn$_invoke$arity$variadic = G__19872__delegate;
return G__19872;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__19878 = null;
if (arguments.length > 2) {
var G__19879__i = 0, G__19879__a = new Array(arguments.length -  2);
while (G__19879__i < G__19879__a.length) {G__19879__a[G__19879__i] = arguments[G__19879__i + 2]; ++G__19879__i;}
G__19878 = new cljs.core.IndexedSeq(G__19879__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__19878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__19880 = cljs.core.next(s);
var G__19881 = (acc + (1));
s = G__19880;
acc = G__19881;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__19883 = coll;
if(G__19883){
var bit__13299__auto__ = (G__19883.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13299__auto__) || (G__19883.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__19884 = cljs.core.next(coll);
var G__19885 = (n - (1));
coll = G__19884;
n = G__19885;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__19886 = cljs.core.next(coll);
var G__19887 = (n - (1));
var G__19888 = not_found;
coll = G__19886;
n = G__19887;
not_found = G__19888;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__19893 = coll;
if(G__19893){
var bit__13299__auto__ = (G__19893.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13299__auto__) || (G__19893.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19894 = coll;
if(G__19894){
var bit__13306__auto__ = (G__19894.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13306__auto__) || (G__19894.cljs$core$ISeq$)){
return true;
} else {
if((!G__19894.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19894);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19894);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__19895 = coll;
if(G__19895){
var bit__13299__auto__ = (G__19895.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13299__auto__) || (G__19895.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19896 = coll;
if(G__19896){
var bit__13306__auto__ = (G__19896.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13306__auto__) || (G__19896.cljs$core$ISeq$)){
return true;
} else {
if((!G__19896.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19896);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19896);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__19897 = (n__$1 - (1));
var G__19898 = cljs.core.rest(xs);
n__$1 = G__19897;
xs = G__19898;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__19901 = o;
if(G__19901){
var bit__13299__auto__ = (G__19901.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13299__auto__) || (G__19901.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__19902 = o;
if(G__19902){
var bit__13299__auto__ = (G__19902.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13299__auto__) || (G__19902.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__19906__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__19907 = ret;
var G__19908 = cljs.core.first(kvs);
var G__19909 = cljs.core.second(kvs);
var G__19910 = cljs.core.nnext(kvs);
coll = G__19907;
k = G__19908;
v = G__19909;
kvs = G__19910;
continue;
} else {
return ret;
}
break;
}
};
var G__19906 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19911__i = 0, G__19911__a = new Array(arguments.length -  3);
while (G__19911__i < G__19911__a.length) {G__19911__a[G__19911__i] = arguments[G__19911__i + 3]; ++G__19911__i;}
  kvs = new cljs.core.IndexedSeq(G__19911__a,0);
} 
return G__19906__delegate.call(this,coll,k,v,kvs);};
G__19906.cljs$lang$maxFixedArity = 3;
G__19906.cljs$lang$applyTo = (function (arglist__19912){
var coll = cljs.core.first(arglist__19912);
arglist__19912 = cljs.core.next(arglist__19912);
var k = cljs.core.first(arglist__19912);
arglist__19912 = cljs.core.next(arglist__19912);
var v = cljs.core.first(arglist__19912);
var kvs = cljs.core.rest(arglist__19912);
return G__19906__delegate(coll,k,v,kvs);
});
G__19906.cljs$core$IFn$_invoke$arity$variadic = G__19906__delegate;
return G__19906;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__19913 = null;
if (arguments.length > 3) {
var G__19914__i = 0, G__19914__a = new Array(arguments.length -  3);
while (G__19914__i < G__19914__a.length) {G__19914__a[G__19914__i] = arguments[G__19914__i + 3]; ++G__19914__i;}
G__19913 = new cljs.core.IndexedSeq(G__19914__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__19913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__19917__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19918 = ret;
var G__19919 = cljs.core.first(ks);
var G__19920 = cljs.core.next(ks);
coll = G__19918;
k = G__19919;
ks = G__19920;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19917 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19921__i = 0, G__19921__a = new Array(arguments.length -  2);
while (G__19921__i < G__19921__a.length) {G__19921__a[G__19921__i] = arguments[G__19921__i + 2]; ++G__19921__i;}
  ks = new cljs.core.IndexedSeq(G__19921__a,0);
} 
return G__19917__delegate.call(this,coll,k,ks);};
G__19917.cljs$lang$maxFixedArity = 2;
G__19917.cljs$lang$applyTo = (function (arglist__19922){
var coll = cljs.core.first(arglist__19922);
arglist__19922 = cljs.core.next(arglist__19922);
var k = cljs.core.first(arglist__19922);
var ks = cljs.core.rest(arglist__19922);
return G__19917__delegate(coll,k,ks);
});
G__19917.cljs$core$IFn$_invoke$arity$variadic = G__19917__delegate;
return G__19917;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__19923 = null;
if (arguments.length > 2) {
var G__19924__i = 0, G__19924__a = new Array(arguments.length -  2);
while (G__19924__i < G__19924__a.length) {G__19924__a[G__19924__i] = arguments[G__19924__i + 2]; ++G__19924__i;}
G__19923 = new cljs.core.IndexedSeq(G__19924__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12625__auto__ = (function (){var G__19929 = f;
return goog.isFunction(G__19929);
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var G__19930 = f;
if(G__19930){
var bit__13306__auto__ = null;
if(cljs.core.truth_((function (){var or__12625__auto____$1 = bit__13306__auto__;
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
return G__19930.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__19930.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19930);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19930);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__20396 = null;
var G__20396__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__20396__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19932 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19932) : self__.afn.call(null,G__19932));
});
var G__20396__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19933 = a;
var G__19934 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19933,G__19934) : self__.afn.call(null,G__19933,G__19934));
});
var G__20396__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19935 = a;
var G__19936 = b;
var G__19937 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19935,G__19936,G__19937) : self__.afn.call(null,G__19935,G__19936,G__19937));
});
var G__20396__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19938 = a;
var G__19939 = b;
var G__19940 = c;
var G__19941 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19938,G__19939,G__19940,G__19941) : self__.afn.call(null,G__19938,G__19939,G__19940,G__19941));
});
var G__20396__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19942 = a;
var G__19943 = b;
var G__19944 = c;
var G__19945 = d;
var G__19946 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19942,G__19943,G__19944,G__19945,G__19946) : self__.afn.call(null,G__19942,G__19943,G__19944,G__19945,G__19946));
});
var G__20396__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19947 = a;
var G__19948 = b;
var G__19949 = c;
var G__19950 = d;
var G__19951 = e;
var G__19952 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19947,G__19948,G__19949,G__19950,G__19951,G__19952) : self__.afn.call(null,G__19947,G__19948,G__19949,G__19950,G__19951,G__19952));
});
var G__20396__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19953 = a;
var G__19954 = b;
var G__19955 = c;
var G__19956 = d;
var G__19957 = e;
var G__19958 = f;
var G__19959 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19953,G__19954,G__19955,G__19956,G__19957,G__19958,G__19959) : self__.afn.call(null,G__19953,G__19954,G__19955,G__19956,G__19957,G__19958,G__19959));
});
var G__20396__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19960 = a;
var G__19961 = b;
var G__19962 = c;
var G__19963 = d;
var G__19964 = e;
var G__19965 = f;
var G__19966 = g;
var G__19967 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19960,G__19961,G__19962,G__19963,G__19964,G__19965,G__19966,G__19967) : self__.afn.call(null,G__19960,G__19961,G__19962,G__19963,G__19964,G__19965,G__19966,G__19967));
});
var G__20396__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19968 = a;
var G__19969 = b;
var G__19970 = c;
var G__19971 = d;
var G__19972 = e;
var G__19973 = f;
var G__19974 = g;
var G__19975 = h;
var G__19976 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19968,G__19969,G__19970,G__19971,G__19972,G__19973,G__19974,G__19975,G__19976) : self__.afn.call(null,G__19968,G__19969,G__19970,G__19971,G__19972,G__19973,G__19974,G__19975,G__19976));
});
var G__20396__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19977 = a;
var G__19978 = b;
var G__19979 = c;
var G__19980 = d;
var G__19981 = e;
var G__19982 = f;
var G__19983 = g;
var G__19984 = h;
var G__19985 = i;
var G__19986 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19977,G__19978,G__19979,G__19980,G__19981,G__19982,G__19983,G__19984,G__19985,G__19986) : self__.afn.call(null,G__19977,G__19978,G__19979,G__19980,G__19981,G__19982,G__19983,G__19984,G__19985,G__19986));
});
var G__20396__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19987 = a;
var G__19988 = b;
var G__19989 = c;
var G__19990 = d;
var G__19991 = e;
var G__19992 = f;
var G__19993 = g;
var G__19994 = h;
var G__19995 = i;
var G__19996 = j;
var G__19997 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19987,G__19988,G__19989,G__19990,G__19991,G__19992,G__19993,G__19994,G__19995,G__19996,G__19997) : self__.afn.call(null,G__19987,G__19988,G__19989,G__19990,G__19991,G__19992,G__19993,G__19994,G__19995,G__19996,G__19997));
});
var G__20396__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19998 = a;
var G__19999 = b;
var G__20000 = c;
var G__20001 = d;
var G__20002 = e;
var G__20003 = f;
var G__20004 = g;
var G__20005 = h;
var G__20006 = i;
var G__20007 = j;
var G__20008 = k;
var G__20009 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19998,G__19999,G__20000,G__20001,G__20002,G__20003,G__20004,G__20005,G__20006,G__20007,G__20008,G__20009) : self__.afn.call(null,G__19998,G__19999,G__20000,G__20001,G__20002,G__20003,G__20004,G__20005,G__20006,G__20007,G__20008,G__20009));
});
var G__20396__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20010 = a;
var G__20011 = b;
var G__20012 = c;
var G__20013 = d;
var G__20014 = e;
var G__20015 = f;
var G__20016 = g;
var G__20017 = h;
var G__20018 = i;
var G__20019 = j;
var G__20020 = k;
var G__20021 = l;
var G__20022 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20010,G__20011,G__20012,G__20013,G__20014,G__20015,G__20016,G__20017,G__20018,G__20019,G__20020,G__20021,G__20022) : self__.afn.call(null,G__20010,G__20011,G__20012,G__20013,G__20014,G__20015,G__20016,G__20017,G__20018,G__20019,G__20020,G__20021,G__20022));
});
var G__20396__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20023 = a;
var G__20024 = b;
var G__20025 = c;
var G__20026 = d;
var G__20027 = e;
var G__20028 = f;
var G__20029 = g;
var G__20030 = h;
var G__20031 = i;
var G__20032 = j;
var G__20033 = k;
var G__20034 = l;
var G__20035 = m;
var G__20036 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20023,G__20024,G__20025,G__20026,G__20027,G__20028,G__20029,G__20030,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036) : self__.afn.call(null,G__20023,G__20024,G__20025,G__20026,G__20027,G__20028,G__20029,G__20030,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036));
});
var G__20396__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20037 = a;
var G__20038 = b;
var G__20039 = c;
var G__20040 = d;
var G__20041 = e;
var G__20042 = f;
var G__20043 = g;
var G__20044 = h;
var G__20045 = i;
var G__20046 = j;
var G__20047 = k;
var G__20048 = l;
var G__20049 = m;
var G__20050 = n;
var G__20051 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20037,G__20038,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049,G__20050,G__20051) : self__.afn.call(null,G__20037,G__20038,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049,G__20050,G__20051));
});
var G__20396__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20052 = a;
var G__20053 = b;
var G__20054 = c;
var G__20055 = d;
var G__20056 = e;
var G__20057 = f;
var G__20058 = g;
var G__20059 = h;
var G__20060 = i;
var G__20061 = j;
var G__20062 = k;
var G__20063 = l;
var G__20064 = m;
var G__20065 = n;
var G__20066 = o;
var G__20067 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20052,G__20053,G__20054,G__20055,G__20056,G__20057,G__20058,G__20059,G__20060,G__20061,G__20062,G__20063,G__20064,G__20065,G__20066,G__20067) : self__.afn.call(null,G__20052,G__20053,G__20054,G__20055,G__20056,G__20057,G__20058,G__20059,G__20060,G__20061,G__20062,G__20063,G__20064,G__20065,G__20066,G__20067));
});
var G__20396__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20068 = a;
var G__20069 = b;
var G__20070 = c;
var G__20071 = d;
var G__20072 = e;
var G__20073 = f;
var G__20074 = g;
var G__20075 = h;
var G__20076 = i;
var G__20077 = j;
var G__20078 = k;
var G__20079 = l;
var G__20080 = m;
var G__20081 = n;
var G__20082 = o;
var G__20083 = p;
var G__20084 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20068,G__20069,G__20070,G__20071,G__20072,G__20073,G__20074,G__20075,G__20076,G__20077,G__20078,G__20079,G__20080,G__20081,G__20082,G__20083,G__20084) : self__.afn.call(null,G__20068,G__20069,G__20070,G__20071,G__20072,G__20073,G__20074,G__20075,G__20076,G__20077,G__20078,G__20079,G__20080,G__20081,G__20082,G__20083,G__20084));
});
var G__20396__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20085 = a;
var G__20086 = b;
var G__20087 = c;
var G__20088 = d;
var G__20089 = e;
var G__20090 = f;
var G__20091 = g;
var G__20092 = h;
var G__20093 = i;
var G__20094 = j;
var G__20095 = k;
var G__20096 = l;
var G__20097 = m;
var G__20098 = n;
var G__20099 = o;
var G__20100 = p;
var G__20101 = q;
var G__20102 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20085,G__20086,G__20087,G__20088,G__20089,G__20090,G__20091,G__20092,G__20093,G__20094,G__20095,G__20096,G__20097,G__20098,G__20099,G__20100,G__20101,G__20102) : self__.afn.call(null,G__20085,G__20086,G__20087,G__20088,G__20089,G__20090,G__20091,G__20092,G__20093,G__20094,G__20095,G__20096,G__20097,G__20098,G__20099,G__20100,G__20101,G__20102));
});
var G__20396__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20103 = a;
var G__20104 = b;
var G__20105 = c;
var G__20106 = d;
var G__20107 = e;
var G__20108 = f;
var G__20109 = g;
var G__20110 = h;
var G__20111 = i;
var G__20112 = j;
var G__20113 = k;
var G__20114 = l;
var G__20115 = m;
var G__20116 = n;
var G__20117 = o;
var G__20118 = p;
var G__20119 = q;
var G__20120 = r;
var G__20121 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20103,G__20104,G__20105,G__20106,G__20107,G__20108,G__20109,G__20110,G__20111,G__20112,G__20113,G__20114,G__20115,G__20116,G__20117,G__20118,G__20119,G__20120,G__20121) : self__.afn.call(null,G__20103,G__20104,G__20105,G__20106,G__20107,G__20108,G__20109,G__20110,G__20111,G__20112,G__20113,G__20114,G__20115,G__20116,G__20117,G__20118,G__20119,G__20120,G__20121));
});
var G__20396__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20122 = a;
var G__20123 = b;
var G__20124 = c;
var G__20125 = d;
var G__20126 = e;
var G__20127 = f;
var G__20128 = g;
var G__20129 = h;
var G__20130 = i;
var G__20131 = j;
var G__20132 = k;
var G__20133 = l;
var G__20134 = m;
var G__20135 = n;
var G__20136 = o;
var G__20137 = p;
var G__20138 = q;
var G__20139 = r;
var G__20140 = s;
var G__20141 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20122,G__20123,G__20124,G__20125,G__20126,G__20127,G__20128,G__20129,G__20130,G__20131,G__20132,G__20133,G__20134,G__20135,G__20136,G__20137,G__20138,G__20139,G__20140,G__20141) : self__.afn.call(null,G__20122,G__20123,G__20124,G__20125,G__20126,G__20127,G__20128,G__20129,G__20130,G__20131,G__20132,G__20133,G__20134,G__20135,G__20136,G__20137,G__20138,G__20139,G__20140,G__20141));
});
var G__20396__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20142 = self__.afn;
var G__20143 = a;
var G__20144 = b;
var G__20145 = c;
var G__20146 = d;
var G__20147 = e;
var G__20148 = f;
var G__20149 = g;
var G__20150 = h;
var G__20151 = i;
var G__20152 = j;
var G__20153 = k;
var G__20154 = l;
var G__20155 = m;
var G__20156 = n;
var G__20157 = o;
var G__20158 = p;
var G__20159 = q;
var G__20160 = r;
var G__20161 = s;
var G__20162 = t;
var G__20163 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20142,G__20143,G__20144,G__20145,G__20146,G__20147,G__20148,G__20149,G__20150,G__20151,G__20152,G__20153,G__20154,G__20155,G__20156,G__20157,G__20158,G__20159,G__20160,G__20161,G__20162,G__20163) : cljs.core.apply.call(null,G__20142,G__20143,G__20144,G__20145,G__20146,G__20147,G__20148,G__20149,G__20150,G__20151,G__20152,G__20153,G__20154,G__20155,G__20156,G__20157,G__20158,G__20159,G__20160,G__20161,G__20162,G__20163));
});
G__20396 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20396__1.call(this,self__);
case 2:
return G__20396__2.call(this,self__,a);
case 3:
return G__20396__3.call(this,self__,a,b);
case 4:
return G__20396__4.call(this,self__,a,b,c);
case 5:
return G__20396__5.call(this,self__,a,b,c,d);
case 6:
return G__20396__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20396__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20396__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20396__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20396__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20396__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20396__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20396__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20396__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20396__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20396__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20396__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20396__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20396__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20396__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20396__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20396__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20396.cljs$core$IFn$_invoke$arity$1 = G__20396__1;
G__20396.cljs$core$IFn$_invoke$arity$2 = G__20396__2;
G__20396.cljs$core$IFn$_invoke$arity$3 = G__20396__3;
G__20396.cljs$core$IFn$_invoke$arity$4 = G__20396__4;
G__20396.cljs$core$IFn$_invoke$arity$5 = G__20396__5;
G__20396.cljs$core$IFn$_invoke$arity$6 = G__20396__6;
G__20396.cljs$core$IFn$_invoke$arity$7 = G__20396__7;
G__20396.cljs$core$IFn$_invoke$arity$8 = G__20396__8;
G__20396.cljs$core$IFn$_invoke$arity$9 = G__20396__9;
G__20396.cljs$core$IFn$_invoke$arity$10 = G__20396__10;
G__20396.cljs$core$IFn$_invoke$arity$11 = G__20396__11;
G__20396.cljs$core$IFn$_invoke$arity$12 = G__20396__12;
G__20396.cljs$core$IFn$_invoke$arity$13 = G__20396__13;
G__20396.cljs$core$IFn$_invoke$arity$14 = G__20396__14;
G__20396.cljs$core$IFn$_invoke$arity$15 = G__20396__15;
G__20396.cljs$core$IFn$_invoke$arity$16 = G__20396__16;
G__20396.cljs$core$IFn$_invoke$arity$17 = G__20396__17;
G__20396.cljs$core$IFn$_invoke$arity$18 = G__20396__18;
G__20396.cljs$core$IFn$_invoke$arity$19 = G__20396__19;
G__20396.cljs$core$IFn$_invoke$arity$20 = G__20396__20;
G__20396.cljs$core$IFn$_invoke$arity$21 = G__20396__21;
G__20396.cljs$core$IFn$_invoke$arity$22 = G__20396__22;
return G__20396;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args19931){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19931)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__20164 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20164) : self__.afn.call(null,G__20164));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__20165 = a;
var G__20166 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20165,G__20166) : self__.afn.call(null,G__20165,G__20166));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__20167 = a;
var G__20168 = b;
var G__20169 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20167,G__20168,G__20169) : self__.afn.call(null,G__20167,G__20168,G__20169));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__20170 = a;
var G__20171 = b;
var G__20172 = c;
var G__20173 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20170,G__20171,G__20172,G__20173) : self__.afn.call(null,G__20170,G__20171,G__20172,G__20173));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__20174 = a;
var G__20175 = b;
var G__20176 = c;
var G__20177 = d;
var G__20178 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20174,G__20175,G__20176,G__20177,G__20178) : self__.afn.call(null,G__20174,G__20175,G__20176,G__20177,G__20178));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__20179 = a;
var G__20180 = b;
var G__20181 = c;
var G__20182 = d;
var G__20183 = e;
var G__20184 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20179,G__20180,G__20181,G__20182,G__20183,G__20184) : self__.afn.call(null,G__20179,G__20180,G__20181,G__20182,G__20183,G__20184));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__20185 = a;
var G__20186 = b;
var G__20187 = c;
var G__20188 = d;
var G__20189 = e;
var G__20190 = f;
var G__20191 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20185,G__20186,G__20187,G__20188,G__20189,G__20190,G__20191) : self__.afn.call(null,G__20185,G__20186,G__20187,G__20188,G__20189,G__20190,G__20191));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__20192 = a;
var G__20193 = b;
var G__20194 = c;
var G__20195 = d;
var G__20196 = e;
var G__20197 = f;
var G__20198 = g;
var G__20199 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20192,G__20193,G__20194,G__20195,G__20196,G__20197,G__20198,G__20199) : self__.afn.call(null,G__20192,G__20193,G__20194,G__20195,G__20196,G__20197,G__20198,G__20199));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__20200 = a;
var G__20201 = b;
var G__20202 = c;
var G__20203 = d;
var G__20204 = e;
var G__20205 = f;
var G__20206 = g;
var G__20207 = h;
var G__20208 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20200,G__20201,G__20202,G__20203,G__20204,G__20205,G__20206,G__20207,G__20208) : self__.afn.call(null,G__20200,G__20201,G__20202,G__20203,G__20204,G__20205,G__20206,G__20207,G__20208));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__20209 = a;
var G__20210 = b;
var G__20211 = c;
var G__20212 = d;
var G__20213 = e;
var G__20214 = f;
var G__20215 = g;
var G__20216 = h;
var G__20217 = i;
var G__20218 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20209,G__20210,G__20211,G__20212,G__20213,G__20214,G__20215,G__20216,G__20217,G__20218) : self__.afn.call(null,G__20209,G__20210,G__20211,G__20212,G__20213,G__20214,G__20215,G__20216,G__20217,G__20218));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__20219 = a;
var G__20220 = b;
var G__20221 = c;
var G__20222 = d;
var G__20223 = e;
var G__20224 = f;
var G__20225 = g;
var G__20226 = h;
var G__20227 = i;
var G__20228 = j;
var G__20229 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20219,G__20220,G__20221,G__20222,G__20223,G__20224,G__20225,G__20226,G__20227,G__20228,G__20229) : self__.afn.call(null,G__20219,G__20220,G__20221,G__20222,G__20223,G__20224,G__20225,G__20226,G__20227,G__20228,G__20229));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__20230 = a;
var G__20231 = b;
var G__20232 = c;
var G__20233 = d;
var G__20234 = e;
var G__20235 = f;
var G__20236 = g;
var G__20237 = h;
var G__20238 = i;
var G__20239 = j;
var G__20240 = k;
var G__20241 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20230,G__20231,G__20232,G__20233,G__20234,G__20235,G__20236,G__20237,G__20238,G__20239,G__20240,G__20241) : self__.afn.call(null,G__20230,G__20231,G__20232,G__20233,G__20234,G__20235,G__20236,G__20237,G__20238,G__20239,G__20240,G__20241));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__20242 = a;
var G__20243 = b;
var G__20244 = c;
var G__20245 = d;
var G__20246 = e;
var G__20247 = f;
var G__20248 = g;
var G__20249 = h;
var G__20250 = i;
var G__20251 = j;
var G__20252 = k;
var G__20253 = l;
var G__20254 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20242,G__20243,G__20244,G__20245,G__20246,G__20247,G__20248,G__20249,G__20250,G__20251,G__20252,G__20253,G__20254) : self__.afn.call(null,G__20242,G__20243,G__20244,G__20245,G__20246,G__20247,G__20248,G__20249,G__20250,G__20251,G__20252,G__20253,G__20254));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__20255 = a;
var G__20256 = b;
var G__20257 = c;
var G__20258 = d;
var G__20259 = e;
var G__20260 = f;
var G__20261 = g;
var G__20262 = h;
var G__20263 = i;
var G__20264 = j;
var G__20265 = k;
var G__20266 = l;
var G__20267 = m;
var G__20268 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20255,G__20256,G__20257,G__20258,G__20259,G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268) : self__.afn.call(null,G__20255,G__20256,G__20257,G__20258,G__20259,G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__20269 = a;
var G__20270 = b;
var G__20271 = c;
var G__20272 = d;
var G__20273 = e;
var G__20274 = f;
var G__20275 = g;
var G__20276 = h;
var G__20277 = i;
var G__20278 = j;
var G__20279 = k;
var G__20280 = l;
var G__20281 = m;
var G__20282 = n;
var G__20283 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20269,G__20270,G__20271,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281,G__20282,G__20283) : self__.afn.call(null,G__20269,G__20270,G__20271,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281,G__20282,G__20283));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__20284 = a;
var G__20285 = b;
var G__20286 = c;
var G__20287 = d;
var G__20288 = e;
var G__20289 = f;
var G__20290 = g;
var G__20291 = h;
var G__20292 = i;
var G__20293 = j;
var G__20294 = k;
var G__20295 = l;
var G__20296 = m;
var G__20297 = n;
var G__20298 = o;
var G__20299 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20284,G__20285,G__20286,G__20287,G__20288,G__20289,G__20290,G__20291,G__20292,G__20293,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299) : self__.afn.call(null,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289,G__20290,G__20291,G__20292,G__20293,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__20300 = a;
var G__20301 = b;
var G__20302 = c;
var G__20303 = d;
var G__20304 = e;
var G__20305 = f;
var G__20306 = g;
var G__20307 = h;
var G__20308 = i;
var G__20309 = j;
var G__20310 = k;
var G__20311 = l;
var G__20312 = m;
var G__20313 = n;
var G__20314 = o;
var G__20315 = p;
var G__20316 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20300,G__20301,G__20302,G__20303,G__20304,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316) : self__.afn.call(null,G__20300,G__20301,G__20302,G__20303,G__20304,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__20317 = a;
var G__20318 = b;
var G__20319 = c;
var G__20320 = d;
var G__20321 = e;
var G__20322 = f;
var G__20323 = g;
var G__20324 = h;
var G__20325 = i;
var G__20326 = j;
var G__20327 = k;
var G__20328 = l;
var G__20329 = m;
var G__20330 = n;
var G__20331 = o;
var G__20332 = p;
var G__20333 = q;
var G__20334 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20317,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331,G__20332,G__20333,G__20334) : self__.afn.call(null,G__20317,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331,G__20332,G__20333,G__20334));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__20335 = a;
var G__20336 = b;
var G__20337 = c;
var G__20338 = d;
var G__20339 = e;
var G__20340 = f;
var G__20341 = g;
var G__20342 = h;
var G__20343 = i;
var G__20344 = j;
var G__20345 = k;
var G__20346 = l;
var G__20347 = m;
var G__20348 = n;
var G__20349 = o;
var G__20350 = p;
var G__20351 = q;
var G__20352 = r;
var G__20353 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343,G__20344,G__20345,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353) : self__.afn.call(null,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343,G__20344,G__20345,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__20354 = a;
var G__20355 = b;
var G__20356 = c;
var G__20357 = d;
var G__20358 = e;
var G__20359 = f;
var G__20360 = g;
var G__20361 = h;
var G__20362 = i;
var G__20363 = j;
var G__20364 = k;
var G__20365 = l;
var G__20366 = m;
var G__20367 = n;
var G__20368 = o;
var G__20369 = p;
var G__20370 = q;
var G__20371 = r;
var G__20372 = s;
var G__20373 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20354,G__20355,G__20356,G__20357,G__20358,G__20359,G__20360,G__20361,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373) : self__.afn.call(null,G__20354,G__20355,G__20356,G__20357,G__20358,G__20359,G__20360,G__20361,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20374 = self__.afn;
var G__20375 = a;
var G__20376 = b;
var G__20377 = c;
var G__20378 = d;
var G__20379 = e;
var G__20380 = f;
var G__20381 = g;
var G__20382 = h;
var G__20383 = i;
var G__20384 = j;
var G__20385 = k;
var G__20386 = l;
var G__20387 = m;
var G__20388 = n;
var G__20389 = o;
var G__20390 = p;
var G__20391 = q;
var G__20392 = r;
var G__20393 = s;
var G__20394 = t;
var G__20395 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20374,G__20375,G__20376,G__20377,G__20378,G__20379,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391,G__20392,G__20393,G__20394,G__20395) : cljs.core.apply.call(null,G__20374,G__20375,G__20376,G__20377,G__20378,G__20379,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391,G__20392,G__20393,G__20394,G__20395));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__20400 = o;
if(G__20400){
var bit__13306__auto__ = (G__20400.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__13306__auto__) || (G__20400.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__20400.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20400);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20400);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12613__auto__ = !((o == null));
if(and__12613__auto__){
var G__20404 = o;
if(G__20404){
var bit__13306__auto__ = (G__20404.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13306__auto__) || (G__20404.cljs$core$IMeta$)){
return true;
} else {
if((!G__20404.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20404);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20404);
}
} else {
return and__12613__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__20407__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20408 = ret;
var G__20409 = cljs.core.first(ks);
var G__20410 = cljs.core.next(ks);
coll = G__20408;
k = G__20409;
ks = G__20410;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20407 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20411__i = 0, G__20411__a = new Array(arguments.length -  2);
while (G__20411__i < G__20411__a.length) {G__20411__a[G__20411__i] = arguments[G__20411__i + 2]; ++G__20411__i;}
  ks = new cljs.core.IndexedSeq(G__20411__a,0);
} 
return G__20407__delegate.call(this,coll,k,ks);};
G__20407.cljs$lang$maxFixedArity = 2;
G__20407.cljs$lang$applyTo = (function (arglist__20412){
var coll = cljs.core.first(arglist__20412);
arglist__20412 = cljs.core.next(arglist__20412);
var k = cljs.core.first(arglist__20412);
var ks = cljs.core.rest(arglist__20412);
return G__20407__delegate(coll,k,ks);
});
G__20407.cljs$core$IFn$_invoke$arity$variadic = G__20407__delegate;
return G__20407;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__20413 = null;
if (arguments.length > 2) {
var G__20414__i = 0, G__20414__a = new Array(arguments.length -  2);
while (G__20414__i < G__20414__a.length) {G__20414__a[G__20414__i] = arguments[G__20414__i + 2]; ++G__20414__i;}
G__20413 = new cljs.core.IndexedSeq(G__20414__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20416 = x;
if(G__20416){
var bit__13306__auto__ = (G__20416.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__13306__auto__) || (G__20416.cljs$core$ICollection$)){
return true;
} else {
if((!G__20416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20416);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20418 = x;
if(G__20418){
var bit__13306__auto__ = (G__20418.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__13306__auto__) || (G__20418.cljs$core$ISet$)){
return true;
} else {
if((!G__20418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20418);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__20420 = x;
if(G__20420){
var bit__13306__auto__ = (G__20420.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__13306__auto__) || (G__20420.cljs$core$IAssociative$)){
return true;
} else {
if((!G__20420.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20420);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20420);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__20422 = x;
if(G__20422){
var bit__13306__auto__ = (G__20422.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__13306__auto__) || (G__20422.cljs$core$ISequential$)){
return true;
} else {
if((!G__20422.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20422);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20422);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__20424 = x;
if(G__20424){
var bit__13306__auto__ = (G__20424.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__13306__auto__) || (G__20424.cljs$core$ISorted$)){
return true;
} else {
if((!G__20424.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20424);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20424);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__20426 = x;
if(G__20426){
var bit__13306__auto__ = (G__20426.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13306__auto__) || (G__20426.cljs$core$IReduce$)){
return true;
} else {
if((!G__20426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20426);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20428 = x;
if(G__20428){
var bit__13306__auto__ = (G__20428.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13306__auto__) || (G__20428.cljs$core$IMap$)){
return true;
} else {
if((!G__20428.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20428);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__20430 = x;
if(G__20430){
var bit__13306__auto__ = (G__20430.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__13306__auto__) || (G__20430.cljs$core$IVector$)){
return true;
} else {
if((!G__20430.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20430);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__20432 = x;
if(G__20432){
var bit__13299__auto__ = (G__20432.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13299__auto__) || (G__20432.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj20438 = {};
return obj20438;
});
var js_obj__1 = (function() { 
var G__20441__delegate = function (keyvals){
var G__20439 = goog.object.create;
var G__20440 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__20439,G__20440) : cljs.core.apply.call(null,G__20439,G__20440));
};
var G__20441 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__20442__i = 0, G__20442__a = new Array(arguments.length -  0);
while (G__20442__i < G__20442__a.length) {G__20442__a[G__20442__i] = arguments[G__20442__i + 0]; ++G__20442__i;}
  keyvals = new cljs.core.IndexedSeq(G__20442__a,0);
} 
return G__20441__delegate.call(this,keyvals);};
G__20441.cljs$lang$maxFixedArity = 0;
G__20441.cljs$lang$applyTo = (function (arglist__20443){
var keyvals = cljs.core.seq(arglist__20443);
return G__20441__delegate(keyvals);
});
G__20441.cljs$core$IFn$_invoke$arity$variadic = G__20441__delegate;
return G__20441;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__20444 = null;
if (arguments.length > 0) {
var G__20445__i = 0, G__20445__a = new Array(arguments.length -  0);
while (G__20445__i < G__20445__a.length) {G__20445__a[G__20445__i] = arguments[G__20445__i + 0]; ++G__20445__i;}
G__20444 = new cljs.core.IndexedSeq(G__20445__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__20444);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__20448_20450 = obj;
var G__20449_20451 = ((function (G__20448_20450,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__20448_20450,keys))
;
goog.object.forEach(G__20448_20450,G__20449_20451);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__20452 = (i__$1 + (1));
var G__20453 = (j__$1 + (1));
var G__20454 = (len__$1 - (1));
i__$1 = G__20452;
j__$1 = G__20453;
len__$1 = G__20454;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__20455 = (i__$1 - (1));
var G__20456 = (j__$1 - (1));
var G__20457 = (len__$1 - (1));
i__$1 = G__20455;
j__$1 = G__20456;
len__$1 = G__20457;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj20459 = {};
return obj20459;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__20461 = s;
if(G__20461){
var bit__13306__auto__ = (G__20461.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13306__auto__) || (G__20461.cljs$core$ISeq$)){
return true;
} else {
if((!G__20461.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20461);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20461);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__20463 = s;
if(G__20463){
var bit__13306__auto__ = (G__20463.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13306__auto__) || (G__20463.cljs$core$ISeqable$)){
return true;
} else {
if((!G__20463.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__20463);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__20463);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12625__auto__ = cljs.core.fn_QMARK_(f);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var G__20467 = f;
if(G__20467){
var bit__13306__auto__ = (G__20467.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__13306__auto__) || (G__20467.cljs$core$IFn$)){
return true;
} else {
if((!G__20467.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__20467);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__20467);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__20480 = n;
return isNaN(G__20480);
})())) && (!((n === Infinity))) && (((function (){var G__20481 = n;
return parseFloat(G__20481);
})() === (function (){var G__20482 = n;
var G__20483 = (10);
return parseInt(G__20482,G__20483);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__20484__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__20485 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__20486 = etc;
s = G__20485;
xs = G__20486;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__20484 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20487__i = 0, G__20487__a = new Array(arguments.length -  2);
while (G__20487__i < G__20487__a.length) {G__20487__a[G__20487__i] = arguments[G__20487__i + 2]; ++G__20487__i;}
  more = new cljs.core.IndexedSeq(G__20487__a,0);
} 
return G__20484__delegate.call(this,x,y,more);};
G__20484.cljs$lang$maxFixedArity = 2;
G__20484.cljs$lang$applyTo = (function (arglist__20488){
var x = cljs.core.first(arglist__20488);
arglist__20488 = cljs.core.next(arglist__20488);
var y = cljs.core.first(arglist__20488);
var more = cljs.core.rest(arglist__20488);
return G__20484__delegate(x,y,more);
});
G__20484.cljs$core$IFn$_invoke$arity$variadic = G__20484__delegate;
return G__20484;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__20489 = null;
if (arguments.length > 2) {
var G__20490__i = 0, G__20490__a = new Array(arguments.length -  2);
while (G__20490__i < G__20490__a.length) {G__20490__a[G__20490__i] = arguments[G__20490__i + 2]; ++G__20490__i;}
G__20489 = new cljs.core.IndexedSeq(G__20490__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__20494 = x;
if(G__20494){
var bit__13299__auto__ = (G__20494.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13299__auto__) || (G__20494.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__20495 = x;
var G__20496 = y;
return goog.array.defaultCompare(G__20495,G__20496);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__20501 = xs;
var G__20502 = ys;
var G__20503 = len;
var G__20504 = (n + (1));
xs = G__20501;
ys = G__20502;
len = G__20503;
n = G__20504;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__20509 = x;
var G__20510 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20509,G__20510) : f.call(null,G__20509,G__20510));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__20511 = y;
var G__20512 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20511,G__20512) : f.call(null,G__20511,G__20512));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__20518 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20518) : cljs.core.to_array.call(null,G__20518));
})();
var G__20519_20521 = a;
var G__20520_20522 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__20519_20521,G__20520_20522);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__20528 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20528) : keyfn.call(null,G__20528));
})(),(function (){var G__20529 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20529) : keyfn.call(null,G__20529));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__20535 = f;
var G__20536 = cljs.core.first(s);
var G__20537 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20535,G__20536,G__20537) : cljs.core.reduce.call(null,G__20535,G__20536,G__20537));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__20538 = val__$1;
var G__20539 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20538,G__20539) : f.call(null,G__20538,G__20539));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20540 = nval;
var G__20541 = cljs.core.next(coll__$1);
val__$1 = G__20540;
coll__$1 = G__20541;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__20545 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20545) : cljs.core.to_array.call(null,G__20545));
})();
var G__20546_20548 = a;
goog.array.shuffle(G__20546_20548);

var G__20547 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__20547) : cljs.core.vec.call(null,G__20547));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__20551 = coll;
if(G__20551){
var bit__13299__auto__ = (G__20551.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13299__auto__) || (G__20551.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__20552 = coll;
if(G__20552){
var bit__13299__auto__ = (G__20552.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13299__auto__) || (G__20552.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__20561 = null;
var G__20561__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__20561__1 = (function (x){
var G__20558 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__20558) : cf.call(null,G__20558));
});
var G__20561__2 = (function (x,y){
var G__20559 = x;
var G__20560 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20559,G__20560) : f.call(null,G__20559,G__20560));
});
G__20561 = function(x,y){
switch(arguments.length){
case 0:
return G__20561__0.call(this);
case 1:
return G__20561__1.call(this,x);
case 2:
return G__20561__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20561.cljs$core$IFn$_invoke$arity$0 = G__20561__0;
G__20561.cljs$core$IFn$_invoke$arity$1 = G__20561__1;
G__20561.cljs$core$IFn$_invoke$arity$2 = G__20561__2;
return G__20561;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__20568 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20568) : xform.call(null,G__20568));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__20569 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20569) : f__$1.call(null,G__20569));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__20570__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__20570 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20571__i = 0, G__20571__a = new Array(arguments.length -  2);
while (G__20571__i < G__20571__a.length) {G__20571__a[G__20571__i] = arguments[G__20571__i + 2]; ++G__20571__i;}
  more = new cljs.core.IndexedSeq(G__20571__a,0);
} 
return G__20570__delegate.call(this,x,y,more);};
G__20570.cljs$lang$maxFixedArity = 2;
G__20570.cljs$lang$applyTo = (function (arglist__20572){
var x = cljs.core.first(arglist__20572);
arglist__20572 = cljs.core.next(arglist__20572);
var y = cljs.core.first(arglist__20572);
var more = cljs.core.rest(arglist__20572);
return G__20570__delegate(x,y,more);
});
G__20570.cljs$core$IFn$_invoke$arity$variadic = G__20570__delegate;
return G__20570;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__20573 = null;
if (arguments.length > 2) {
var G__20574__i = 0, G__20574__a = new Array(arguments.length -  2);
while (G__20574__i < G__20574__a.length) {G__20574__a[G__20574__i] = arguments[G__20574__i + 2]; ++G__20574__i;}
G__20573 = new cljs.core.IndexedSeq(G__20574__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__20575__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__20575 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20576__i = 0, G__20576__a = new Array(arguments.length -  2);
while (G__20576__i < G__20576__a.length) {G__20576__a[G__20576__i] = arguments[G__20576__i + 2]; ++G__20576__i;}
  more = new cljs.core.IndexedSeq(G__20576__a,0);
} 
return G__20575__delegate.call(this,x,y,more);};
G__20575.cljs$lang$maxFixedArity = 2;
G__20575.cljs$lang$applyTo = (function (arglist__20577){
var x = cljs.core.first(arglist__20577);
arglist__20577 = cljs.core.next(arglist__20577);
var y = cljs.core.first(arglist__20577);
var more = cljs.core.rest(arglist__20577);
return G__20575__delegate(x,y,more);
});
G__20575.cljs$core$IFn$_invoke$arity$variadic = G__20575__delegate;
return G__20575;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__20578 = null;
if (arguments.length > 2) {
var G__20579__i = 0, G__20579__a = new Array(arguments.length -  2);
while (G__20579__i < G__20579__a.length) {G__20579__a[G__20579__i] = arguments[G__20579__i + 2]; ++G__20579__i;}
G__20578 = new cljs.core.IndexedSeq(G__20579__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20578);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__20580__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__20580 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20581__i = 0, G__20581__a = new Array(arguments.length -  2);
while (G__20581__i < G__20581__a.length) {G__20581__a[G__20581__i] = arguments[G__20581__i + 2]; ++G__20581__i;}
  more = new cljs.core.IndexedSeq(G__20581__a,0);
} 
return G__20580__delegate.call(this,x,y,more);};
G__20580.cljs$lang$maxFixedArity = 2;
G__20580.cljs$lang$applyTo = (function (arglist__20582){
var x = cljs.core.first(arglist__20582);
arglist__20582 = cljs.core.next(arglist__20582);
var y = cljs.core.first(arglist__20582);
var more = cljs.core.rest(arglist__20582);
return G__20580__delegate(x,y,more);
});
G__20580.cljs$core$IFn$_invoke$arity$variadic = G__20580__delegate;
return G__20580;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__20583 = null;
if (arguments.length > 2) {
var G__20584__i = 0, G__20584__a = new Array(arguments.length -  2);
while (G__20584__i < G__20584__a.length) {G__20584__a[G__20584__i] = arguments[G__20584__i + 2]; ++G__20584__i;}
G__20583 = new cljs.core.IndexedSeq(G__20584__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__20589__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20589 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20590__i = 0, G__20590__a = new Array(arguments.length -  2);
while (G__20590__i < G__20590__a.length) {G__20590__a[G__20590__i] = arguments[G__20590__i + 2]; ++G__20590__i;}
  more = new cljs.core.IndexedSeq(G__20590__a,0);
} 
return G__20589__delegate.call(this,x,y,more);};
G__20589.cljs$lang$maxFixedArity = 2;
G__20589.cljs$lang$applyTo = (function (arglist__20591){
var x = cljs.core.first(arglist__20591);
arglist__20591 = cljs.core.next(arglist__20591);
var y = cljs.core.first(arglist__20591);
var more = cljs.core.rest(arglist__20591);
return G__20589__delegate(x,y,more);
});
G__20589.cljs$core$IFn$_invoke$arity$variadic = G__20589__delegate;
return G__20589;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__20592 = null;
if (arguments.length > 2) {
var G__20593__i = 0, G__20593__a = new Array(arguments.length -  2);
while (G__20593__i < G__20593__a.length) {G__20593__a[G__20593__i] = arguments[G__20593__i + 2]; ++G__20593__i;}
G__20592 = new cljs.core.IndexedSeq(G__20593__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__20594__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__20595 = y;
var G__20596 = cljs.core.first(more);
var G__20597 = cljs.core.next(more);
x = G__20595;
y = G__20596;
more = G__20597;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20594 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20598__i = 0, G__20598__a = new Array(arguments.length -  2);
while (G__20598__i < G__20598__a.length) {G__20598__a[G__20598__i] = arguments[G__20598__i + 2]; ++G__20598__i;}
  more = new cljs.core.IndexedSeq(G__20598__a,0);
} 
return G__20594__delegate.call(this,x,y,more);};
G__20594.cljs$lang$maxFixedArity = 2;
G__20594.cljs$lang$applyTo = (function (arglist__20599){
var x = cljs.core.first(arglist__20599);
arglist__20599 = cljs.core.next(arglist__20599);
var y = cljs.core.first(arglist__20599);
var more = cljs.core.rest(arglist__20599);
return G__20594__delegate(x,y,more);
});
G__20594.cljs$core$IFn$_invoke$arity$variadic = G__20594__delegate;
return G__20594;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__20600 = null;
if (arguments.length > 2) {
var G__20601__i = 0, G__20601__a = new Array(arguments.length -  2);
while (G__20601__i < G__20601__a.length) {G__20601__a[G__20601__i] = arguments[G__20601__i + 2]; ++G__20601__i;}
G__20600 = new cljs.core.IndexedSeq(G__20601__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__20602__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__20603 = y;
var G__20604 = cljs.core.first(more);
var G__20605 = cljs.core.next(more);
x = G__20603;
y = G__20604;
more = G__20605;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20602 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20606__i = 0, G__20606__a = new Array(arguments.length -  2);
while (G__20606__i < G__20606__a.length) {G__20606__a[G__20606__i] = arguments[G__20606__i + 2]; ++G__20606__i;}
  more = new cljs.core.IndexedSeq(G__20606__a,0);
} 
return G__20602__delegate.call(this,x,y,more);};
G__20602.cljs$lang$maxFixedArity = 2;
G__20602.cljs$lang$applyTo = (function (arglist__20607){
var x = cljs.core.first(arglist__20607);
arglist__20607 = cljs.core.next(arglist__20607);
var y = cljs.core.first(arglist__20607);
var more = cljs.core.rest(arglist__20607);
return G__20602__delegate(x,y,more);
});
G__20602.cljs$core$IFn$_invoke$arity$variadic = G__20602__delegate;
return G__20602;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__20608 = null;
if (arguments.length > 2) {
var G__20609__i = 0, G__20609__a = new Array(arguments.length -  2);
while (G__20609__i < G__20609__a.length) {G__20609__a[G__20609__i] = arguments[G__20609__i + 2]; ++G__20609__i;}
G__20608 = new cljs.core.IndexedSeq(G__20609__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20608);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__20610__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__20611 = y;
var G__20612 = cljs.core.first(more);
var G__20613 = cljs.core.next(more);
x = G__20611;
y = G__20612;
more = G__20613;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20610 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20614__i = 0, G__20614__a = new Array(arguments.length -  2);
while (G__20614__i < G__20614__a.length) {G__20614__a[G__20614__i] = arguments[G__20614__i + 2]; ++G__20614__i;}
  more = new cljs.core.IndexedSeq(G__20614__a,0);
} 
return G__20610__delegate.call(this,x,y,more);};
G__20610.cljs$lang$maxFixedArity = 2;
G__20610.cljs$lang$applyTo = (function (arglist__20615){
var x = cljs.core.first(arglist__20615);
arglist__20615 = cljs.core.next(arglist__20615);
var y = cljs.core.first(arglist__20615);
var more = cljs.core.rest(arglist__20615);
return G__20610__delegate(x,y,more);
});
G__20610.cljs$core$IFn$_invoke$arity$variadic = G__20610__delegate;
return G__20610;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__20616 = null;
if (arguments.length > 2) {
var G__20617__i = 0, G__20617__a = new Array(arguments.length -  2);
while (G__20617__i < G__20617__a.length) {G__20617__a[G__20617__i] = arguments[G__20617__i + 2]; ++G__20617__i;}
G__20616 = new cljs.core.IndexedSeq(G__20617__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__20618__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__20619 = y;
var G__20620 = cljs.core.first(more);
var G__20621 = cljs.core.next(more);
x = G__20619;
y = G__20620;
more = G__20621;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20618 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20622__i = 0, G__20622__a = new Array(arguments.length -  2);
while (G__20622__i < G__20622__a.length) {G__20622__a[G__20622__i] = arguments[G__20622__i + 2]; ++G__20622__i;}
  more = new cljs.core.IndexedSeq(G__20622__a,0);
} 
return G__20618__delegate.call(this,x,y,more);};
G__20618.cljs$lang$maxFixedArity = 2;
G__20618.cljs$lang$applyTo = (function (arglist__20623){
var x = cljs.core.first(arglist__20623);
arglist__20623 = cljs.core.next(arglist__20623);
var y = cljs.core.first(arglist__20623);
var more = cljs.core.rest(arglist__20623);
return G__20618__delegate(x,y,more);
});
G__20618.cljs$core$IFn$_invoke$arity$variadic = G__20618__delegate;
return G__20618;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__20624 = null;
if (arguments.length > 2) {
var G__20625__i = 0, G__20625__a = new Array(arguments.length -  2);
while (G__20625__i < G__20625__a.length) {G__20625__a[G__20625__i] = arguments[G__20625__i + 2]; ++G__20625__i;}
G__20624 = new cljs.core.IndexedSeq(G__20625__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__12942__auto__ = x;
var y__12943__auto__ = y;
return ((x__12942__auto__ > y__12943__auto__) ? x__12942__auto__ : y__12943__auto__);
});
var max__3 = (function() { 
var G__20626__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__12942__auto__ = x;
var y__12943__auto__ = y;
return ((x__12942__auto__ > y__12943__auto__) ? x__12942__auto__ : y__12943__auto__);
})(),more);
};
var G__20626 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20627__i = 0, G__20627__a = new Array(arguments.length -  2);
while (G__20627__i < G__20627__a.length) {G__20627__a[G__20627__i] = arguments[G__20627__i + 2]; ++G__20627__i;}
  more = new cljs.core.IndexedSeq(G__20627__a,0);
} 
return G__20626__delegate.call(this,x,y,more);};
G__20626.cljs$lang$maxFixedArity = 2;
G__20626.cljs$lang$applyTo = (function (arglist__20628){
var x = cljs.core.first(arglist__20628);
arglist__20628 = cljs.core.next(arglist__20628);
var y = cljs.core.first(arglist__20628);
var more = cljs.core.rest(arglist__20628);
return G__20626__delegate(x,y,more);
});
G__20626.cljs$core$IFn$_invoke$arity$variadic = G__20626__delegate;
return G__20626;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__20629 = null;
if (arguments.length > 2) {
var G__20630__i = 0, G__20630__a = new Array(arguments.length -  2);
while (G__20630__i < G__20630__a.length) {G__20630__a[G__20630__i] = arguments[G__20630__i + 2]; ++G__20630__i;}
G__20629 = new cljs.core.IndexedSeq(G__20630__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__12949__auto__ = x;
var y__12950__auto__ = y;
return ((x__12949__auto__ < y__12950__auto__) ? x__12949__auto__ : y__12950__auto__);
});
var min__3 = (function() { 
var G__20631__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__12949__auto__ = x;
var y__12950__auto__ = y;
return ((x__12949__auto__ < y__12950__auto__) ? x__12949__auto__ : y__12950__auto__);
})(),more);
};
var G__20631 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20632__i = 0, G__20632__a = new Array(arguments.length -  2);
while (G__20632__i < G__20632__a.length) {G__20632__a[G__20632__i] = arguments[G__20632__i + 2]; ++G__20632__i;}
  more = new cljs.core.IndexedSeq(G__20632__a,0);
} 
return G__20631__delegate.call(this,x,y,more);};
G__20631.cljs$lang$maxFixedArity = 2;
G__20631.cljs$lang$applyTo = (function (arglist__20633){
var x = cljs.core.first(arglist__20633);
arglist__20633 = cljs.core.next(arglist__20633);
var y = cljs.core.first(arglist__20633);
var more = cljs.core.rest(arglist__20633);
return G__20631__delegate(x,y,more);
});
G__20631.cljs$core$IFn$_invoke$arity$variadic = G__20631__delegate;
return G__20631;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__20634 = null;
if (arguments.length > 2) {
var G__20635__i = 0, G__20635__a = new Array(arguments.length -  2);
while (G__20635__i < G__20635__a.length) {G__20635__a[G__20635__i] = arguments[G__20635__i + 2]; ++G__20635__i;}
G__20634 = new cljs.core.IndexedSeq(G__20635__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__20636__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__20636 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20637__i = 0, G__20637__a = new Array(arguments.length -  2);
while (G__20637__i < G__20637__a.length) {G__20637__a[G__20637__i] = arguments[G__20637__i + 2]; ++G__20637__i;}
  more = new cljs.core.IndexedSeq(G__20637__a,0);
} 
return G__20636__delegate.call(this,x,y,more);};
G__20636.cljs$lang$maxFixedArity = 2;
G__20636.cljs$lang$applyTo = (function (arglist__20638){
var x = cljs.core.first(arglist__20638);
arglist__20638 = cljs.core.next(arglist__20638);
var y = cljs.core.first(arglist__20638);
var more = cljs.core.rest(arglist__20638);
return G__20636__delegate(x,y,more);
});
G__20636.cljs$core$IFn$_invoke$arity$variadic = G__20636__delegate;
return G__20636;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__20639 = null;
if (arguments.length > 2) {
var G__20640__i = 0, G__20640__a = new Array(arguments.length -  2);
while (G__20640__i < G__20640__a.length) {G__20640__a[G__20640__i] = arguments[G__20640__i + 2]; ++G__20640__i;}
G__20639 = new cljs.core.IndexedSeq(G__20640__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__20641__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__20641 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20642__i = 0, G__20642__a = new Array(arguments.length -  2);
while (G__20642__i < G__20642__a.length) {G__20642__a[G__20642__i] = arguments[G__20642__i + 2]; ++G__20642__i;}
  more = new cljs.core.IndexedSeq(G__20642__a,0);
} 
return G__20641__delegate.call(this,x,y,more);};
G__20641.cljs$lang$maxFixedArity = 2;
G__20641.cljs$lang$applyTo = (function (arglist__20643){
var x = cljs.core.first(arglist__20643);
arglist__20643 = cljs.core.next(arglist__20643);
var y = cljs.core.first(arglist__20643);
var more = cljs.core.rest(arglist__20643);
return G__20641__delegate(x,y,more);
});
G__20641.cljs$core$IFn$_invoke$arity$variadic = G__20641__delegate;
return G__20641;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__20644 = null;
if (arguments.length > 2) {
var G__20645__i = 0, G__20645__a = new Array(arguments.length -  2);
while (G__20645__i < G__20645__a.length) {G__20645__a[G__20645__i] = arguments[G__20645__i + 2]; ++G__20645__i;}
G__20644 = new cljs.core.IndexedSeq(G__20645__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__20650__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20650 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20651__i = 0, G__20651__a = new Array(arguments.length -  2);
while (G__20651__i < G__20651__a.length) {G__20651__a[G__20651__i] = arguments[G__20651__i + 2]; ++G__20651__i;}
  more = new cljs.core.IndexedSeq(G__20651__a,0);
} 
return G__20650__delegate.call(this,x,y,more);};
G__20650.cljs$lang$maxFixedArity = 2;
G__20650.cljs$lang$applyTo = (function (arglist__20652){
var x = cljs.core.first(arglist__20652);
arglist__20652 = cljs.core.next(arglist__20652);
var y = cljs.core.first(arglist__20652);
var more = cljs.core.rest(arglist__20652);
return G__20650__delegate(x,y,more);
});
G__20650.cljs$core$IFn$_invoke$arity$variadic = G__20650__delegate;
return G__20650;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__20653 = null;
if (arguments.length > 2) {
var G__20654__i = 0, G__20654__a = new Array(arguments.length -  2);
while (G__20654__i < G__20654__a.length) {G__20654__a[G__20654__i] = arguments[G__20654__i + 2]; ++G__20654__i;}
G__20653 = new cljs.core.IndexedSeq(G__20654__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__20655__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__20655 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20656__i = 0, G__20656__a = new Array(arguments.length -  2);
while (G__20656__i < G__20656__a.length) {G__20656__a[G__20656__i] = arguments[G__20656__i + 2]; ++G__20656__i;}
  more = new cljs.core.IndexedSeq(G__20656__a,0);
} 
return G__20655__delegate.call(this,x,y,more);};
G__20655.cljs$lang$maxFixedArity = 2;
G__20655.cljs$lang$applyTo = (function (arglist__20657){
var x = cljs.core.first(arglist__20657);
arglist__20657 = cljs.core.next(arglist__20657);
var y = cljs.core.first(arglist__20657);
var more = cljs.core.rest(arglist__20657);
return G__20655__delegate(x,y,more);
});
G__20655.cljs$core$IFn$_invoke$arity$variadic = G__20655__delegate;
return G__20655;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__20658 = null;
if (arguments.length > 2) {
var G__20659__i = 0, G__20659__a = new Array(arguments.length -  2);
while (G__20659__i < G__20659__a.length) {G__20659__a[G__20659__i] = arguments[G__20659__i + 2]; ++G__20659__i;}
G__20658 = new cljs.core.IndexedSeq(G__20659__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__20660__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__20660 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20661__i = 0, G__20661__a = new Array(arguments.length -  2);
while (G__20661__i < G__20661__a.length) {G__20661__a[G__20661__i] = arguments[G__20661__i + 2]; ++G__20661__i;}
  more = new cljs.core.IndexedSeq(G__20661__a,0);
} 
return G__20660__delegate.call(this,x,y,more);};
G__20660.cljs$lang$maxFixedArity = 2;
G__20660.cljs$lang$applyTo = (function (arglist__20662){
var x = cljs.core.first(arglist__20662);
arglist__20662 = cljs.core.next(arglist__20662);
var y = cljs.core.first(arglist__20662);
var more = cljs.core.rest(arglist__20662);
return G__20660__delegate(x,y,more);
});
G__20660.cljs$core$IFn$_invoke$arity$variadic = G__20660__delegate;
return G__20660;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__20663 = null;
if (arguments.length > 2) {
var G__20664__i = 0, G__20664__a = new Array(arguments.length -  2);
while (G__20664__i < G__20664__a.length) {G__20664__a[G__20664__i] = arguments[G__20664__i + 2]; ++G__20664__i;}
G__20663 = new cljs.core.IndexedSeq(G__20664__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__20667 = x;
var G__20668 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__20667,G__20668) : cljs.core.mod.call(null,G__20667,G__20668));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__20669__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__20669 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20670__i = 0, G__20670__a = new Array(arguments.length -  2);
while (G__20670__i < G__20670__a.length) {G__20670__a[G__20670__i] = arguments[G__20670__i + 2]; ++G__20670__i;}
  more = new cljs.core.IndexedSeq(G__20670__a,0);
} 
return G__20669__delegate.call(this,x,y,more);};
G__20669.cljs$lang$maxFixedArity = 2;
G__20669.cljs$lang$applyTo = (function (arglist__20671){
var x = cljs.core.first(arglist__20671);
arglist__20671 = cljs.core.next(arglist__20671);
var y = cljs.core.first(arglist__20671);
var more = cljs.core.rest(arglist__20671);
return G__20669__delegate(x,y,more);
});
G__20669.cljs$core$IFn$_invoke$arity$variadic = G__20669__delegate;
return G__20669;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__20672 = null;
if (arguments.length > 2) {
var G__20673__i = 0, G__20673__a = new Array(arguments.length -  2);
while (G__20673__i < G__20673__a.length) {G__20673__a[G__20673__i] = arguments[G__20673__i + 2]; ++G__20673__i;}
G__20672 = new cljs.core.IndexedSeq(G__20673__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__20674__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__20674 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20675__i = 0, G__20675__a = new Array(arguments.length -  2);
while (G__20675__i < G__20675__a.length) {G__20675__a[G__20675__i] = arguments[G__20675__i + 2]; ++G__20675__i;}
  more = new cljs.core.IndexedSeq(G__20675__a,0);
} 
return G__20674__delegate.call(this,x,y,more);};
G__20674.cljs$lang$maxFixedArity = 2;
G__20674.cljs$lang$applyTo = (function (arglist__20676){
var x = cljs.core.first(arglist__20676);
arglist__20676 = cljs.core.next(arglist__20676);
var y = cljs.core.first(arglist__20676);
var more = cljs.core.rest(arglist__20676);
return G__20674__delegate(x,y,more);
});
G__20674.cljs$core$IFn$_invoke$arity$variadic = G__20674__delegate;
return G__20674;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__20677 = null;
if (arguments.length > 2) {
var G__20678__i = 0, G__20678__a = new Array(arguments.length -  2);
while (G__20678__i < G__20678__a.length) {G__20678__a[G__20678__i] = arguments[G__20678__i + 2]; ++G__20678__i;}
G__20677 = new cljs.core.IndexedSeq(G__20678__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__20681 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20681) : Math.floor.call(null,G__20681));
} else {
var G__20682 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20682) : Math.ceil.call(null,G__20682));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__20683__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__20683 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20684__i = 0, G__20684__a = new Array(arguments.length -  2);
while (G__20684__i < G__20684__a.length) {G__20684__a[G__20684__i] = arguments[G__20684__i + 2]; ++G__20684__i;}
  more = new cljs.core.IndexedSeq(G__20684__a,0);
} 
return G__20683__delegate.call(this,x,y,more);};
G__20683.cljs$lang$maxFixedArity = 2;
G__20683.cljs$lang$applyTo = (function (arglist__20685){
var x = cljs.core.first(arglist__20685);
arglist__20685 = cljs.core.next(arglist__20685);
var y = cljs.core.first(arglist__20685);
var more = cljs.core.rest(arglist__20685);
return G__20683__delegate(x,y,more);
});
G__20683.cljs$core$IFn$_invoke$arity$variadic = G__20683__delegate;
return G__20683;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__20686 = null;
if (arguments.length > 2) {
var G__20687__i = 0, G__20687__a = new Array(arguments.length -  2);
while (G__20687__i < G__20687__a.length) {G__20687__a[G__20687__i] = arguments[G__20687__i + 2]; ++G__20687__i;}
G__20686 = new cljs.core.IndexedSeq(G__20687__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__20688__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__20688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20689__i = 0, G__20689__a = new Array(arguments.length -  2);
while (G__20689__i < G__20689__a.length) {G__20689__a[G__20689__i] = arguments[G__20689__i + 2]; ++G__20689__i;}
  more = new cljs.core.IndexedSeq(G__20689__a,0);
} 
return G__20688__delegate.call(this,x,y,more);};
G__20688.cljs$lang$maxFixedArity = 2;
G__20688.cljs$lang$applyTo = (function (arglist__20690){
var x = cljs.core.first(arglist__20690);
arglist__20690 = cljs.core.next(arglist__20690);
var y = cljs.core.first(arglist__20690);
var more = cljs.core.rest(arglist__20690);
return G__20688__delegate(x,y,more);
});
G__20688.cljs$core$IFn$_invoke$arity$variadic = G__20688__delegate;
return G__20688;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__20691 = null;
if (arguments.length > 2) {
var G__20692__i = 0, G__20692__a = new Array(arguments.length -  2);
while (G__20692__i < G__20692__a.length) {G__20692__a[G__20692__i] = arguments[G__20692__i + 2]; ++G__20692__i;}
G__20691 = new cljs.core.IndexedSeq(G__20692__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__20693__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__20693 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20694__i = 0, G__20694__a = new Array(arguments.length -  2);
while (G__20694__i < G__20694__a.length) {G__20694__a[G__20694__i] = arguments[G__20694__i + 2]; ++G__20694__i;}
  more = new cljs.core.IndexedSeq(G__20694__a,0);
} 
return G__20693__delegate.call(this,x,y,more);};
G__20693.cljs$lang$maxFixedArity = 2;
G__20693.cljs$lang$applyTo = (function (arglist__20695){
var x = cljs.core.first(arglist__20695);
arglist__20695 = cljs.core.next(arglist__20695);
var y = cljs.core.first(arglist__20695);
var more = cljs.core.rest(arglist__20695);
return G__20693__delegate(x,y,more);
});
G__20693.cljs$core$IFn$_invoke$arity$variadic = G__20693__delegate;
return G__20693;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__20696 = null;
if (arguments.length > 2) {
var G__20697__i = 0, G__20697__a = new Array(arguments.length -  2);
while (G__20697__i < G__20697__a.length) {G__20697__a[G__20697__i] = arguments[G__20697__i + 2]; ++G__20697__i;}
G__20696 = new cljs.core.IndexedSeq(G__20697__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__20698__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__20698 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20699__i = 0, G__20699__a = new Array(arguments.length -  2);
while (G__20699__i < G__20699__a.length) {G__20699__a[G__20699__i] = arguments[G__20699__i + 2]; ++G__20699__i;}
  more = new cljs.core.IndexedSeq(G__20699__a,0);
} 
return G__20698__delegate.call(this,x,y,more);};
G__20698.cljs$lang$maxFixedArity = 2;
G__20698.cljs$lang$applyTo = (function (arglist__20700){
var x = cljs.core.first(arglist__20700);
arglist__20700 = cljs.core.next(arglist__20700);
var y = cljs.core.first(arglist__20700);
var more = cljs.core.rest(arglist__20700);
return G__20698__delegate(x,y,more);
});
G__20698.cljs$core$IFn$_invoke$arity$variadic = G__20698__delegate;
return G__20698;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__20701 = null;
if (arguments.length > 2) {
var G__20702__i = 0, G__20702__a = new Array(arguments.length -  2);
while (G__20702__i < G__20702__a.length) {G__20702__a[G__20702__i] = arguments[G__20702__i + 2]; ++G__20702__i;}
G__20701 = new cljs.core.IndexedSeq(G__20702__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__20707__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20708 = y;
var G__20709 = cljs.core.first(more);
var G__20710 = cljs.core.next(more);
x = G__20708;
y = G__20709;
more = G__20710;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20711__i = 0, G__20711__a = new Array(arguments.length -  2);
while (G__20711__i < G__20711__a.length) {G__20711__a[G__20711__i] = arguments[G__20711__i + 2]; ++G__20711__i;}
  more = new cljs.core.IndexedSeq(G__20711__a,0);
} 
return G__20707__delegate.call(this,x,y,more);};
G__20707.cljs$lang$maxFixedArity = 2;
G__20707.cljs$lang$applyTo = (function (arglist__20712){
var x = cljs.core.first(arglist__20712);
arglist__20712 = cljs.core.next(arglist__20712);
var y = cljs.core.first(arglist__20712);
var more = cljs.core.rest(arglist__20712);
return G__20707__delegate(x,y,more);
});
G__20707.cljs$core$IFn$_invoke$arity$variadic = G__20707__delegate;
return G__20707;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__20713 = null;
if (arguments.length > 2) {
var G__20714__i = 0, G__20714__a = new Array(arguments.length -  2);
while (G__20714__i < G__20714__a.length) {G__20714__a[G__20714__i] = arguments[G__20714__i + 2]; ++G__20714__i;}
G__20713 = new cljs.core.IndexedSeq(G__20714__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__20715 = (n__$1 - (1));
var G__20716 = cljs.core.next(xs);
n__$1 = G__20715;
xs = G__20716;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__20720 = x;
return goog.string.buildString(G__20720);
}
});
var str__2 = (function() { 
var G__20721__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__20722 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__20723 = cljs.core.next(more);
sb = G__20722;
more = G__20723;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__20721 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__20724__i = 0, G__20724__a = new Array(arguments.length -  1);
while (G__20724__i < G__20724__a.length) {G__20724__a[G__20724__i] = arguments[G__20724__i + 1]; ++G__20724__i;}
  ys = new cljs.core.IndexedSeq(G__20724__a,0);
} 
return G__20721__delegate.call(this,x,ys);};
G__20721.cljs$lang$maxFixedArity = 1;
G__20721.cljs$lang$applyTo = (function (arglist__20725){
var x = cljs.core.first(arglist__20725);
var ys = cljs.core.rest(arglist__20725);
return G__20721__delegate(x,ys);
});
G__20721.cljs$core$IFn$_invoke$arity$variadic = G__20721__delegate;
return G__20721;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__20726 = null;
if (arguments.length > 1) {
var G__20727__i = 0, G__20727__a = new Array(arguments.length -  1);
while (G__20727__i < G__20727__a.length) {G__20727__a[G__20727__i] = arguments[G__20727__i + 1]; ++G__20727__i;}
G__20726 = new cljs.core.IndexedSeq(G__20727__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__20728 = cljs.core.next(xs);
var G__20729 = cljs.core.next(ys);
xs = G__20728;
ys = G__20729;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__20730 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__20731 = cljs.core.next(s);
res = G__20730;
s = G__20731;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__20736 = ((h + (cljs.core.hash((function (){var G__20734 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20734) : cljs.core.key.call(null,G__20734));
})()) ^ cljs.core.hash((function (){var G__20735 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20735) : cljs.core.val.call(null,G__20735));
})()))) % (4503599627370496));
var G__20737 = cljs.core.next(s);
h = G__20736;
s = G__20737;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__20738 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__20739 = cljs.core.next(s__$1);
h = G__20738;
s__$1 = G__20739;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__20750_20760 = cljs.core.seq(fn_map);
var chunk__20751_20761 = null;
var count__20752_20762 = (0);
var i__20753_20763 = (0);
while(true){
if((i__20753_20763 < count__20752_20762)){
var vec__20754_20764 = chunk__20751_20761.cljs$core$IIndexed$_nth$arity$2(null,i__20753_20763);
var key_name_20765 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20754_20764,(0),null);
var f_20766 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20754_20764,(1),null);
var str_name_20767 = (function (){var G__20755 = key_name_20765;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20755) : cljs.core.name.call(null,G__20755));
})();
(obj[str_name_20767] = f_20766);

var G__20768 = seq__20750_20760;
var G__20769 = chunk__20751_20761;
var G__20770 = count__20752_20762;
var G__20771 = (i__20753_20763 + (1));
seq__20750_20760 = G__20768;
chunk__20751_20761 = G__20769;
count__20752_20762 = G__20770;
i__20753_20763 = G__20771;
continue;
} else {
var temp__4126__auto___20772 = cljs.core.seq(seq__20750_20760);
if(temp__4126__auto___20772){
var seq__20750_20773__$1 = temp__4126__auto___20772;
if(cljs.core.chunked_seq_QMARK_(seq__20750_20773__$1)){
var c__13412__auto___20774 = (function (){var G__20756 = seq__20750_20773__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__20756) : cljs.core.chunk_first.call(null,G__20756));
})();
var G__20775 = (function (){var G__20757 = seq__20750_20773__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__20757) : cljs.core.chunk_rest.call(null,G__20757));
})();
var G__20776 = c__13412__auto___20774;
var G__20777 = cljs.core.count(c__13412__auto___20774);
var G__20778 = (0);
seq__20750_20760 = G__20775;
chunk__20751_20761 = G__20776;
count__20752_20762 = G__20777;
i__20753_20763 = G__20778;
continue;
} else {
var vec__20758_20779 = cljs.core.first(seq__20750_20773__$1);
var key_name_20780 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20758_20779,(0),null);
var f_20781 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20758_20779,(1),null);
var str_name_20782 = (function (){var G__20759 = key_name_20780;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20759) : cljs.core.name.call(null,G__20759));
})();
(obj[str_name_20782] = f_20781);

var G__20783 = cljs.core.next(seq__20750_20773__$1);
var G__20784 = null;
var G__20785 = (0);
var G__20786 = (0);
seq__20750_20760 = G__20783;
chunk__20751_20761 = G__20784;
count__20752_20762 = G__20785;
i__20753_20763 = G__20786;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__20788 = coll;
if(G__20788){
var bit__13306__auto__ = (G__20788.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__13306__auto__) || (G__20788.cljs$core$IReversible$)){
return true;
} else {
if((!G__20788.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20788);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__20789 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__20789;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__20790 = (i - (1));
var G__20791 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__20790;
r = G__20791;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__20792__i = 0, G__20792__a = new Array(arguments.length -  0);
while (G__20792__i < G__20792__a.length) {G__20792__a[G__20792__i] = arguments[G__20792__i + 0]; ++G__20792__i;}
  xs = new cljs.core.IndexedSeq(G__20792__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__20793){
var xs = cljs.core.seq(arglist__20793);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12625__auto__ = (coll == null);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var G__20797 = coll;
if(G__20797){
var bit__13299__auto__ = (G__20797.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13299__auto__) || (G__20797.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__20799 = x;
if(G__20799){
var bit__13306__auto__ = (G__20799.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__13306__auto__) || (G__20799.cljs$core$IList$)){
return true;
} else {
if((!G__20799.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20799);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20799);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12613__auto__ = cljs.core.not(a.ns);
if(and__12613__auto__){
return b.ns;
} else {
return and__12613__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20806 = a.ns;
var G__20807 = b.ns;
return goog.array.defaultCompare(G__20806,G__20807);
})();
if(((0) === nsc)){
var G__20808 = a.name;
var G__20809 = b.name;
return goog.array.defaultCompare(G__20808,G__20809);
} else {
return nsc;
}
}
} else {
var G__20810 = a.name;
var G__20811 = b.name;
return goog.array.defaultCompare(G__20810,G__20811);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13046__auto__ = self__._hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__20813 = null;
var G__20813__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__20813__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__20813 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20813__2.call(this,self__,coll);
case 3:
return G__20813__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20813.cljs$core$IFn$_invoke$arity$2 = G__20813__2;
G__20813.cljs$core$IFn$_invoke$arity$3 = G__20813__3;
return G__20813;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args20812){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20812)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__20815 = x;
if(G__20815){
var bit__13299__auto__ = (G__20815.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13299__auto__) || (G__20815.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__20817 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20817) : cljs.core.name.call(null,G__20817));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__20818 = ls.sval();
ls = G__20818;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__20820 = s;
if(G__20820){
var bit__13299__auto__ = (G__20820.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13299__auto__) || (G__20820.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__20821 = cljs.core.next(s__$1);
s__$1 = G__20821;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_20822 = (0);
var xs_20823 = cljs.core.seq(coll);
while(true){
if(xs_20823){
(ret[i_20822] = cljs.core.to_array(cljs.core.first(xs_20823)));

var G__20824 = (i_20822 + (1));
var G__20825 = cljs.core.next(xs_20823);
i_20822 = G__20824;
xs_20823 = G__20825;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20828 = (i + (1));
var G__20829 = cljs.core.next(s__$1);
i = G__20828;
s__$1 = G__20829;
continue;
} else {
return a;
}
break;
}
} else {
var n__13512__auto___20830 = size;
var i_20831 = (0);
while(true){
if((i_20831 < n__13512__auto___20830)){
(a[i_20831] = init_val_or_seq);

var G__20832 = (i_20831 + (1));
i_20831 = G__20832;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20835 = (i + (1));
var G__20836 = cljs.core.next(s__$1);
i = G__20835;
s__$1 = G__20836;
continue;
} else {
return a;
}
break;
}
} else {
var n__13512__auto___20837 = size;
var i_20838 = (0);
while(true){
if((i_20838 < n__13512__auto___20837)){
(a[i_20838] = init_val_or_seq);

var G__20839 = (i_20838 + (1));
i_20838 = G__20839;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20842 = (i + (1));
var G__20843 = cljs.core.next(s__$1);
i = G__20842;
s__$1 = G__20843;
continue;
} else {
return a;
}
break;
}
} else {
var n__13512__auto___20844 = size;
var i_20845 = (0);
while(true){
if((i_20845 < n__13512__auto___20844)){
(a[i_20845] = init_val_or_seq);

var G__20846 = (i_20845 + (1));
i_20845 = G__20846;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20849 = (i + (1));
var G__20850 = cljs.core.next(s__$1);
i = G__20849;
s__$1 = G__20850;
continue;
} else {
return a;
}
break;
}
} else {
var n__13512__auto___20851 = size;
var i_20852 = (0);
while(true){
if((i_20852 < n__13512__auto___20851)){
(a[i_20852] = init_val_or_seq);

var G__20853 = (i_20852 + (1));
i_20852 = G__20853;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__20854 = cljs.core.next(s__$1);
var G__20855 = (i - (1));
var G__20856 = (sum + (1));
s__$1 = G__20854;
i = G__20855;
sum = G__20856;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__20876__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__20876 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20877__i = 0, G__20877__a = new Array(arguments.length -  2);
while (G__20877__i < G__20877__a.length) {G__20877__a[G__20877__i] = arguments[G__20877__i + 2]; ++G__20877__i;}
  zs = new cljs.core.IndexedSeq(G__20877__a,0);
} 
return G__20876__delegate.call(this,x,y,zs);};
G__20876.cljs$lang$maxFixedArity = 2;
G__20876.cljs$lang$applyTo = (function (arglist__20878){
var x = cljs.core.first(arglist__20878);
arglist__20878 = cljs.core.next(arglist__20878);
var y = cljs.core.first(arglist__20878);
var zs = cljs.core.rest(arglist__20878);
return G__20876__delegate(x,y,zs);
});
G__20876.cljs$core$IFn$_invoke$arity$variadic = G__20876__delegate;
return G__20876;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__20879 = null;
if (arguments.length > 2) {
var G__20880__i = 0, G__20880__a = new Array(arguments.length -  2);
while (G__20880__i < G__20880__a.length) {G__20880__a[G__20880__i] = arguments[G__20880__i + 2]; ++G__20880__i;}
G__20879 = new cljs.core.IndexedSeq(G__20880__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__20881__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__20881 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__20882__i = 0, G__20882__a = new Array(arguments.length -  4);
while (G__20882__i < G__20882__a.length) {G__20882__a[G__20882__i] = arguments[G__20882__i + 4]; ++G__20882__i;}
  more = new cljs.core.IndexedSeq(G__20882__a,0);
} 
return G__20881__delegate.call(this,a,b,c,d,more);};
G__20881.cljs$lang$maxFixedArity = 4;
G__20881.cljs$lang$applyTo = (function (arglist__20883){
var a = cljs.core.first(arglist__20883);
arglist__20883 = cljs.core.next(arglist__20883);
var b = cljs.core.first(arglist__20883);
arglist__20883 = cljs.core.next(arglist__20883);
var c = cljs.core.first(arglist__20883);
arglist__20883 = cljs.core.next(arglist__20883);
var d = cljs.core.first(arglist__20883);
var more = cljs.core.rest(arglist__20883);
return G__20881__delegate(a,b,c,d,more);
});
G__20881.cljs$core$IFn$_invoke$arity$variadic = G__20881__delegate;
return G__20881;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__20884 = null;
if (arguments.length > 4) {
var G__20885__i = 0, G__20885__a = new Array(arguments.length -  4);
while (G__20885__i < G__20885__a.length) {G__20885__a[G__20885__i] = arguments[G__20885__i + 4]; ++G__20885__i;}
G__20884 = new cljs.core.IndexedSeq(G__20885__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__20884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__20886__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20887 = ntcoll;
var G__20888 = cljs.core.first(vals);
var G__20889 = cljs.core.next(vals);
tcoll = G__20887;
val = G__20888;
vals = G__20889;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20886 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20890__i = 0, G__20890__a = new Array(arguments.length -  2);
while (G__20890__i < G__20890__a.length) {G__20890__a[G__20890__i] = arguments[G__20890__i + 2]; ++G__20890__i;}
  vals = new cljs.core.IndexedSeq(G__20890__a,0);
} 
return G__20886__delegate.call(this,tcoll,val,vals);};
G__20886.cljs$lang$maxFixedArity = 2;
G__20886.cljs$lang$applyTo = (function (arglist__20891){
var tcoll = cljs.core.first(arglist__20891);
arglist__20891 = cljs.core.next(arglist__20891);
var val = cljs.core.first(arglist__20891);
var vals = cljs.core.rest(arglist__20891);
return G__20886__delegate(tcoll,val,vals);
});
G__20886.cljs$core$IFn$_invoke$arity$variadic = G__20886__delegate;
return G__20886;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__20892 = null;
if (arguments.length > 2) {
var G__20893__i = 0, G__20893__a = new Array(arguments.length -  2);
while (G__20893__i < G__20893__a.length) {G__20893__a[G__20893__i] = arguments[G__20893__i + 2]; ++G__20893__i;}
G__20892 = new cljs.core.IndexedSeq(G__20893__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__20894__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__20895 = ntcoll;
var G__20896 = cljs.core.first(kvs);
var G__20897 = cljs.core.second(kvs);
var G__20898 = cljs.core.nnext(kvs);
tcoll = G__20895;
key = G__20896;
val = G__20897;
kvs = G__20898;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20894 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20899__i = 0, G__20899__a = new Array(arguments.length -  3);
while (G__20899__i < G__20899__a.length) {G__20899__a[G__20899__i] = arguments[G__20899__i + 3]; ++G__20899__i;}
  kvs = new cljs.core.IndexedSeq(G__20899__a,0);
} 
return G__20894__delegate.call(this,tcoll,key,val,kvs);};
G__20894.cljs$lang$maxFixedArity = 3;
G__20894.cljs$lang$applyTo = (function (arglist__20900){
var tcoll = cljs.core.first(arglist__20900);
arglist__20900 = cljs.core.next(arglist__20900);
var key = cljs.core.first(arglist__20900);
arglist__20900 = cljs.core.next(arglist__20900);
var val = cljs.core.first(arglist__20900);
var kvs = cljs.core.rest(arglist__20900);
return G__20894__delegate(tcoll,key,val,kvs);
});
G__20894.cljs$core$IFn$_invoke$arity$variadic = G__20894__delegate;
return G__20894;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__20901 = null;
if (arguments.length > 3) {
var G__20902__i = 0, G__20902__a = new Array(arguments.length -  3);
while (G__20902__i < G__20902__a.length) {G__20902__a[G__20902__i] = arguments[G__20902__i + 3]; ++G__20902__i;}
G__20901 = new cljs.core.IndexedSeq(G__20902__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__20901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__20903__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__20904 = ntcoll;
var G__20905 = cljs.core.first(ks);
var G__20906 = cljs.core.next(ks);
tcoll = G__20904;
key = G__20905;
ks = G__20906;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20903 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20907__i = 0, G__20907__a = new Array(arguments.length -  2);
while (G__20907__i < G__20907__a.length) {G__20907__a[G__20907__i] = arguments[G__20907__i + 2]; ++G__20907__i;}
  ks = new cljs.core.IndexedSeq(G__20907__a,0);
} 
return G__20903__delegate.call(this,tcoll,key,ks);};
G__20903.cljs$lang$maxFixedArity = 2;
G__20903.cljs$lang$applyTo = (function (arglist__20908){
var tcoll = cljs.core.first(arglist__20908);
arglist__20908 = cljs.core.next(arglist__20908);
var key = cljs.core.first(arglist__20908);
var ks = cljs.core.rest(arglist__20908);
return G__20903__delegate(tcoll,key,ks);
});
G__20903.cljs$core$IFn$_invoke$arity$variadic = G__20903__delegate;
return G__20903;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__20909 = null;
if (arguments.length > 2) {
var G__20910__i = 0, G__20910__a = new Array(arguments.length -  2);
while (G__20910__i < G__20910__a.length) {G__20910__a[G__20910__i] = arguments[G__20910__i + 2]; ++G__20910__i;}
G__20909 = new cljs.core.IndexedSeq(G__20910__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__20909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__20911__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20912 = ntcoll;
var G__20913 = cljs.core.first(vals);
var G__20914 = cljs.core.next(vals);
tcoll = G__20912;
val = G__20913;
vals = G__20914;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20911 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20915__i = 0, G__20915__a = new Array(arguments.length -  2);
while (G__20915__i < G__20915__a.length) {G__20915__a[G__20915__i] = arguments[G__20915__i + 2]; ++G__20915__i;}
  vals = new cljs.core.IndexedSeq(G__20915__a,0);
} 
return G__20911__delegate.call(this,tcoll,val,vals);};
G__20911.cljs$lang$maxFixedArity = 2;
G__20911.cljs$lang$applyTo = (function (arglist__20916){
var tcoll = cljs.core.first(arglist__20916);
arglist__20916 = cljs.core.next(arglist__20916);
var val = cljs.core.first(arglist__20916);
var vals = cljs.core.rest(arglist__20916);
return G__20911__delegate(tcoll,val,vals);
});
G__20911.cljs$core$IFn$_invoke$arity$variadic = G__20911__delegate;
return G__20911;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__20917 = null;
if (arguments.length > 2) {
var G__20918__i = 0, G__20918__a = new Array(arguments.length -  2);
while (G__20918__i < G__20918__a.length) {G__20918__a[G__20918__i] = arguments[G__20918__i + 2]; ++G__20918__i;}
G__20917 = new cljs.core.IndexedSeq(G__20918__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13556 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13556);
} else {
var G__21129 = a13556;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21129) : f.call(null,G__21129));
}
} else {
var b13557 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13556,b13557);
} else {
var G__21130 = a13556;
var G__21131 = b13557;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21130,G__21131) : f.call(null,G__21130,G__21131));
}
} else {
var c13558 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13556,b13557,c13558);
} else {
var G__21132 = a13556;
var G__21133 = b13557;
var G__21134 = c13558;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21132,G__21133,G__21134) : f.call(null,G__21132,G__21133,G__21134));
}
} else {
var d13559 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13556,b13557,c13558,d13559);
} else {
var G__21135 = a13556;
var G__21136 = b13557;
var G__21137 = c13558;
var G__21138 = d13559;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21135,G__21136,G__21137,G__21138) : f.call(null,G__21135,G__21136,G__21137,G__21138));
}
} else {
var e13560 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13556,b13557,c13558,d13559,e13560);
} else {
var G__21139 = a13556;
var G__21140 = b13557;
var G__21141 = c13558;
var G__21142 = d13559;
var G__21143 = e13560;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21139,G__21140,G__21141,G__21142,G__21143) : f.call(null,G__21139,G__21140,G__21141,G__21142,G__21143));
}
} else {
var f13561 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13556,b13557,c13558,d13559,e13560,f13561);
} else {
var G__21144 = a13556;
var G__21145 = b13557;
var G__21146 = c13558;
var G__21147 = d13559;
var G__21148 = e13560;
var G__21149 = f13561;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21144,G__21145,G__21146,G__21147,G__21148,G__21149) : f.call(null,G__21144,G__21145,G__21146,G__21147,G__21148,G__21149));
}
} else {
var g13562 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13556,b13557,c13558,d13559,e13560,f13561,g13562);
} else {
var G__21150 = a13556;
var G__21151 = b13557;
var G__21152 = c13558;
var G__21153 = d13559;
var G__21154 = e13560;
var G__21155 = f13561;
var G__21156 = g13562;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__21150,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156) : f.call(null,G__21150,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156));
}
} else {
var h13563 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563);
} else {
var G__21157 = a13556;
var G__21158 = b13557;
var G__21159 = c13558;
var G__21160 = d13559;
var G__21161 = e13560;
var G__21162 = f13561;
var G__21163 = g13562;
var G__21164 = h13563;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__21157,G__21158,G__21159,G__21160,G__21161,G__21162,G__21163,G__21164) : f.call(null,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162,G__21163,G__21164));
}
} else {
var i13564 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564);
} else {
var G__21165 = a13556;
var G__21166 = b13557;
var G__21167 = c13558;
var G__21168 = d13559;
var G__21169 = e13560;
var G__21170 = f13561;
var G__21171 = g13562;
var G__21172 = h13563;
var G__21173 = i13564;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__21165,G__21166,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173) : f.call(null,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173));
}
} else {
var j13565 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565);
} else {
var G__21174 = a13556;
var G__21175 = b13557;
var G__21176 = c13558;
var G__21177 = d13559;
var G__21178 = e13560;
var G__21179 = f13561;
var G__21180 = g13562;
var G__21181 = h13563;
var G__21182 = i13564;
var G__21183 = j13565;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182,G__21183) : f.call(null,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182,G__21183));
}
} else {
var k13566 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566);
} else {
var G__21184 = a13556;
var G__21185 = b13557;
var G__21186 = c13558;
var G__21187 = d13559;
var G__21188 = e13560;
var G__21189 = f13561;
var G__21190 = g13562;
var G__21191 = h13563;
var G__21192 = i13564;
var G__21193 = j13565;
var G__21194 = k13566;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194) : f.call(null,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194));
}
} else {
var l13567 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567);
} else {
var G__21195 = a13556;
var G__21196 = b13557;
var G__21197 = c13558;
var G__21198 = d13559;
var G__21199 = e13560;
var G__21200 = f13561;
var G__21201 = g13562;
var G__21202 = h13563;
var G__21203 = i13564;
var G__21204 = j13565;
var G__21205 = k13566;
var G__21206 = l13567;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204,G__21205,G__21206) : f.call(null,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204,G__21205,G__21206));
}
} else {
var m13568 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568);
} else {
var G__21207 = a13556;
var G__21208 = b13557;
var G__21209 = c13558;
var G__21210 = d13559;
var G__21211 = e13560;
var G__21212 = f13561;
var G__21213 = g13562;
var G__21214 = h13563;
var G__21215 = i13564;
var G__21216 = j13565;
var G__21217 = k13566;
var G__21218 = l13567;
var G__21219 = m13568;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__21207,G__21208,G__21209,G__21210,G__21211,G__21212,G__21213,G__21214,G__21215,G__21216,G__21217,G__21218,G__21219) : f.call(null,G__21207,G__21208,G__21209,G__21210,G__21211,G__21212,G__21213,G__21214,G__21215,G__21216,G__21217,G__21218,G__21219));
}
} else {
var n13569 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569);
} else {
var G__21220 = a13556;
var G__21221 = b13557;
var G__21222 = c13558;
var G__21223 = d13559;
var G__21224 = e13560;
var G__21225 = f13561;
var G__21226 = g13562;
var G__21227 = h13563;
var G__21228 = i13564;
var G__21229 = j13565;
var G__21230 = k13566;
var G__21231 = l13567;
var G__21232 = m13568;
var G__21233 = n13569;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__21220,G__21221,G__21222,G__21223,G__21224,G__21225,G__21226,G__21227,G__21228,G__21229,G__21230,G__21231,G__21232,G__21233) : f.call(null,G__21220,G__21221,G__21222,G__21223,G__21224,G__21225,G__21226,G__21227,G__21228,G__21229,G__21230,G__21231,G__21232,G__21233));
}
} else {
var o13570 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569,o13570);
} else {
var G__21234 = a13556;
var G__21235 = b13557;
var G__21236 = c13558;
var G__21237 = d13559;
var G__21238 = e13560;
var G__21239 = f13561;
var G__21240 = g13562;
var G__21241 = h13563;
var G__21242 = i13564;
var G__21243 = j13565;
var G__21244 = k13566;
var G__21245 = l13567;
var G__21246 = m13568;
var G__21247 = n13569;
var G__21248 = o13570;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__21234,G__21235,G__21236,G__21237,G__21238,G__21239,G__21240,G__21241,G__21242,G__21243,G__21244,G__21245,G__21246,G__21247,G__21248) : f.call(null,G__21234,G__21235,G__21236,G__21237,G__21238,G__21239,G__21240,G__21241,G__21242,G__21243,G__21244,G__21245,G__21246,G__21247,G__21248));
}
} else {
var p13571 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569,o13570,p13571);
} else {
var G__21249 = a13556;
var G__21250 = b13557;
var G__21251 = c13558;
var G__21252 = d13559;
var G__21253 = e13560;
var G__21254 = f13561;
var G__21255 = g13562;
var G__21256 = h13563;
var G__21257 = i13564;
var G__21258 = j13565;
var G__21259 = k13566;
var G__21260 = l13567;
var G__21261 = m13568;
var G__21262 = n13569;
var G__21263 = o13570;
var G__21264 = p13571;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__21249,G__21250,G__21251,G__21252,G__21253,G__21254,G__21255,G__21256,G__21257,G__21258,G__21259,G__21260,G__21261,G__21262,G__21263,G__21264) : f.call(null,G__21249,G__21250,G__21251,G__21252,G__21253,G__21254,G__21255,G__21256,G__21257,G__21258,G__21259,G__21260,G__21261,G__21262,G__21263,G__21264));
}
} else {
var q13572 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569,o13570,p13571,q13572);
} else {
var G__21265 = a13556;
var G__21266 = b13557;
var G__21267 = c13558;
var G__21268 = d13559;
var G__21269 = e13560;
var G__21270 = f13561;
var G__21271 = g13562;
var G__21272 = h13563;
var G__21273 = i13564;
var G__21274 = j13565;
var G__21275 = k13566;
var G__21276 = l13567;
var G__21277 = m13568;
var G__21278 = n13569;
var G__21279 = o13570;
var G__21280 = p13571;
var G__21281 = q13572;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__21265,G__21266,G__21267,G__21268,G__21269,G__21270,G__21271,G__21272,G__21273,G__21274,G__21275,G__21276,G__21277,G__21278,G__21279,G__21280,G__21281) : f.call(null,G__21265,G__21266,G__21267,G__21268,G__21269,G__21270,G__21271,G__21272,G__21273,G__21274,G__21275,G__21276,G__21277,G__21278,G__21279,G__21280,G__21281));
}
} else {
var r13573 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569,o13570,p13571,q13572,r13573);
} else {
var G__21282 = a13556;
var G__21283 = b13557;
var G__21284 = c13558;
var G__21285 = d13559;
var G__21286 = e13560;
var G__21287 = f13561;
var G__21288 = g13562;
var G__21289 = h13563;
var G__21290 = i13564;
var G__21291 = j13565;
var G__21292 = k13566;
var G__21293 = l13567;
var G__21294 = m13568;
var G__21295 = n13569;
var G__21296 = o13570;
var G__21297 = p13571;
var G__21298 = q13572;
var G__21299 = r13573;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__21282,G__21283,G__21284,G__21285,G__21286,G__21287,G__21288,G__21289,G__21290,G__21291,G__21292,G__21293,G__21294,G__21295,G__21296,G__21297,G__21298,G__21299) : f.call(null,G__21282,G__21283,G__21284,G__21285,G__21286,G__21287,G__21288,G__21289,G__21290,G__21291,G__21292,G__21293,G__21294,G__21295,G__21296,G__21297,G__21298,G__21299));
}
} else {
var s13574 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569,o13570,p13571,q13572,r13573,s13574);
} else {
var G__21300 = a13556;
var G__21301 = b13557;
var G__21302 = c13558;
var G__21303 = d13559;
var G__21304 = e13560;
var G__21305 = f13561;
var G__21306 = g13562;
var G__21307 = h13563;
var G__21308 = i13564;
var G__21309 = j13565;
var G__21310 = k13566;
var G__21311 = l13567;
var G__21312 = m13568;
var G__21313 = n13569;
var G__21314 = o13570;
var G__21315 = p13571;
var G__21316 = q13572;
var G__21317 = r13573;
var G__21318 = s13574;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__21300,G__21301,G__21302,G__21303,G__21304,G__21305,G__21306,G__21307,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316,G__21317,G__21318) : f.call(null,G__21300,G__21301,G__21302,G__21303,G__21304,G__21305,G__21306,G__21307,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316,G__21317,G__21318));
}
} else {
var t13575 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13556,b13557,c13558,d13559,e13560,f13561,g13562,h13563,i13564,j13565,k13566,l13567,m13568,n13569,o13570,p13571,q13572,r13573,s13574,t13575);
} else {
var G__21319 = a13556;
var G__21320 = b13557;
var G__21321 = c13558;
var G__21322 = d13559;
var G__21323 = e13560;
var G__21324 = f13561;
var G__21325 = g13562;
var G__21326 = h13563;
var G__21327 = i13564;
var G__21328 = j13565;
var G__21329 = k13566;
var G__21330 = l13567;
var G__21331 = m13568;
var G__21332 = n13569;
var G__21333 = o13570;
var G__21334 = p13571;
var G__21335 = q13572;
var G__21336 = r13573;
var G__21337 = s13574;
var G__21338 = t13575;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__21319,G__21320,G__21321,G__21322,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338) : f.call(null,G__21319,G__21320,G__21321,G__21322,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__21339__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__21339 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__21340__i = 0, G__21340__a = new Array(arguments.length -  5);
while (G__21340__i < G__21340__a.length) {G__21340__a[G__21340__i] = arguments[G__21340__i + 5]; ++G__21340__i;}
  args = new cljs.core.IndexedSeq(G__21340__a,0);
} 
return G__21339__delegate.call(this,f,a,b,c,d,args);};
G__21339.cljs$lang$maxFixedArity = 5;
G__21339.cljs$lang$applyTo = (function (arglist__21341){
var f = cljs.core.first(arglist__21341);
arglist__21341 = cljs.core.next(arglist__21341);
var a = cljs.core.first(arglist__21341);
arglist__21341 = cljs.core.next(arglist__21341);
var b = cljs.core.first(arglist__21341);
arglist__21341 = cljs.core.next(arglist__21341);
var c = cljs.core.first(arglist__21341);
arglist__21341 = cljs.core.next(arglist__21341);
var d = cljs.core.first(arglist__21341);
var args = cljs.core.rest(arglist__21341);
return G__21339__delegate(f,a,b,c,d,args);
});
G__21339.cljs$core$IFn$_invoke$arity$variadic = G__21339__delegate;
return G__21339;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__21342 = null;
if (arguments.length > 5) {
var G__21343__i = 0, G__21343__a = new Array(arguments.length -  5);
while (G__21343__i < G__21343__a.length) {G__21343__a[G__21343__i] = arguments[G__21343__i + 5]; ++G__21343__i;}
G__21342 = new cljs.core.IndexedSeq(G__21343__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__21342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__21359 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21359) : f.call(null,G__21359));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__21360 = cljs.core.meta(obj);
var G__21361 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21360,G__21361) : f.call(null,G__21360,G__21361));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__21362 = cljs.core.meta(obj);
var G__21363 = a;
var G__21364 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21362,G__21363,G__21364) : f.call(null,G__21362,G__21363,G__21364));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__21365 = cljs.core.meta(obj);
var G__21366 = a;
var G__21367 = b;
var G__21368 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21365,G__21366,G__21367,G__21368) : f.call(null,G__21365,G__21366,G__21367,G__21368));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__21369 = cljs.core.meta(obj);
var G__21370 = a;
var G__21371 = b;
var G__21372 = c;
var G__21373 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21369,G__21370,G__21371,G__21372,G__21373) : f.call(null,G__21369,G__21370,G__21371,G__21372,G__21373));
})());
});
var vary_meta__7 = (function() { 
var G__21374__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__21374 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__21375__i = 0, G__21375__a = new Array(arguments.length -  6);
while (G__21375__i < G__21375__a.length) {G__21375__a[G__21375__i] = arguments[G__21375__i + 6]; ++G__21375__i;}
  args = new cljs.core.IndexedSeq(G__21375__a,0);
} 
return G__21374__delegate.call(this,obj,f,a,b,c,d,args);};
G__21374.cljs$lang$maxFixedArity = 6;
G__21374.cljs$lang$applyTo = (function (arglist__21376){
var obj = cljs.core.first(arglist__21376);
arglist__21376 = cljs.core.next(arglist__21376);
var f = cljs.core.first(arglist__21376);
arglist__21376 = cljs.core.next(arglist__21376);
var a = cljs.core.first(arglist__21376);
arglist__21376 = cljs.core.next(arglist__21376);
var b = cljs.core.first(arglist__21376);
arglist__21376 = cljs.core.next(arglist__21376);
var c = cljs.core.first(arglist__21376);
arglist__21376 = cljs.core.next(arglist__21376);
var d = cljs.core.first(arglist__21376);
var args = cljs.core.rest(arglist__21376);
return G__21374__delegate(obj,f,a,b,c,d,args);
});
G__21374.cljs$core$IFn$_invoke$arity$variadic = G__21374__delegate;
return G__21374;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__21377 = null;
if (arguments.length > 6) {
var G__21378__i = 0, G__21378__a = new Array(arguments.length -  6);
while (G__21378__i < G__21378__a.length) {G__21378__a[G__21378__i] = arguments[G__21378__i + 6]; ++G__21378__i;}
G__21377 = new cljs.core.IndexedSeq(G__21378__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__21377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__21379__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__21379 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21380__i = 0, G__21380__a = new Array(arguments.length -  2);
while (G__21380__i < G__21380__a.length) {G__21380__a[G__21380__i] = arguments[G__21380__i + 2]; ++G__21380__i;}
  more = new cljs.core.IndexedSeq(G__21380__a,0);
} 
return G__21379__delegate.call(this,x,y,more);};
G__21379.cljs$lang$maxFixedArity = 2;
G__21379.cljs$lang$applyTo = (function (arglist__21381){
var x = cljs.core.first(arglist__21381);
arglist__21381 = cljs.core.next(arglist__21381);
var y = cljs.core.first(arglist__21381);
var more = cljs.core.rest(arglist__21381);
return G__21379__delegate(x,y,more);
});
G__21379.cljs$core$IFn$_invoke$arity$variadic = G__21379__delegate;
return G__21379;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__21382 = null;
if (arguments.length > 2) {
var G__21383__i = 0, G__21383__a = new Array(arguments.length -  2);
while (G__21383__i < G__21383__a.length) {G__21383__a[G__21383__i] = arguments[G__21383__i + 2]; ++G__21383__i;}
G__21382 = new cljs.core.IndexedSeq(G__21383__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21382);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t21387 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t21387 = (function (nil_iter,meta21388){
this.nil_iter = nil_iter;
this.meta21388 = meta21388;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t21387.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t21387.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t21387.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t21387.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_21389){
var self__ = this;
var _21389__$1 = this;
return self__.meta21388;
});

cljs.core.t21387.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_21389,meta21388__$1){
var self__ = this;
var _21389__$1 = this;
return (new cljs.core.t21387(self__.nil_iter,meta21388__$1));
});

cljs.core.t21387.cljs$lang$type = true;

cljs.core.t21387.cljs$lang$ctorStr = "cljs.core/t21387";

cljs.core.t21387.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/t21387");
});

cljs.core.__GT_t21387 = (function __GT_t21387(nil_iter__$1,meta21388){
return (new cljs.core.t21387(nil_iter__$1,meta21388));
});

}

return (new cljs.core.t21387(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/mnt/data/projects/vita/resources/public/app/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12613__auto__ = !((lt.stepper == null));
if(and__12613__auto__){
return self__.iter.hasNext();
} else {
return and__12613__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__21390 = lt;
var G__21391 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__21390,G__21391) : self__.xform.call(null,G__21390,G__21391));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21392 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21392) : self__.xform.call(null,G__21392));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__21394 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21394) : xform.call(null,G__21394));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__21396 = cljs.core.next(iters__$1);
iters__$1 = G__21396;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13512__auto___21397 = self__.iters.length;
var i_21398 = (0);
while(true){
if((i_21398 < n__13512__auto___21397)){
(self__.nexts[i_21398] = (self__.iters[i_21398]).next());

var G__21399 = (i_21398 + (1));
i_21398 = G__21399;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12613__auto__ = !((lt.stepper == null));
if(and__12613__auto__){
return this$.hasNext();
} else {
return and__12613__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21395 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21395) : self__.xform.call(null,G__21395));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__21404 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21404) : xform.call(null,G__21404));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__21405_21409 = cljs.core.seq(colls);
var chunk__21406_21410 = null;
var count__21407_21411 = (0);
var i__21408_21412 = (0);
while(true){
if((i__21408_21412 < count__21407_21411)){
var coll_21413 = chunk__21406_21410.cljs$core$IIndexed$_nth$arity$2(null,i__21408_21412);
iters.push(cljs.core.iter(coll_21413));

var G__21414 = seq__21405_21409;
var G__21415 = chunk__21406_21410;
var G__21416 = count__21407_21411;
var G__21417 = (i__21408_21412 + (1));
seq__21405_21409 = G__21414;
chunk__21406_21410 = G__21415;
count__21407_21411 = G__21416;
i__21408_21412 = G__21417;
continue;
} else {
var temp__4126__auto___21418 = cljs.core.seq(seq__21405_21409);
if(temp__4126__auto___21418){
var seq__21405_21419__$1 = temp__4126__auto___21418;
if(cljs.core.chunked_seq_QMARK_(seq__21405_21419__$1)){
var c__13412__auto___21420 = cljs.core.chunk_first(seq__21405_21419__$1);
var G__21421 = cljs.core.chunk_rest(seq__21405_21419__$1);
var G__21422 = c__13412__auto___21420;
var G__21423 = cljs.core.count(c__13412__auto___21420);
var G__21424 = (0);
seq__21405_21409 = G__21421;
chunk__21406_21410 = G__21422;
count__21407_21411 = G__21423;
i__21408_21412 = G__21424;
continue;
} else {
var coll_21425 = cljs.core.first(seq__21405_21419__$1);
iters.push(cljs.core.iter(coll_21425));

var G__21426 = cljs.core.next(seq__21405_21419__$1);
var G__21427 = null;
var G__21428 = (0);
var G__21429 = (0);
seq__21405_21409 = G__21426;
chunk__21406_21410 = G__21427;
count__21407_21411 = G__21428;
i__21408_21412 = G__21429;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12625__auto__ = cljs.core.seq(coll);
if(or__12625__auto__){
return or__12625__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__21430__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__21430 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21431__i = 0, G__21431__a = new Array(arguments.length -  2);
while (G__21431__i < G__21431__a.length) {G__21431__a[G__21431__i] = arguments[G__21431__i + 2]; ++G__21431__i;}
  colls = new cljs.core.IndexedSeq(G__21431__a,0);
} 
return G__21430__delegate.call(this,xform,coll,colls);};
G__21430.cljs$lang$maxFixedArity = 2;
G__21430.cljs$lang$applyTo = (function (arglist__21432){
var xform = cljs.core.first(arglist__21432);
arglist__21432 = cljs.core.next(arglist__21432);
var coll = cljs.core.first(arglist__21432);
var colls = cljs.core.rest(arglist__21432);
return G__21430__delegate(xform,coll,colls);
});
G__21430.cljs$core$IFn$_invoke$arity$variadic = G__21430__delegate;
return G__21430;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__21433 = null;
if (arguments.length > 2) {
var G__21434__i = 0, G__21434__a = new Array(arguments.length -  2);
while (G__21434__i < G__21434__a.length) {G__21434__a[G__21434__i] = arguments[G__21434__i + 2]; ++G__21434__i;}
G__21433 = new cljs.core.IndexedSeq(G__21434__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__21433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__21436 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21436) : pred.call(null,G__21436));
})())){
var G__21437 = pred;
var G__21438 = cljs.core.next(coll);
pred = G__21437;
coll = G__21438;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12625__auto__ = (function (){var G__21442 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21442) : pred.call(null,G__21442));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var G__21443 = pred;
var G__21444 = cljs.core.next(coll);
pred = G__21443;
coll = G__21444;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__21451 = null;
var G__21451__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__21451__1 = (function (x){
return cljs.core.not((function (){var G__21448 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21448) : f.call(null,G__21448));
})());
});
var G__21451__2 = (function (x,y){
return cljs.core.not((function (){var G__21449 = x;
var G__21450 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21449,G__21450) : f.call(null,G__21449,G__21450));
})());
});
var G__21451__3 = (function() { 
var G__21452__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__21452 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21453__i = 0, G__21453__a = new Array(arguments.length -  2);
while (G__21453__i < G__21453__a.length) {G__21453__a[G__21453__i] = arguments[G__21453__i + 2]; ++G__21453__i;}
  zs = new cljs.core.IndexedSeq(G__21453__a,0);
} 
return G__21452__delegate.call(this,x,y,zs);};
G__21452.cljs$lang$maxFixedArity = 2;
G__21452.cljs$lang$applyTo = (function (arglist__21454){
var x = cljs.core.first(arglist__21454);
arglist__21454 = cljs.core.next(arglist__21454);
var y = cljs.core.first(arglist__21454);
var zs = cljs.core.rest(arglist__21454);
return G__21452__delegate(x,y,zs);
});
G__21452.cljs$core$IFn$_invoke$arity$variadic = G__21452__delegate;
return G__21452;
})()
;
G__21451 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__21451__0.call(this);
case 1:
return G__21451__1.call(this,x);
case 2:
return G__21451__2.call(this,x,y);
default:
var G__21455 = null;
if (arguments.length > 2) {
var G__21456__i = 0, G__21456__a = new Array(arguments.length -  2);
while (G__21456__i < G__21456__a.length) {G__21456__a[G__21456__i] = arguments[G__21456__i + 2]; ++G__21456__i;}
G__21455 = new cljs.core.IndexedSeq(G__21456__a,0);
}
return G__21451__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21451.cljs$lang$maxFixedArity = 2;
G__21451.cljs$lang$applyTo = G__21451__3.cljs$lang$applyTo;
G__21451.cljs$core$IFn$_invoke$arity$0 = G__21451__0;
G__21451.cljs$core$IFn$_invoke$arity$1 = G__21451__1;
G__21451.cljs$core$IFn$_invoke$arity$2 = G__21451__2;
G__21451.cljs$core$IFn$_invoke$arity$variadic = G__21451__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21451;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__21457__delegate = function (args){
return x;
};
var G__21457 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21458__i = 0, G__21458__a = new Array(arguments.length -  0);
while (G__21458__i < G__21458__a.length) {G__21458__a[G__21458__i] = arguments[G__21458__i + 0]; ++G__21458__i;}
  args = new cljs.core.IndexedSeq(G__21458__a,0);
} 
return G__21457__delegate.call(this,args);};
G__21457.cljs$lang$maxFixedArity = 0;
G__21457.cljs$lang$applyTo = (function (arglist__21459){
var args = cljs.core.seq(arglist__21459);
return G__21457__delegate(args);
});
G__21457.cljs$core$IFn$_invoke$arity$variadic = G__21457__delegate;
return G__21457;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__21514 = null;
var G__21514__0 = (function (){
var G__21487 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21487) : f.call(null,G__21487));
});
var G__21514__1 = (function (x){
var G__21488 = (function (){var G__21489 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21489) : g.call(null,G__21489));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21488) : f.call(null,G__21488));
});
var G__21514__2 = (function (x,y){
var G__21490 = (function (){var G__21491 = x;
var G__21492 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__21491,G__21492) : g.call(null,G__21491,G__21492));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21490) : f.call(null,G__21490));
});
var G__21514__3 = (function (x,y,z){
var G__21493 = (function (){var G__21494 = x;
var G__21495 = y;
var G__21496 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__21494,G__21495,G__21496) : g.call(null,G__21494,G__21495,G__21496));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21493) : f.call(null,G__21493));
});
var G__21514__4 = (function() { 
var G__21515__delegate = function (x,y,z,args){
var G__21497 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21497) : f.call(null,G__21497));
};
var G__21515 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21516__i = 0, G__21516__a = new Array(arguments.length -  3);
while (G__21516__i < G__21516__a.length) {G__21516__a[G__21516__i] = arguments[G__21516__i + 3]; ++G__21516__i;}
  args = new cljs.core.IndexedSeq(G__21516__a,0);
} 
return G__21515__delegate.call(this,x,y,z,args);};
G__21515.cljs$lang$maxFixedArity = 3;
G__21515.cljs$lang$applyTo = (function (arglist__21517){
var x = cljs.core.first(arglist__21517);
arglist__21517 = cljs.core.next(arglist__21517);
var y = cljs.core.first(arglist__21517);
arglist__21517 = cljs.core.next(arglist__21517);
var z = cljs.core.first(arglist__21517);
var args = cljs.core.rest(arglist__21517);
return G__21515__delegate(x,y,z,args);
});
G__21515.cljs$core$IFn$_invoke$arity$variadic = G__21515__delegate;
return G__21515;
})()
;
G__21514 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21514__0.call(this);
case 1:
return G__21514__1.call(this,x);
case 2:
return G__21514__2.call(this,x,y);
case 3:
return G__21514__3.call(this,x,y,z);
default:
var G__21518 = null;
if (arguments.length > 3) {
var G__21519__i = 0, G__21519__a = new Array(arguments.length -  3);
while (G__21519__i < G__21519__a.length) {G__21519__a[G__21519__i] = arguments[G__21519__i + 3]; ++G__21519__i;}
G__21518 = new cljs.core.IndexedSeq(G__21519__a,0);
}
return G__21514__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21514.cljs$lang$maxFixedArity = 3;
G__21514.cljs$lang$applyTo = G__21514__4.cljs$lang$applyTo;
G__21514.cljs$core$IFn$_invoke$arity$0 = G__21514__0;
G__21514.cljs$core$IFn$_invoke$arity$1 = G__21514__1;
G__21514.cljs$core$IFn$_invoke$arity$2 = G__21514__2;
G__21514.cljs$core$IFn$_invoke$arity$3 = G__21514__3;
G__21514.cljs$core$IFn$_invoke$arity$variadic = G__21514__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21514;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__21520 = null;
var G__21520__0 = (function (){
var G__21498 = (function (){var G__21499 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21499) : g.call(null,G__21499));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21498) : f.call(null,G__21498));
});
var G__21520__1 = (function (x){
var G__21500 = (function (){var G__21501 = (function (){var G__21502 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__21502) : h.call(null,G__21502));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21501) : g.call(null,G__21501));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21500) : f.call(null,G__21500));
});
var G__21520__2 = (function (x,y){
var G__21503 = (function (){var G__21504 = (function (){var G__21505 = x;
var G__21506 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__21505,G__21506) : h.call(null,G__21505,G__21506));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21504) : g.call(null,G__21504));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21503) : f.call(null,G__21503));
});
var G__21520__3 = (function (x,y,z){
var G__21507 = (function (){var G__21508 = (function (){var G__21509 = x;
var G__21510 = y;
var G__21511 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__21509,G__21510,G__21511) : h.call(null,G__21509,G__21510,G__21511));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21508) : g.call(null,G__21508));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21507) : f.call(null,G__21507));
});
var G__21520__4 = (function() { 
var G__21521__delegate = function (x,y,z,args){
var G__21512 = (function (){var G__21513 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21513) : g.call(null,G__21513));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21512) : f.call(null,G__21512));
};
var G__21521 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21522__i = 0, G__21522__a = new Array(arguments.length -  3);
while (G__21522__i < G__21522__a.length) {G__21522__a[G__21522__i] = arguments[G__21522__i + 3]; ++G__21522__i;}
  args = new cljs.core.IndexedSeq(G__21522__a,0);
} 
return G__21521__delegate.call(this,x,y,z,args);};
G__21521.cljs$lang$maxFixedArity = 3;
G__21521.cljs$lang$applyTo = (function (arglist__21523){
var x = cljs.core.first(arglist__21523);
arglist__21523 = cljs.core.next(arglist__21523);
var y = cljs.core.first(arglist__21523);
arglist__21523 = cljs.core.next(arglist__21523);
var z = cljs.core.first(arglist__21523);
var args = cljs.core.rest(arglist__21523);
return G__21521__delegate(x,y,z,args);
});
G__21521.cljs$core$IFn$_invoke$arity$variadic = G__21521__delegate;
return G__21521;
})()
;
G__21520 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21520__0.call(this);
case 1:
return G__21520__1.call(this,x);
case 2:
return G__21520__2.call(this,x,y);
case 3:
return G__21520__3.call(this,x,y,z);
default:
var G__21524 = null;
if (arguments.length > 3) {
var G__21525__i = 0, G__21525__a = new Array(arguments.length -  3);
while (G__21525__i < G__21525__a.length) {G__21525__a[G__21525__i] = arguments[G__21525__i + 3]; ++G__21525__i;}
G__21524 = new cljs.core.IndexedSeq(G__21525__a,0);
}
return G__21520__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21520.cljs$lang$maxFixedArity = 3;
G__21520.cljs$lang$applyTo = G__21520__4.cljs$lang$applyTo;
G__21520.cljs$core$IFn$_invoke$arity$0 = G__21520__0;
G__21520.cljs$core$IFn$_invoke$arity$1 = G__21520__1;
G__21520.cljs$core$IFn$_invoke$arity$2 = G__21520__2;
G__21520.cljs$core$IFn$_invoke$arity$3 = G__21520__3;
G__21520.cljs$core$IFn$_invoke$arity$variadic = G__21520__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21520;
})()
});
var comp__4 = (function() { 
var G__21526__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__21527__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__21528 = cljs.core.first(fs__$2).call(null,ret);
var G__21529 = cljs.core.next(fs__$2);
ret = G__21528;
fs__$2 = G__21529;
continue;
} else {
return ret;
}
break;
}
};
var G__21527 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21530__i = 0, G__21530__a = new Array(arguments.length -  0);
while (G__21530__i < G__21530__a.length) {G__21530__a[G__21530__i] = arguments[G__21530__i + 0]; ++G__21530__i;}
  args = new cljs.core.IndexedSeq(G__21530__a,0);
} 
return G__21527__delegate.call(this,args);};
G__21527.cljs$lang$maxFixedArity = 0;
G__21527.cljs$lang$applyTo = (function (arglist__21531){
var args = cljs.core.seq(arglist__21531);
return G__21527__delegate(args);
});
G__21527.cljs$core$IFn$_invoke$arity$variadic = G__21527__delegate;
return G__21527;
})()
;
;})(fs__$1))
};
var G__21526 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__21532__i = 0, G__21532__a = new Array(arguments.length -  3);
while (G__21532__i < G__21532__a.length) {G__21532__a[G__21532__i] = arguments[G__21532__i + 3]; ++G__21532__i;}
  fs = new cljs.core.IndexedSeq(G__21532__a,0);
} 
return G__21526__delegate.call(this,f1,f2,f3,fs);};
G__21526.cljs$lang$maxFixedArity = 3;
G__21526.cljs$lang$applyTo = (function (arglist__21533){
var f1 = cljs.core.first(arglist__21533);
arglist__21533 = cljs.core.next(arglist__21533);
var f2 = cljs.core.first(arglist__21533);
arglist__21533 = cljs.core.next(arglist__21533);
var f3 = cljs.core.first(arglist__21533);
var fs = cljs.core.rest(arglist__21533);
return G__21526__delegate(f1,f2,f3,fs);
});
G__21526.cljs$core$IFn$_invoke$arity$variadic = G__21526__delegate;
return G__21526;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__21534 = null;
if (arguments.length > 3) {
var G__21535__i = 0, G__21535__a = new Array(arguments.length -  3);
while (G__21535__i < G__21535__a.length) {G__21535__a[G__21535__i] = arguments[G__21535__i + 3]; ++G__21535__i;}
G__21534 = new cljs.core.IndexedSeq(G__21535__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__21534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__21620 = null;
var G__21620__0 = (function (){
var G__21578 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21578) : f.call(null,G__21578));
});
var G__21620__1 = (function (x){
var G__21579 = arg1;
var G__21580 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21579,G__21580) : f.call(null,G__21579,G__21580));
});
var G__21620__2 = (function (x,y){
var G__21581 = arg1;
var G__21582 = x;
var G__21583 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21581,G__21582,G__21583) : f.call(null,G__21581,G__21582,G__21583));
});
var G__21620__3 = (function (x,y,z){
var G__21584 = arg1;
var G__21585 = x;
var G__21586 = y;
var G__21587 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21584,G__21585,G__21586,G__21587) : f.call(null,G__21584,G__21585,G__21586,G__21587));
});
var G__21620__4 = (function() { 
var G__21621__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__21621 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21622__i = 0, G__21622__a = new Array(arguments.length -  3);
while (G__21622__i < G__21622__a.length) {G__21622__a[G__21622__i] = arguments[G__21622__i + 3]; ++G__21622__i;}
  args = new cljs.core.IndexedSeq(G__21622__a,0);
} 
return G__21621__delegate.call(this,x,y,z,args);};
G__21621.cljs$lang$maxFixedArity = 3;
G__21621.cljs$lang$applyTo = (function (arglist__21623){
var x = cljs.core.first(arglist__21623);
arglist__21623 = cljs.core.next(arglist__21623);
var y = cljs.core.first(arglist__21623);
arglist__21623 = cljs.core.next(arglist__21623);
var z = cljs.core.first(arglist__21623);
var args = cljs.core.rest(arglist__21623);
return G__21621__delegate(x,y,z,args);
});
G__21621.cljs$core$IFn$_invoke$arity$variadic = G__21621__delegate;
return G__21621;
})()
;
G__21620 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21620__0.call(this);
case 1:
return G__21620__1.call(this,x);
case 2:
return G__21620__2.call(this,x,y);
case 3:
return G__21620__3.call(this,x,y,z);
default:
var G__21624 = null;
if (arguments.length > 3) {
var G__21625__i = 0, G__21625__a = new Array(arguments.length -  3);
while (G__21625__i < G__21625__a.length) {G__21625__a[G__21625__i] = arguments[G__21625__i + 3]; ++G__21625__i;}
G__21624 = new cljs.core.IndexedSeq(G__21625__a,0);
}
return G__21620__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21620.cljs$lang$maxFixedArity = 3;
G__21620.cljs$lang$applyTo = G__21620__4.cljs$lang$applyTo;
G__21620.cljs$core$IFn$_invoke$arity$0 = G__21620__0;
G__21620.cljs$core$IFn$_invoke$arity$1 = G__21620__1;
G__21620.cljs$core$IFn$_invoke$arity$2 = G__21620__2;
G__21620.cljs$core$IFn$_invoke$arity$3 = G__21620__3;
G__21620.cljs$core$IFn$_invoke$arity$variadic = G__21620__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21620;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__21626 = null;
var G__21626__0 = (function (){
var G__21588 = arg1;
var G__21589 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21588,G__21589) : f.call(null,G__21588,G__21589));
});
var G__21626__1 = (function (x){
var G__21590 = arg1;
var G__21591 = arg2;
var G__21592 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21590,G__21591,G__21592) : f.call(null,G__21590,G__21591,G__21592));
});
var G__21626__2 = (function (x,y){
var G__21593 = arg1;
var G__21594 = arg2;
var G__21595 = x;
var G__21596 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21593,G__21594,G__21595,G__21596) : f.call(null,G__21593,G__21594,G__21595,G__21596));
});
var G__21626__3 = (function (x,y,z){
var G__21597 = arg1;
var G__21598 = arg2;
var G__21599 = x;
var G__21600 = y;
var G__21601 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21597,G__21598,G__21599,G__21600,G__21601) : f.call(null,G__21597,G__21598,G__21599,G__21600,G__21601));
});
var G__21626__4 = (function() { 
var G__21627__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__21627 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21628__i = 0, G__21628__a = new Array(arguments.length -  3);
while (G__21628__i < G__21628__a.length) {G__21628__a[G__21628__i] = arguments[G__21628__i + 3]; ++G__21628__i;}
  args = new cljs.core.IndexedSeq(G__21628__a,0);
} 
return G__21627__delegate.call(this,x,y,z,args);};
G__21627.cljs$lang$maxFixedArity = 3;
G__21627.cljs$lang$applyTo = (function (arglist__21629){
var x = cljs.core.first(arglist__21629);
arglist__21629 = cljs.core.next(arglist__21629);
var y = cljs.core.first(arglist__21629);
arglist__21629 = cljs.core.next(arglist__21629);
var z = cljs.core.first(arglist__21629);
var args = cljs.core.rest(arglist__21629);
return G__21627__delegate(x,y,z,args);
});
G__21627.cljs$core$IFn$_invoke$arity$variadic = G__21627__delegate;
return G__21627;
})()
;
G__21626 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21626__0.call(this);
case 1:
return G__21626__1.call(this,x);
case 2:
return G__21626__2.call(this,x,y);
case 3:
return G__21626__3.call(this,x,y,z);
default:
var G__21630 = null;
if (arguments.length > 3) {
var G__21631__i = 0, G__21631__a = new Array(arguments.length -  3);
while (G__21631__i < G__21631__a.length) {G__21631__a[G__21631__i] = arguments[G__21631__i + 3]; ++G__21631__i;}
G__21630 = new cljs.core.IndexedSeq(G__21631__a,0);
}
return G__21626__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21626.cljs$lang$maxFixedArity = 3;
G__21626.cljs$lang$applyTo = G__21626__4.cljs$lang$applyTo;
G__21626.cljs$core$IFn$_invoke$arity$0 = G__21626__0;
G__21626.cljs$core$IFn$_invoke$arity$1 = G__21626__1;
G__21626.cljs$core$IFn$_invoke$arity$2 = G__21626__2;
G__21626.cljs$core$IFn$_invoke$arity$3 = G__21626__3;
G__21626.cljs$core$IFn$_invoke$arity$variadic = G__21626__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21626;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__21632 = null;
var G__21632__0 = (function (){
var G__21602 = arg1;
var G__21603 = arg2;
var G__21604 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21602,G__21603,G__21604) : f.call(null,G__21602,G__21603,G__21604));
});
var G__21632__1 = (function (x){
var G__21605 = arg1;
var G__21606 = arg2;
var G__21607 = arg3;
var G__21608 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21605,G__21606,G__21607,G__21608) : f.call(null,G__21605,G__21606,G__21607,G__21608));
});
var G__21632__2 = (function (x,y){
var G__21609 = arg1;
var G__21610 = arg2;
var G__21611 = arg3;
var G__21612 = x;
var G__21613 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21609,G__21610,G__21611,G__21612,G__21613) : f.call(null,G__21609,G__21610,G__21611,G__21612,G__21613));
});
var G__21632__3 = (function (x,y,z){
var G__21614 = arg1;
var G__21615 = arg2;
var G__21616 = arg3;
var G__21617 = x;
var G__21618 = y;
var G__21619 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21614,G__21615,G__21616,G__21617,G__21618,G__21619) : f.call(null,G__21614,G__21615,G__21616,G__21617,G__21618,G__21619));
});
var G__21632__4 = (function() { 
var G__21633__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__21633 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21634__i = 0, G__21634__a = new Array(arguments.length -  3);
while (G__21634__i < G__21634__a.length) {G__21634__a[G__21634__i] = arguments[G__21634__i + 3]; ++G__21634__i;}
  args = new cljs.core.IndexedSeq(G__21634__a,0);
} 
return G__21633__delegate.call(this,x,y,z,args);};
G__21633.cljs$lang$maxFixedArity = 3;
G__21633.cljs$lang$applyTo = (function (arglist__21635){
var x = cljs.core.first(arglist__21635);
arglist__21635 = cljs.core.next(arglist__21635);
var y = cljs.core.first(arglist__21635);
arglist__21635 = cljs.core.next(arglist__21635);
var z = cljs.core.first(arglist__21635);
var args = cljs.core.rest(arglist__21635);
return G__21633__delegate(x,y,z,args);
});
G__21633.cljs$core$IFn$_invoke$arity$variadic = G__21633__delegate;
return G__21633;
})()
;
G__21632 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21632__0.call(this);
case 1:
return G__21632__1.call(this,x);
case 2:
return G__21632__2.call(this,x,y);
case 3:
return G__21632__3.call(this,x,y,z);
default:
var G__21636 = null;
if (arguments.length > 3) {
var G__21637__i = 0, G__21637__a = new Array(arguments.length -  3);
while (G__21637__i < G__21637__a.length) {G__21637__a[G__21637__i] = arguments[G__21637__i + 3]; ++G__21637__i;}
G__21636 = new cljs.core.IndexedSeq(G__21637__a,0);
}
return G__21632__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21632.cljs$lang$maxFixedArity = 3;
G__21632.cljs$lang$applyTo = G__21632__4.cljs$lang$applyTo;
G__21632.cljs$core$IFn$_invoke$arity$0 = G__21632__0;
G__21632.cljs$core$IFn$_invoke$arity$1 = G__21632__1;
G__21632.cljs$core$IFn$_invoke$arity$2 = G__21632__2;
G__21632.cljs$core$IFn$_invoke$arity$3 = G__21632__3;
G__21632.cljs$core$IFn$_invoke$arity$variadic = G__21632__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21632;
})()
});
var partial__5 = (function() { 
var G__21638__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__21639__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__21639 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21640__i = 0, G__21640__a = new Array(arguments.length -  0);
while (G__21640__i < G__21640__a.length) {G__21640__a[G__21640__i] = arguments[G__21640__i + 0]; ++G__21640__i;}
  args = new cljs.core.IndexedSeq(G__21640__a,0);
} 
return G__21639__delegate.call(this,args);};
G__21639.cljs$lang$maxFixedArity = 0;
G__21639.cljs$lang$applyTo = (function (arglist__21641){
var args = cljs.core.seq(arglist__21641);
return G__21639__delegate(args);
});
G__21639.cljs$core$IFn$_invoke$arity$variadic = G__21639__delegate;
return G__21639;
})()
;
};
var G__21638 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__21642__i = 0, G__21642__a = new Array(arguments.length -  4);
while (G__21642__i < G__21642__a.length) {G__21642__a[G__21642__i] = arguments[G__21642__i + 4]; ++G__21642__i;}
  more = new cljs.core.IndexedSeq(G__21642__a,0);
} 
return G__21638__delegate.call(this,f,arg1,arg2,arg3,more);};
G__21638.cljs$lang$maxFixedArity = 4;
G__21638.cljs$lang$applyTo = (function (arglist__21643){
var f = cljs.core.first(arglist__21643);
arglist__21643 = cljs.core.next(arglist__21643);
var arg1 = cljs.core.first(arglist__21643);
arglist__21643 = cljs.core.next(arglist__21643);
var arg2 = cljs.core.first(arglist__21643);
arglist__21643 = cljs.core.next(arglist__21643);
var arg3 = cljs.core.first(arglist__21643);
var more = cljs.core.rest(arglist__21643);
return G__21638__delegate(f,arg1,arg2,arg3,more);
});
G__21638.cljs$core$IFn$_invoke$arity$variadic = G__21638__delegate;
return G__21638;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__21644 = null;
if (arguments.length > 4) {
var G__21645__i = 0, G__21645__a = new Array(arguments.length -  4);
while (G__21645__i < G__21645__a.length) {G__21645__a[G__21645__i] = arguments[G__21645__i + 4]; ++G__21645__i;}
G__21644 = new cljs.core.IndexedSeq(G__21645__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__21644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__21678 = null;
var G__21678__1 = (function (a){
var G__21662 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21662) : f.call(null,G__21662));
});
var G__21678__2 = (function (a,b){
var G__21663 = (((a == null))?x:a);
var G__21664 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21663,G__21664) : f.call(null,G__21663,G__21664));
});
var G__21678__3 = (function (a,b,c){
var G__21665 = (((a == null))?x:a);
var G__21666 = b;
var G__21667 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21665,G__21666,G__21667) : f.call(null,G__21665,G__21666,G__21667));
});
var G__21678__4 = (function() { 
var G__21679__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__21679 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21680__i = 0, G__21680__a = new Array(arguments.length -  3);
while (G__21680__i < G__21680__a.length) {G__21680__a[G__21680__i] = arguments[G__21680__i + 3]; ++G__21680__i;}
  ds = new cljs.core.IndexedSeq(G__21680__a,0);
} 
return G__21679__delegate.call(this,a,b,c,ds);};
G__21679.cljs$lang$maxFixedArity = 3;
G__21679.cljs$lang$applyTo = (function (arglist__21681){
var a = cljs.core.first(arglist__21681);
arglist__21681 = cljs.core.next(arglist__21681);
var b = cljs.core.first(arglist__21681);
arglist__21681 = cljs.core.next(arglist__21681);
var c = cljs.core.first(arglist__21681);
var ds = cljs.core.rest(arglist__21681);
return G__21679__delegate(a,b,c,ds);
});
G__21679.cljs$core$IFn$_invoke$arity$variadic = G__21679__delegate;
return G__21679;
})()
;
G__21678 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__21678__1.call(this,a);
case 2:
return G__21678__2.call(this,a,b);
case 3:
return G__21678__3.call(this,a,b,c);
default:
var G__21682 = null;
if (arguments.length > 3) {
var G__21683__i = 0, G__21683__a = new Array(arguments.length -  3);
while (G__21683__i < G__21683__a.length) {G__21683__a[G__21683__i] = arguments[G__21683__i + 3]; ++G__21683__i;}
G__21682 = new cljs.core.IndexedSeq(G__21683__a,0);
}
return G__21678__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21678.cljs$lang$maxFixedArity = 3;
G__21678.cljs$lang$applyTo = G__21678__4.cljs$lang$applyTo;
G__21678.cljs$core$IFn$_invoke$arity$1 = G__21678__1;
G__21678.cljs$core$IFn$_invoke$arity$2 = G__21678__2;
G__21678.cljs$core$IFn$_invoke$arity$3 = G__21678__3;
G__21678.cljs$core$IFn$_invoke$arity$variadic = G__21678__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21678;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__21684 = null;
var G__21684__2 = (function (a,b){
var G__21668 = (((a == null))?x:a);
var G__21669 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21668,G__21669) : f.call(null,G__21668,G__21669));
});
var G__21684__3 = (function (a,b,c){
var G__21670 = (((a == null))?x:a);
var G__21671 = (((b == null))?y:b);
var G__21672 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21670,G__21671,G__21672) : f.call(null,G__21670,G__21671,G__21672));
});
var G__21684__4 = (function() { 
var G__21685__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__21685 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21686__i = 0, G__21686__a = new Array(arguments.length -  3);
while (G__21686__i < G__21686__a.length) {G__21686__a[G__21686__i] = arguments[G__21686__i + 3]; ++G__21686__i;}
  ds = new cljs.core.IndexedSeq(G__21686__a,0);
} 
return G__21685__delegate.call(this,a,b,c,ds);};
G__21685.cljs$lang$maxFixedArity = 3;
G__21685.cljs$lang$applyTo = (function (arglist__21687){
var a = cljs.core.first(arglist__21687);
arglist__21687 = cljs.core.next(arglist__21687);
var b = cljs.core.first(arglist__21687);
arglist__21687 = cljs.core.next(arglist__21687);
var c = cljs.core.first(arglist__21687);
var ds = cljs.core.rest(arglist__21687);
return G__21685__delegate(a,b,c,ds);
});
G__21685.cljs$core$IFn$_invoke$arity$variadic = G__21685__delegate;
return G__21685;
})()
;
G__21684 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21684__2.call(this,a,b);
case 3:
return G__21684__3.call(this,a,b,c);
default:
var G__21688 = null;
if (arguments.length > 3) {
var G__21689__i = 0, G__21689__a = new Array(arguments.length -  3);
while (G__21689__i < G__21689__a.length) {G__21689__a[G__21689__i] = arguments[G__21689__i + 3]; ++G__21689__i;}
G__21688 = new cljs.core.IndexedSeq(G__21689__a,0);
}
return G__21684__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21688);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21684.cljs$lang$maxFixedArity = 3;
G__21684.cljs$lang$applyTo = G__21684__4.cljs$lang$applyTo;
G__21684.cljs$core$IFn$_invoke$arity$2 = G__21684__2;
G__21684.cljs$core$IFn$_invoke$arity$3 = G__21684__3;
G__21684.cljs$core$IFn$_invoke$arity$variadic = G__21684__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21684;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__21690 = null;
var G__21690__2 = (function (a,b){
var G__21673 = (((a == null))?x:a);
var G__21674 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21673,G__21674) : f.call(null,G__21673,G__21674));
});
var G__21690__3 = (function (a,b,c){
var G__21675 = (((a == null))?x:a);
var G__21676 = (((b == null))?y:b);
var G__21677 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21675,G__21676,G__21677) : f.call(null,G__21675,G__21676,G__21677));
});
var G__21690__4 = (function() { 
var G__21691__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__21691 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21692__i = 0, G__21692__a = new Array(arguments.length -  3);
while (G__21692__i < G__21692__a.length) {G__21692__a[G__21692__i] = arguments[G__21692__i + 3]; ++G__21692__i;}
  ds = new cljs.core.IndexedSeq(G__21692__a,0);
} 
return G__21691__delegate.call(this,a,b,c,ds);};
G__21691.cljs$lang$maxFixedArity = 3;
G__21691.cljs$lang$applyTo = (function (arglist__21693){
var a = cljs.core.first(arglist__21693);
arglist__21693 = cljs.core.next(arglist__21693);
var b = cljs.core.first(arglist__21693);
arglist__21693 = cljs.core.next(arglist__21693);
var c = cljs.core.first(arglist__21693);
var ds = cljs.core.rest(arglist__21693);
return G__21691__delegate(a,b,c,ds);
});
G__21691.cljs$core$IFn$_invoke$arity$variadic = G__21691__delegate;
return G__21691;
})()
;
G__21690 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21690__2.call(this,a,b);
case 3:
return G__21690__3.call(this,a,b,c);
default:
var G__21694 = null;
if (arguments.length > 3) {
var G__21695__i = 0, G__21695__a = new Array(arguments.length -  3);
while (G__21695__i < G__21695__a.length) {G__21695__a[G__21695__i] = arguments[G__21695__i + 3]; ++G__21695__i;}
G__21694 = new cljs.core.IndexedSeq(G__21695__a,0);
}
return G__21690__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21690.cljs$lang$maxFixedArity = 3;
G__21690.cljs$lang$applyTo = G__21690__4.cljs$lang$applyTo;
G__21690.cljs$core$IFn$_invoke$arity$2 = G__21690__2;
G__21690.cljs$core$IFn$_invoke$arity$3 = G__21690__3;
G__21690.cljs$core$IFn$_invoke$arity$variadic = G__21690__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21690;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__21726 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__21726) : cljs.core.volatile_BANG_.call(null,G__21726));
})();
return ((function (i){
return (function() {
var G__21756 = null;
var G__21756__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21756__1 = (function (result){
var G__21727 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21727) : rf.call(null,G__21727));
});
var G__21756__2 = (function (result,input){
var G__21728 = result;
var G__21729 = (function (){var G__21730 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__21731 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21730,G__21731) : f.call(null,G__21730,G__21731));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21728,G__21729) : rf.call(null,G__21728,G__21729));
});
G__21756 = function(result,input){
switch(arguments.length){
case 0:
return G__21756__0.call(this);
case 1:
return G__21756__1.call(this,result);
case 2:
return G__21756__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21756.cljs$core$IFn$_invoke$arity$0 = G__21756__0;
G__21756.cljs$core$IFn$_invoke$arity$1 = G__21756__1;
G__21756.cljs$core$IFn$_invoke$arity$2 = G__21756__2;
return G__21756;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13512__auto___21757 = size;
var i_21758 = (0);
while(true){
if((i_21758 < n__13512__auto___21757)){
cljs.core.chunk_append(b,(function (){var G__21752 = (idx + i_21758);
var G__21753 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21758);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21752,G__21753) : f.call(null,G__21752,G__21753));
})());

var G__21759 = (i_21758 + (1));
i_21758 = G__21759;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21754 = idx;
var G__21755 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21754,G__21755) : f.call(null,G__21754,G__21755));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__21778 = null;
var G__21778__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21778__1 = (function (result){
var G__21772 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21772) : rf.call(null,G__21772));
});
var G__21778__2 = (function (result,input){
var v = (function (){var G__21773 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21773) : f.call(null,G__21773));
})();
if((v == null)){
return result;
} else {
var G__21774 = result;
var G__21775 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21774,G__21775) : rf.call(null,G__21774,G__21775));
}
});
G__21778 = function(result,input){
switch(arguments.length){
case 0:
return G__21778__0.call(this);
case 1:
return G__21778__1.call(this,result);
case 2:
return G__21778__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21778.cljs$core$IFn$_invoke$arity$0 = G__21778__0;
G__21778.cljs$core$IFn$_invoke$arity$1 = G__21778__1;
G__21778.cljs$core$IFn$_invoke$arity$2 = G__21778__2;
return G__21778;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13512__auto___21779 = size;
var i_21780 = (0);
while(true){
if((i_21780 < n__13512__auto___21779)){
var x_21781 = (function (){var G__21776 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21780);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21776) : f.call(null,G__21776));
})();
if((x_21781 == null)){
} else {
cljs.core.chunk_append(b,x_21781);
}

var G__21782 = (i_21780 + (1));
i_21780 = G__21782;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21777 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21777) : f.call(null,G__21777));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__21783 = this$__$1;
return goog.getUid(G__21783);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__21784 = cljs.core.seq(self__.watches);
var chunk__21785 = null;
var count__21786 = (0);
var i__21787 = (0);
while(true){
if((i__21787 < count__21786)){
var vec__21788 = chunk__21785.cljs$core$IIndexed$_nth$arity$2(null,i__21787);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21788,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21788,(1),null);
var G__21789_21798 = key;
var G__21790_21799 = this$__$1;
var G__21791_21800 = oldval;
var G__21792_21801 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21789_21798,G__21790_21799,G__21791_21800,G__21792_21801) : f.call(null,G__21789_21798,G__21790_21799,G__21791_21800,G__21792_21801));

var G__21802 = seq__21784;
var G__21803 = chunk__21785;
var G__21804 = count__21786;
var G__21805 = (i__21787 + (1));
seq__21784 = G__21802;
chunk__21785 = G__21803;
count__21786 = G__21804;
i__21787 = G__21805;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21784);
if(temp__4126__auto__){
var seq__21784__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21784__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__21784__$1);
var G__21806 = cljs.core.chunk_rest(seq__21784__$1);
var G__21807 = c__13412__auto__;
var G__21808 = cljs.core.count(c__13412__auto__);
var G__21809 = (0);
seq__21784 = G__21806;
chunk__21785 = G__21807;
count__21786 = G__21808;
i__21787 = G__21809;
continue;
} else {
var vec__21793 = cljs.core.first(seq__21784__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21793,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21793,(1),null);
var G__21794_21810 = key;
var G__21795_21811 = this$__$1;
var G__21796_21812 = oldval;
var G__21797_21813 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21794_21810,G__21795_21811,G__21796_21812,G__21797_21813) : f.call(null,G__21794_21810,G__21795_21811,G__21796_21812,G__21797_21813));

var G__21814 = cljs.core.next(seq__21784__$1);
var G__21815 = null;
var G__21816 = (0);
var G__21817 = (0);
seq__21784 = G__21814;
chunk__21785 = G__21815;
count__21786 = G__21816;
i__21787 = G__21817;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__21821__delegate = function (x,p__21818){
var map__21820 = p__21818;
var map__21820__$1 = ((cljs.core.seq_QMARK_(map__21820))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21820):map__21820);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21820__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21820__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__21821 = function (x,var_args){
var p__21818 = null;
if (arguments.length > 1) {
var G__21822__i = 0, G__21822__a = new Array(arguments.length -  1);
while (G__21822__i < G__21822__a.length) {G__21822__a[G__21822__i] = arguments[G__21822__i + 1]; ++G__21822__i;}
  p__21818 = new cljs.core.IndexedSeq(G__21822__a,0);
} 
return G__21821__delegate.call(this,x,p__21818);};
G__21821.cljs$lang$maxFixedArity = 1;
G__21821.cljs$lang$applyTo = (function (arglist__21823){
var x = cljs.core.first(arglist__21823);
var p__21818 = cljs.core.rest(arglist__21823);
return G__21821__delegate(x,p__21818);
});
G__21821.cljs$core$IFn$_invoke$arity$variadic = G__21821__delegate;
return G__21821;
})()
;
atom = function(x,var_args){
var p__21818 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__21824 = null;
if (arguments.length > 1) {
var G__21825__i = 0, G__21825__a = new Array(arguments.length -  1);
while (G__21825__i < G__21825__a.length) {G__21825__a[G__21825__i] = arguments[G__21825__i + 1]; ++G__21825__i;}
G__21824 = new cljs.core.IndexedSeq(G__21825__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21824);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__21828 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__21828) : validate.call(null,G__21828));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__21829 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__21829) : cljs.core.pr_str.call(null,G__21829));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21836 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21836) : f.call(null,G__21836));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21837 = a.state;
var G__21838 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21837,G__21838) : f.call(null,G__21837,G__21838));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21839 = a.state;
var G__21840 = x;
var G__21841 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21839,G__21840,G__21841) : f.call(null,G__21839,G__21840,G__21841));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__21842__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__21842 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__21843__i = 0, G__21843__a = new Array(arguments.length -  4);
while (G__21843__i < G__21843__a.length) {G__21843__a[G__21843__i] = arguments[G__21843__i + 4]; ++G__21843__i;}
  more = new cljs.core.IndexedSeq(G__21843__a,0);
} 
return G__21842__delegate.call(this,a,f,x,y,more);};
G__21842.cljs$lang$maxFixedArity = 4;
G__21842.cljs$lang$applyTo = (function (arglist__21844){
var a = cljs.core.first(arglist__21844);
arglist__21844 = cljs.core.next(arglist__21844);
var f = cljs.core.first(arglist__21844);
arglist__21844 = cljs.core.next(arglist__21844);
var x = cljs.core.first(arglist__21844);
arglist__21844 = cljs.core.next(arglist__21844);
var y = cljs.core.first(arglist__21844);
var more = cljs.core.rest(arglist__21844);
return G__21842__delegate(a,f,x,y,more);
});
G__21842.cljs$core$IFn$_invoke$arity$variadic = G__21842__delegate;
return G__21842;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__21845 = null;
if (arguments.length > 4) {
var G__21846__i = 0, G__21846__a = new Array(arguments.length -  4);
while (G__21846__i < G__21846__a.length) {G__21846__a[G__21846__i] = arguments[G__21846__i + 4]; ++G__21846__i;}
G__21845 = new cljs.core.IndexedSeq(G__21846__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__21845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__21913 = null;
var G__21913__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21913__1 = (function (result){
var G__21880 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21880) : rf.call(null,G__21880));
});
var G__21913__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__21881 = i;
var G__21882 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21881,G__21882) : f.call(null,G__21881,G__21882));
})();
if((v == null)){
return result;
} else {
var G__21883 = result;
var G__21884 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21883,G__21884) : rf.call(null,G__21883,G__21884));
}
});
G__21913 = function(result,input){
switch(arguments.length){
case 0:
return G__21913__0.call(this);
case 1:
return G__21913__1.call(this,result);
case 2:
return G__21913__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21913.cljs$core$IFn$_invoke$arity$0 = G__21913__0;
G__21913.cljs$core$IFn$_invoke$arity$1 = G__21913__1;
G__21913.cljs$core$IFn$_invoke$arity$2 = G__21913__2;
return G__21913;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13512__auto___21914 = size;
var i_21915 = (0);
while(true){
if((i_21915 < n__13512__auto___21914)){
var x_21916 = (function (){var G__21909 = (idx + i_21915);
var G__21910 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21915);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21909,G__21910) : f.call(null,G__21909,G__21910));
})();
if((x_21916 == null)){
} else {
cljs.core.chunk_append(b,x_21916);
}

var G__21917 = (i_21915 + (1));
i_21915 = G__21917;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21911 = idx;
var G__21912 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21911,G__21912) : f.call(null,G__21911,G__21912));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__22131 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22131) : p.call(null,G__22131));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22133 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22133) : p.call(null,G__22133));
})();
if(cljs.core.truth_(and__12613__auto__)){
var G__22134 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22134) : p.call(null,G__22134));
} else {
return and__12613__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22136 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22136) : p.call(null,G__22136));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22138 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22138) : p.call(null,G__22138));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var G__22139 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22139) : p.call(null,G__22139));
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__22308__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__22308 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22309__i = 0, G__22309__a = new Array(arguments.length -  3);
while (G__22309__i < G__22309__a.length) {G__22309__a[G__22309__i] = arguments[G__22309__i + 3]; ++G__22309__i;}
  args = new cljs.core.IndexedSeq(G__22309__a,0);
} 
return G__22308__delegate.call(this,x,y,z,args);};
G__22308.cljs$lang$maxFixedArity = 3;
G__22308.cljs$lang$applyTo = (function (arglist__22310){
var x = cljs.core.first(arglist__22310);
arglist__22310 = cljs.core.next(arglist__22310);
var y = cljs.core.first(arglist__22310);
arglist__22310 = cljs.core.next(arglist__22310);
var z = cljs.core.first(arglist__22310);
var args = cljs.core.rest(arglist__22310);
return G__22308__delegate(x,y,z,args);
});
G__22308.cljs$core$IFn$_invoke$arity$variadic = G__22308__delegate;
return G__22308;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__22311 = null;
if (arguments.length > 3) {
var G__22312__i = 0, G__22312__a = new Array(arguments.length -  3);
while (G__22312__i < G__22312__a.length) {G__22312__a[G__22312__i] = arguments[G__22312__i + 3]; ++G__22312__i;}
G__22311 = new cljs.core.IndexedSeq(G__22312__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22171 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22171) : p1.call(null,G__22171));
})();
if(cljs.core.truth_(and__12613__auto__)){
var G__22172 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22172) : p2.call(null,G__22172));
} else {
return and__12613__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22174 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22174) : p1.call(null,G__22174));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22176 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22176) : p1.call(null,G__22176));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var and__12613__auto____$2 = (function (){var G__22178 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22178) : p2.call(null,G__22178));
})();
if(cljs.core.truth_(and__12613__auto____$2)){
var G__22179 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22179) : p2.call(null,G__22179));
} else {
return and__12613__auto____$2;
}
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22181 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22181) : p1.call(null,G__22181));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22183 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22183) : p1.call(null,G__22183));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var and__12613__auto____$2 = (function (){var G__22185 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22185) : p1.call(null,G__22185));
})();
if(cljs.core.truth_(and__12613__auto____$2)){
var and__12613__auto____$3 = (function (){var G__22187 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22187) : p2.call(null,G__22187));
})();
if(cljs.core.truth_(and__12613__auto____$3)){
var and__12613__auto____$4 = (function (){var G__22189 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22189) : p2.call(null,G__22189));
})();
if(cljs.core.truth_(and__12613__auto____$4)){
var G__22190 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22190) : p2.call(null,G__22190));
} else {
return and__12613__auto____$4;
}
} else {
return and__12613__auto____$3;
}
} else {
return and__12613__auto____$2;
}
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__22313__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21918_SHARP_){
var and__12613__auto__ = (function (){var G__22195 = p1__21918_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22195) : p1.call(null,G__22195));
})();
if(cljs.core.truth_(and__12613__auto__)){
var G__22196 = p1__21918_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22196) : p2.call(null,G__22196));
} else {
return and__12613__auto__;
}
}),args)));
};
var G__22313 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22314__i = 0, G__22314__a = new Array(arguments.length -  3);
while (G__22314__i < G__22314__a.length) {G__22314__a[G__22314__i] = arguments[G__22314__i + 3]; ++G__22314__i;}
  args = new cljs.core.IndexedSeq(G__22314__a,0);
} 
return G__22313__delegate.call(this,x,y,z,args);};
G__22313.cljs$lang$maxFixedArity = 3;
G__22313.cljs$lang$applyTo = (function (arglist__22315){
var x = cljs.core.first(arglist__22315);
arglist__22315 = cljs.core.next(arglist__22315);
var y = cljs.core.first(arglist__22315);
arglist__22315 = cljs.core.next(arglist__22315);
var z = cljs.core.first(arglist__22315);
var args = cljs.core.rest(arglist__22315);
return G__22313__delegate(x,y,z,args);
});
G__22313.cljs$core$IFn$_invoke$arity$variadic = G__22313__delegate;
return G__22313;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__22316 = null;
if (arguments.length > 3) {
var G__22317__i = 0, G__22317__a = new Array(arguments.length -  3);
while (G__22317__i < G__22317__a.length) {G__22317__a[G__22317__i] = arguments[G__22317__i + 3]; ++G__22317__i;}
G__22316 = new cljs.core.IndexedSeq(G__22317__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22242 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22242) : p1.call(null,G__22242));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22244 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22244) : p2.call(null,G__22244));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var G__22245 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22245) : p3.call(null,G__22245));
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22247 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22247) : p1.call(null,G__22247));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22249 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22249) : p2.call(null,G__22249));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var and__12613__auto____$2 = (function (){var G__22251 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22251) : p3.call(null,G__22251));
})();
if(cljs.core.truth_(and__12613__auto____$2)){
var and__12613__auto____$3 = (function (){var G__22253 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22253) : p1.call(null,G__22253));
})();
if(cljs.core.truth_(and__12613__auto____$3)){
var and__12613__auto____$4 = (function (){var G__22255 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22255) : p2.call(null,G__22255));
})();
if(cljs.core.truth_(and__12613__auto____$4)){
var G__22256 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22256) : p3.call(null,G__22256));
} else {
return and__12613__auto____$4;
}
} else {
return and__12613__auto____$3;
}
} else {
return and__12613__auto____$2;
}
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12613__auto__ = (function (){var G__22258 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22258) : p1.call(null,G__22258));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22260 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22260) : p2.call(null,G__22260));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var and__12613__auto____$2 = (function (){var G__22262 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22262) : p3.call(null,G__22262));
})();
if(cljs.core.truth_(and__12613__auto____$2)){
var and__12613__auto____$3 = (function (){var G__22264 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22264) : p1.call(null,G__22264));
})();
if(cljs.core.truth_(and__12613__auto____$3)){
var and__12613__auto____$4 = (function (){var G__22266 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22266) : p2.call(null,G__22266));
})();
if(cljs.core.truth_(and__12613__auto____$4)){
var and__12613__auto____$5 = (function (){var G__22268 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22268) : p3.call(null,G__22268));
})();
if(cljs.core.truth_(and__12613__auto____$5)){
var and__12613__auto____$6 = (function (){var G__22270 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22270) : p1.call(null,G__22270));
})();
if(cljs.core.truth_(and__12613__auto____$6)){
var and__12613__auto____$7 = (function (){var G__22272 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22272) : p2.call(null,G__22272));
})();
if(cljs.core.truth_(and__12613__auto____$7)){
var G__22273 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22273) : p3.call(null,G__22273));
} else {
return and__12613__auto____$7;
}
} else {
return and__12613__auto____$6;
}
} else {
return and__12613__auto____$5;
}
} else {
return and__12613__auto____$4;
}
} else {
return and__12613__auto____$3;
}
} else {
return and__12613__auto____$2;
}
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__22318__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21919_SHARP_){
var and__12613__auto__ = (function (){var G__22280 = p1__21919_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22280) : p1.call(null,G__22280));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22282 = p1__21919_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22282) : p2.call(null,G__22282));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var G__22283 = p1__21919_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22283) : p3.call(null,G__22283));
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
}),args)));
};
var G__22318 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22319__i = 0, G__22319__a = new Array(arguments.length -  3);
while (G__22319__i < G__22319__a.length) {G__22319__a[G__22319__i] = arguments[G__22319__i + 3]; ++G__22319__i;}
  args = new cljs.core.IndexedSeq(G__22319__a,0);
} 
return G__22318__delegate.call(this,x,y,z,args);};
G__22318.cljs$lang$maxFixedArity = 3;
G__22318.cljs$lang$applyTo = (function (arglist__22320){
var x = cljs.core.first(arglist__22320);
arglist__22320 = cljs.core.next(arglist__22320);
var y = cljs.core.first(arglist__22320);
arglist__22320 = cljs.core.next(arglist__22320);
var z = cljs.core.first(arglist__22320);
var args = cljs.core.rest(arglist__22320);
return G__22318__delegate(x,y,z,args);
});
G__22318.cljs$core$IFn$_invoke$arity$variadic = G__22318__delegate;
return G__22318;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__22321 = null;
if (arguments.length > 3) {
var G__22322__i = 0, G__22322__a = new Array(arguments.length -  3);
while (G__22322__i < G__22322__a.length) {G__22322__a[G__22322__i] = arguments[G__22322__i + 3]; ++G__22322__i;}
G__22321 = new cljs.core.IndexedSeq(G__22322__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__22323__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21920_SHARP_){
var G__22299 = x;
return (p1__21920_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21920_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22299) : p1__21920_SHARP_.call(null,G__22299));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21921_SHARP_){
var and__12613__auto__ = (function (){var G__22301 = x;
return (p1__21921_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21921_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22301) : p1__21921_SHARP_.call(null,G__22301));
})();
if(cljs.core.truth_(and__12613__auto__)){
var G__22302 = y;
return (p1__21921_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21921_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22302) : p1__21921_SHARP_.call(null,G__22302));
} else {
return and__12613__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21922_SHARP_){
var and__12613__auto__ = (function (){var G__22304 = x;
return (p1__21922_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21922_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22304) : p1__21922_SHARP_.call(null,G__22304));
})();
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__22306 = y;
return (p1__21922_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21922_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22306) : p1__21922_SHARP_.call(null,G__22306));
})();
if(cljs.core.truth_(and__12613__auto____$1)){
var G__22307 = z;
return (p1__21922_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21922_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22307) : p1__21922_SHARP_.call(null,G__22307));
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__22324__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21923_SHARP_){
return cljs.core.every_QMARK_(p1__21923_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__22324 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22325__i = 0, G__22325__a = new Array(arguments.length -  3);
while (G__22325__i < G__22325__a.length) {G__22325__a[G__22325__i] = arguments[G__22325__i + 3]; ++G__22325__i;}
  args = new cljs.core.IndexedSeq(G__22325__a,0);
} 
return G__22324__delegate.call(this,x,y,z,args);};
G__22324.cljs$lang$maxFixedArity = 3;
G__22324.cljs$lang$applyTo = (function (arglist__22326){
var x = cljs.core.first(arglist__22326);
arglist__22326 = cljs.core.next(arglist__22326);
var y = cljs.core.first(arglist__22326);
arglist__22326 = cljs.core.next(arglist__22326);
var z = cljs.core.first(arglist__22326);
var args = cljs.core.rest(arglist__22326);
return G__22324__delegate(x,y,z,args);
});
G__22324.cljs$core$IFn$_invoke$arity$variadic = G__22324__delegate;
return G__22324;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__22327 = null;
if (arguments.length > 3) {
var G__22328__i = 0, G__22328__a = new Array(arguments.length -  3);
while (G__22328__i < G__22328__a.length) {G__22328__a[G__22328__i] = arguments[G__22328__i + 3]; ++G__22328__i;}
G__22327 = new cljs.core.IndexedSeq(G__22328__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__22323 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__22329__i = 0, G__22329__a = new Array(arguments.length -  3);
while (G__22329__i < G__22329__a.length) {G__22329__a[G__22329__i] = arguments[G__22329__i + 3]; ++G__22329__i;}
  ps = new cljs.core.IndexedSeq(G__22329__a,0);
} 
return G__22323__delegate.call(this,p1,p2,p3,ps);};
G__22323.cljs$lang$maxFixedArity = 3;
G__22323.cljs$lang$applyTo = (function (arglist__22330){
var p1 = cljs.core.first(arglist__22330);
arglist__22330 = cljs.core.next(arglist__22330);
var p2 = cljs.core.first(arglist__22330);
arglist__22330 = cljs.core.next(arglist__22330);
var p3 = cljs.core.first(arglist__22330);
var ps = cljs.core.rest(arglist__22330);
return G__22323__delegate(p1,p2,p3,ps);
});
G__22323.cljs$core$IFn$_invoke$arity$variadic = G__22323__delegate;
return G__22323;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__22331 = null;
if (arguments.length > 3) {
var G__22332__i = 0, G__22332__a = new Array(arguments.length -  3);
while (G__22332__i < G__22332__a.length) {G__22332__a[G__22332__i] = arguments[G__22332__i + 3]; ++G__22332__i;}
G__22331 = new cljs.core.IndexedSeq(G__22332__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__22331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__22538 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22538) : p.call(null,G__22538));
});
var sp1__2 = (function (x,y){
var or__12625__auto__ = (function (){var G__22540 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22540) : p.call(null,G__22540));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var G__22541 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22541) : p.call(null,G__22541));
}
});
var sp1__3 = (function (x,y,z){
var or__12625__auto__ = (function (){var G__22543 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22543) : p.call(null,G__22543));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22545 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22545) : p.call(null,G__22545));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var G__22546 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22546) : p.call(null,G__22546));
}
}
});
var sp1__4 = (function() { 
var G__22707__delegate = function (x,y,z,args){
var or__12625__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__22707 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22708__i = 0, G__22708__a = new Array(arguments.length -  3);
while (G__22708__i < G__22708__a.length) {G__22708__a[G__22708__i] = arguments[G__22708__i + 3]; ++G__22708__i;}
  args = new cljs.core.IndexedSeq(G__22708__a,0);
} 
return G__22707__delegate.call(this,x,y,z,args);};
G__22707.cljs$lang$maxFixedArity = 3;
G__22707.cljs$lang$applyTo = (function (arglist__22709){
var x = cljs.core.first(arglist__22709);
arglist__22709 = cljs.core.next(arglist__22709);
var y = cljs.core.first(arglist__22709);
arglist__22709 = cljs.core.next(arglist__22709);
var z = cljs.core.first(arglist__22709);
var args = cljs.core.rest(arglist__22709);
return G__22707__delegate(x,y,z,args);
});
G__22707.cljs$core$IFn$_invoke$arity$variadic = G__22707__delegate;
return G__22707;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__22710 = null;
if (arguments.length > 3) {
var G__22711__i = 0, G__22711__a = new Array(arguments.length -  3);
while (G__22711__i < G__22711__a.length) {G__22711__a[G__22711__i] = arguments[G__22711__i + 3]; ++G__22711__i;}
G__22710 = new cljs.core.IndexedSeq(G__22711__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12625__auto__ = (function (){var G__22578 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22578) : p1.call(null,G__22578));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var G__22579 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22579) : p2.call(null,G__22579));
}
});
var sp2__2 = (function (x,y){
var or__12625__auto__ = (function (){var G__22581 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22581) : p1.call(null,G__22581));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22583 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22583) : p1.call(null,G__22583));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var or__12625__auto____$2 = (function (){var G__22585 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22585) : p2.call(null,G__22585));
})();
if(cljs.core.truth_(or__12625__auto____$2)){
return or__12625__auto____$2;
} else {
var G__22586 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22586) : p2.call(null,G__22586));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12625__auto__ = (function (){var G__22588 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22588) : p1.call(null,G__22588));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22590 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22590) : p1.call(null,G__22590));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var or__12625__auto____$2 = (function (){var G__22592 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22592) : p1.call(null,G__22592));
})();
if(cljs.core.truth_(or__12625__auto____$2)){
return or__12625__auto____$2;
} else {
var or__12625__auto____$3 = (function (){var G__22594 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22594) : p2.call(null,G__22594));
})();
if(cljs.core.truth_(or__12625__auto____$3)){
return or__12625__auto____$3;
} else {
var or__12625__auto____$4 = (function (){var G__22596 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22596) : p2.call(null,G__22596));
})();
if(cljs.core.truth_(or__12625__auto____$4)){
return or__12625__auto____$4;
} else {
var G__22597 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22597) : p2.call(null,G__22597));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__22712__delegate = function (x,y,z,args){
var or__12625__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.some(((function (or__12625__auto__){
return (function (p1__22333_SHARP_){
var or__12625__auto____$1 = (function (){var G__22599 = p1__22333_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22599) : p1.call(null,G__22599));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var G__22600 = p1__22333_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22600) : p2.call(null,G__22600));
}
});})(or__12625__auto__))
,args);
}
};
var G__22712 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22713__i = 0, G__22713__a = new Array(arguments.length -  3);
while (G__22713__i < G__22713__a.length) {G__22713__a[G__22713__i] = arguments[G__22713__i + 3]; ++G__22713__i;}
  args = new cljs.core.IndexedSeq(G__22713__a,0);
} 
return G__22712__delegate.call(this,x,y,z,args);};
G__22712.cljs$lang$maxFixedArity = 3;
G__22712.cljs$lang$applyTo = (function (arglist__22714){
var x = cljs.core.first(arglist__22714);
arglist__22714 = cljs.core.next(arglist__22714);
var y = cljs.core.first(arglist__22714);
arglist__22714 = cljs.core.next(arglist__22714);
var z = cljs.core.first(arglist__22714);
var args = cljs.core.rest(arglist__22714);
return G__22712__delegate(x,y,z,args);
});
G__22712.cljs$core$IFn$_invoke$arity$variadic = G__22712__delegate;
return G__22712;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__22715 = null;
if (arguments.length > 3) {
var G__22716__i = 0, G__22716__a = new Array(arguments.length -  3);
while (G__22716__i < G__22716__a.length) {G__22716__a[G__22716__i] = arguments[G__22716__i + 3]; ++G__22716__i;}
G__22715 = new cljs.core.IndexedSeq(G__22716__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12625__auto__ = (function (){var G__22646 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22646) : p1.call(null,G__22646));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22648 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22648) : p2.call(null,G__22648));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var G__22649 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22649) : p3.call(null,G__22649));
}
}
});
var sp3__2 = (function (x,y){
var or__12625__auto__ = (function (){var G__22651 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22651) : p1.call(null,G__22651));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22653 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22653) : p2.call(null,G__22653));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var or__12625__auto____$2 = (function (){var G__22655 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22655) : p3.call(null,G__22655));
})();
if(cljs.core.truth_(or__12625__auto____$2)){
return or__12625__auto____$2;
} else {
var or__12625__auto____$3 = (function (){var G__22657 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22657) : p1.call(null,G__22657));
})();
if(cljs.core.truth_(or__12625__auto____$3)){
return or__12625__auto____$3;
} else {
var or__12625__auto____$4 = (function (){var G__22659 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22659) : p2.call(null,G__22659));
})();
if(cljs.core.truth_(or__12625__auto____$4)){
return or__12625__auto____$4;
} else {
var G__22660 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22660) : p3.call(null,G__22660));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12625__auto__ = (function (){var G__22662 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22662) : p1.call(null,G__22662));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22664 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22664) : p2.call(null,G__22664));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var or__12625__auto____$2 = (function (){var G__22666 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22666) : p3.call(null,G__22666));
})();
if(cljs.core.truth_(or__12625__auto____$2)){
return or__12625__auto____$2;
} else {
var or__12625__auto____$3 = (function (){var G__22668 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22668) : p1.call(null,G__22668));
})();
if(cljs.core.truth_(or__12625__auto____$3)){
return or__12625__auto____$3;
} else {
var or__12625__auto____$4 = (function (){var G__22670 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22670) : p2.call(null,G__22670));
})();
if(cljs.core.truth_(or__12625__auto____$4)){
return or__12625__auto____$4;
} else {
var or__12625__auto____$5 = (function (){var G__22672 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22672) : p3.call(null,G__22672));
})();
if(cljs.core.truth_(or__12625__auto____$5)){
return or__12625__auto____$5;
} else {
var or__12625__auto____$6 = (function (){var G__22674 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22674) : p1.call(null,G__22674));
})();
if(cljs.core.truth_(or__12625__auto____$6)){
return or__12625__auto____$6;
} else {
var or__12625__auto____$7 = (function (){var G__22676 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22676) : p2.call(null,G__22676));
})();
if(cljs.core.truth_(or__12625__auto____$7)){
return or__12625__auto____$7;
} else {
var G__22677 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22677) : p3.call(null,G__22677));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__22717__delegate = function (x,y,z,args){
var or__12625__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.some(((function (or__12625__auto__){
return (function (p1__22334_SHARP_){
var or__12625__auto____$1 = (function (){var G__22679 = p1__22334_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22679) : p1.call(null,G__22679));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var or__12625__auto____$2 = (function (){var G__22681 = p1__22334_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22681) : p2.call(null,G__22681));
})();
if(cljs.core.truth_(or__12625__auto____$2)){
return or__12625__auto____$2;
} else {
var G__22682 = p1__22334_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22682) : p3.call(null,G__22682));
}
}
});})(or__12625__auto__))
,args);
}
};
var G__22717 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22718__i = 0, G__22718__a = new Array(arguments.length -  3);
while (G__22718__i < G__22718__a.length) {G__22718__a[G__22718__i] = arguments[G__22718__i + 3]; ++G__22718__i;}
  args = new cljs.core.IndexedSeq(G__22718__a,0);
} 
return G__22717__delegate.call(this,x,y,z,args);};
G__22717.cljs$lang$maxFixedArity = 3;
G__22717.cljs$lang$applyTo = (function (arglist__22719){
var x = cljs.core.first(arglist__22719);
arglist__22719 = cljs.core.next(arglist__22719);
var y = cljs.core.first(arglist__22719);
arglist__22719 = cljs.core.next(arglist__22719);
var z = cljs.core.first(arglist__22719);
var args = cljs.core.rest(arglist__22719);
return G__22717__delegate(x,y,z,args);
});
G__22717.cljs$core$IFn$_invoke$arity$variadic = G__22717__delegate;
return G__22717;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__22720 = null;
if (arguments.length > 3) {
var G__22721__i = 0, G__22721__a = new Array(arguments.length -  3);
while (G__22721__i < G__22721__a.length) {G__22721__a[G__22721__i] = arguments[G__22721__i + 3]; ++G__22721__i;}
G__22720 = new cljs.core.IndexedSeq(G__22721__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__22722__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__22335_SHARP_){
var G__22698 = x;
return (p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22698) : p1__22335_SHARP_.call(null,G__22698));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__22336_SHARP_){
var or__12625__auto__ = (function (){var G__22700 = x;
return (p1__22336_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22336_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22700) : p1__22336_SHARP_.call(null,G__22700));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var G__22701 = y;
return (p1__22336_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22336_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22701) : p1__22336_SHARP_.call(null,G__22701));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__22337_SHARP_){
var or__12625__auto__ = (function (){var G__22703 = x;
return (p1__22337_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22337_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22703) : p1__22337_SHARP_.call(null,G__22703));
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var G__22705 = y;
return (p1__22337_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22337_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22705) : p1__22337_SHARP_.call(null,G__22705));
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var G__22706 = z;
return (p1__22337_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22337_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22706) : p1__22337_SHARP_.call(null,G__22706));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__22723__delegate = function (x,y,z,args){
var or__12625__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.some(((function (or__12625__auto__,ps__$1){
return (function (p1__22338_SHARP_){
return cljs.core.some(p1__22338_SHARP_,args);
});})(or__12625__auto__,ps__$1))
,ps__$1);
}
};
var G__22723 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22724__i = 0, G__22724__a = new Array(arguments.length -  3);
while (G__22724__i < G__22724__a.length) {G__22724__a[G__22724__i] = arguments[G__22724__i + 3]; ++G__22724__i;}
  args = new cljs.core.IndexedSeq(G__22724__a,0);
} 
return G__22723__delegate.call(this,x,y,z,args);};
G__22723.cljs$lang$maxFixedArity = 3;
G__22723.cljs$lang$applyTo = (function (arglist__22725){
var x = cljs.core.first(arglist__22725);
arglist__22725 = cljs.core.next(arglist__22725);
var y = cljs.core.first(arglist__22725);
arglist__22725 = cljs.core.next(arglist__22725);
var z = cljs.core.first(arglist__22725);
var args = cljs.core.rest(arglist__22725);
return G__22723__delegate(x,y,z,args);
});
G__22723.cljs$core$IFn$_invoke$arity$variadic = G__22723__delegate;
return G__22723;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__22726 = null;
if (arguments.length > 3) {
var G__22727__i = 0, G__22727__a = new Array(arguments.length -  3);
while (G__22727__i < G__22727__a.length) {G__22727__a[G__22727__i] = arguments[G__22727__i + 3]; ++G__22727__i;}
G__22726 = new cljs.core.IndexedSeq(G__22727__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__22722 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__22728__i = 0, G__22728__a = new Array(arguments.length -  3);
while (G__22728__i < G__22728__a.length) {G__22728__a[G__22728__i] = arguments[G__22728__i + 3]; ++G__22728__i;}
  ps = new cljs.core.IndexedSeq(G__22728__a,0);
} 
return G__22722__delegate.call(this,p1,p2,p3,ps);};
G__22722.cljs$lang$maxFixedArity = 3;
G__22722.cljs$lang$applyTo = (function (arglist__22729){
var p1 = cljs.core.first(arglist__22729);
arglist__22729 = cljs.core.next(arglist__22729);
var p2 = cljs.core.first(arglist__22729);
arglist__22729 = cljs.core.next(arglist__22729);
var p3 = cljs.core.first(arglist__22729);
var ps = cljs.core.rest(arglist__22729);
return G__22722__delegate(p1,p2,p3,ps);
});
G__22722.cljs$core$IFn$_invoke$arity$variadic = G__22722__delegate;
return G__22722;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__22730 = null;
if (arguments.length > 3) {
var G__22731__i = 0, G__22731__a = new Array(arguments.length -  3);
while (G__22731__i < G__22731__a.length) {G__22731__a[G__22731__i] = arguments[G__22731__i + 3]; ++G__22731__i;}
G__22730 = new cljs.core.IndexedSeq(G__22731__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__22730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__22786 = null;
var G__22786__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22786__1 = (function (result){
var G__22772 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22772) : rf.call(null,G__22772));
});
var G__22786__2 = (function (result,input){
var G__22773 = result;
var G__22774 = (function (){var G__22775 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22775) : f.call(null,G__22775));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22773,G__22774) : rf.call(null,G__22773,G__22774));
});
var G__22786__3 = (function() { 
var G__22787__delegate = function (result,input,inputs){
var G__22776 = result;
var G__22777 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22776,G__22777) : rf.call(null,G__22776,G__22777));
};
var G__22787 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__22788__i = 0, G__22788__a = new Array(arguments.length -  2);
while (G__22788__i < G__22788__a.length) {G__22788__a[G__22788__i] = arguments[G__22788__i + 2]; ++G__22788__i;}
  inputs = new cljs.core.IndexedSeq(G__22788__a,0);
} 
return G__22787__delegate.call(this,result,input,inputs);};
G__22787.cljs$lang$maxFixedArity = 2;
G__22787.cljs$lang$applyTo = (function (arglist__22789){
var result = cljs.core.first(arglist__22789);
arglist__22789 = cljs.core.next(arglist__22789);
var input = cljs.core.first(arglist__22789);
var inputs = cljs.core.rest(arglist__22789);
return G__22787__delegate(result,input,inputs);
});
G__22787.cljs$core$IFn$_invoke$arity$variadic = G__22787__delegate;
return G__22787;
})()
;
G__22786 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__22786__0.call(this);
case 1:
return G__22786__1.call(this,result);
case 2:
return G__22786__2.call(this,result,input);
default:
var G__22790 = null;
if (arguments.length > 2) {
var G__22791__i = 0, G__22791__a = new Array(arguments.length -  2);
while (G__22791__i < G__22791__a.length) {G__22791__a[G__22791__i] = arguments[G__22791__i + 2]; ++G__22791__i;}
G__22790 = new cljs.core.IndexedSeq(G__22791__a,0);
}
return G__22786__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__22790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22786.cljs$lang$maxFixedArity = 2;
G__22786.cljs$lang$applyTo = G__22786__3.cljs$lang$applyTo;
G__22786.cljs$core$IFn$_invoke$arity$0 = G__22786__0;
G__22786.cljs$core$IFn$_invoke$arity$1 = G__22786__1;
G__22786.cljs$core$IFn$_invoke$arity$2 = G__22786__2;
G__22786.cljs$core$IFn$_invoke$arity$variadic = G__22786__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22786;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13512__auto___22792 = size;
var i_22793 = (0);
while(true){
if((i_22793 < n__13512__auto___22792)){
cljs.core.chunk_append(b,(function (){var G__22778 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22793);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22778) : f.call(null,G__22778));
})());

var G__22794 = (i_22793 + (1));
i_22793 = G__22794;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22779 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22779) : f.call(null,G__22779));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__22780 = cljs.core.first(s1);
var G__22781 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22780,G__22781) : f.call(null,G__22780,G__22781));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__22782 = cljs.core.first(s1);
var G__22783 = cljs.core.first(s2);
var G__22784 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22782,G__22783,G__22784) : f.call(null,G__22782,G__22783,G__22784));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__22795__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__22732_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__22732_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__22795 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22796__i = 0, G__22796__a = new Array(arguments.length -  4);
while (G__22796__i < G__22796__a.length) {G__22796__a[G__22796__i] = arguments[G__22796__i + 4]; ++G__22796__i;}
  colls = new cljs.core.IndexedSeq(G__22796__a,0);
} 
return G__22795__delegate.call(this,f,c1,c2,c3,colls);};
G__22795.cljs$lang$maxFixedArity = 4;
G__22795.cljs$lang$applyTo = (function (arglist__22797){
var f = cljs.core.first(arglist__22797);
arglist__22797 = cljs.core.next(arglist__22797);
var c1 = cljs.core.first(arglist__22797);
arglist__22797 = cljs.core.next(arglist__22797);
var c2 = cljs.core.first(arglist__22797);
arglist__22797 = cljs.core.next(arglist__22797);
var c3 = cljs.core.first(arglist__22797);
var colls = cljs.core.rest(arglist__22797);
return G__22795__delegate(f,c1,c2,c3,colls);
});
G__22795.cljs$core$IFn$_invoke$arity$variadic = G__22795__delegate;
return G__22795;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__22798 = null;
if (arguments.length > 4) {
var G__22799__i = 0, G__22799__a = new Array(arguments.length -  4);
while (G__22799__i < G__22799__a.length) {G__22799__a[G__22799__i] = arguments[G__22799__i + 4]; ++G__22799__i;}
G__22798 = new cljs.core.IndexedSeq(G__22799__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22808 = null;
var G__22808__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22808__1 = (function (result){
var G__22805 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22805) : rf.call(null,G__22805));
});
var G__22808__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__22806 = result;
var G__22807 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22806,G__22807) : rf.call(null,G__22806,G__22807));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__22808 = function(result,input){
switch(arguments.length){
case 0:
return G__22808__0.call(this);
case 1:
return G__22808__1.call(this,result);
case 2:
return G__22808__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22808.cljs$core$IFn$_invoke$arity$0 = G__22808__0;
G__22808.cljs$core$IFn$_invoke$arity$1 = G__22808__1;
G__22808.cljs$core$IFn$_invoke$arity$2 = G__22808__2;
return G__22808;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22815 = null;
var G__22815__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22815__1 = (function (result){
var G__22812 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22812) : rf.call(null,G__22812));
});
var G__22815__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__22813 = result;
var G__22814 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22813,G__22814) : rf.call(null,G__22813,G__22814));
}
});
G__22815 = function(result,input){
switch(arguments.length){
case 0:
return G__22815__0.call(this);
case 1:
return G__22815__1.call(this,result);
case 2:
return G__22815__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22815.cljs$core$IFn$_invoke$arity$0 = G__22815__0;
G__22815.cljs$core$IFn$_invoke$arity$1 = G__22815__1;
G__22815.cljs$core$IFn$_invoke$arity$2 = G__22815__2;
return G__22815;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__22816 = (n__$1 - (1));
var G__22817 = cljs.core.rest(s);
n__$1 = G__22816;
coll__$1 = G__22817;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__22820 = cljs.core.next(s);
var G__22821 = cljs.core.next(lead);
s = G__22820;
lead = G__22821;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__22834 = null;
var G__22834__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22834__1 = (function (result){
var G__22828 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22828) : rf.call(null,G__22828));
});
var G__22834__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12613__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12613__auto__)){
var G__22829 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22829) : pred.call(null,G__22829));
} else {
return and__12613__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__22830 = result;
var G__22831 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22830,G__22831) : rf.call(null,G__22830,G__22831));
}
});
G__22834 = function(result,input){
switch(arguments.length){
case 0:
return G__22834__0.call(this);
case 1:
return G__22834__1.call(this,result);
case 2:
return G__22834__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22834.cljs$core$IFn$_invoke$arity$0 = G__22834__0;
G__22834.cljs$core$IFn$_invoke$arity$1 = G__22834__1;
G__22834.cljs$core$IFn$_invoke$arity$2 = G__22834__2;
return G__22834;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12613__auto__ = s;
if(and__12613__auto__){
var G__22833 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__22833) : pred__$1.call(null,G__22833));
} else {
return and__12613__auto__;
}
})())){
var G__22835 = pred__$1;
var G__22836 = cljs.core.rest(s);
pred__$1 = G__22835;
coll__$1 = G__22836;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__22845 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22845) : f.call(null,G__22845));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__22848__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__22848 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22849__i = 0, G__22849__a = new Array(arguments.length -  2);
while (G__22849__i < G__22849__a.length) {G__22849__a[G__22849__i] = arguments[G__22849__i + 2]; ++G__22849__i;}
  colls = new cljs.core.IndexedSeq(G__22849__a,0);
} 
return G__22848__delegate.call(this,c1,c2,colls);};
G__22848.cljs$lang$maxFixedArity = 2;
G__22848.cljs$lang$applyTo = (function (arglist__22850){
var c1 = cljs.core.first(arglist__22850);
arglist__22850 = cljs.core.next(arglist__22850);
var c2 = cljs.core.first(arglist__22850);
var colls = cljs.core.rest(arglist__22850);
return G__22848__delegate(c1,c2,colls);
});
G__22848.cljs$core$IFn$_invoke$arity$variadic = G__22848__delegate;
return G__22848;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__22851 = null;
if (arguments.length > 2) {
var G__22852__i = 0, G__22852__a = new Array(arguments.length -  2);
while (G__22852__i < G__22852__a.length) {G__22852__a[G__22852__i] = arguments[G__22852__i + 2]; ++G__22852__i;}
G__22851 = new cljs.core.IndexedSeq(G__22852__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__22851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__22867 = null;
var G__22867__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22867__1 = (function (result){
var G__22860 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22860) : rf.call(null,G__22860));
});
var G__22867__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__22861 = result;
var G__22862 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22861,G__22862) : rf.call(null,G__22861,G__22862));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__22863 = sepr;
var G__22864 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22863,G__22864) : rf.call(null,G__22863,G__22864));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__22865 = result;
var G__22866 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22865,G__22866) : rf.call(null,G__22865,G__22866));
}
});
G__22867 = function(result,input){
switch(arguments.length){
case 0:
return G__22867__0.call(this);
case 1:
return G__22867__1.call(this,result);
case 2:
return G__22867__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22867.cljs$core$IFn$_invoke$arity$0 = G__22867__0;
G__22867.cljs$core$IFn$_invoke$arity$1 = G__22867__1;
G__22867.cljs$core$IFn$_invoke$arity$2 = G__22867__2;
return G__22867;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__22876__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__22876 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__22877__i = 0, G__22877__a = new Array(arguments.length -  1);
while (G__22877__i < G__22877__a.length) {G__22877__a[G__22877__i] = arguments[G__22877__i + 1]; ++G__22877__i;}
  colls = new cljs.core.IndexedSeq(G__22877__a,0);
} 
return G__22876__delegate.call(this,f,colls);};
G__22876.cljs$lang$maxFixedArity = 1;
G__22876.cljs$lang$applyTo = (function (arglist__22878){
var f = cljs.core.first(arglist__22878);
var colls = cljs.core.rest(arglist__22878);
return G__22876__delegate(f,colls);
});
G__22876.cljs$core$IFn$_invoke$arity$variadic = G__22876__delegate;
return G__22876;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__22879 = null;
if (arguments.length > 1) {
var G__22880__i = 0, G__22880__a = new Array(arguments.length -  1);
while (G__22880__i < G__22880__a.length) {G__22880__a[G__22880__i] = arguments[G__22880__i + 1]; ++G__22880__i;}
G__22879 = new cljs.core.IndexedSeq(G__22880__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__22899 = null;
var G__22899__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22899__1 = (function (result){
var G__22893 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22893) : rf.call(null,G__22893));
});
var G__22899__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22894 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22894) : pred.call(null,G__22894));
})())){
var G__22895 = result;
var G__22896 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22895,G__22896) : rf.call(null,G__22895,G__22896));
} else {
return result;
}
});
G__22899 = function(result,input){
switch(arguments.length){
case 0:
return G__22899__0.call(this);
case 1:
return G__22899__1.call(this,result);
case 2:
return G__22899__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22899.cljs$core$IFn$_invoke$arity$0 = G__22899__0;
G__22899.cljs$core$IFn$_invoke$arity$1 = G__22899__1;
G__22899.cljs$core$IFn$_invoke$arity$2 = G__22899__2;
return G__22899;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13512__auto___22900 = size;
var i_22901 = (0);
while(true){
if((i_22901 < n__13512__auto___22900)){
if(cljs.core.truth_((function (){var G__22897 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22901);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22897) : pred.call(null,G__22897));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22901));
} else {
}

var G__22902 = (i_22901 + (1));
i_22901 = G__22902;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__22898 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22898) : pred.call(null,G__22898));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__22909 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__22909) : branch_QMARK_.call(null,G__22909));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__22910 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__22910) : children.call(null,G__22910));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__22911_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__22911_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__22914 = to;
if(G__22914){
var bit__13299__auto__ = (G__22914.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13299__auto__) || (G__22914.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__22915 = to;
if(G__22915){
var bit__13299__auto__ = (G__22915.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13299__auto__) || (G__22915.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__22917 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22917) : f.call(null,G__22917));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__22918__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__22918 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22919__i = 0, G__22919__a = new Array(arguments.length -  4);
while (G__22919__i < G__22919__a.length) {G__22919__a[G__22919__i] = arguments[G__22919__i + 4]; ++G__22919__i;}
  colls = new cljs.core.IndexedSeq(G__22919__a,0);
} 
return G__22918__delegate.call(this,f,c1,c2,c3,colls);};
G__22918.cljs$lang$maxFixedArity = 4;
G__22918.cljs$lang$applyTo = (function (arglist__22920){
var f = cljs.core.first(arglist__22920);
arglist__22920 = cljs.core.next(arglist__22920);
var c1 = cljs.core.first(arglist__22920);
arglist__22920 = cljs.core.next(arglist__22920);
var c2 = cljs.core.first(arglist__22920);
arglist__22920 = cljs.core.next(arglist__22920);
var c3 = cljs.core.first(arglist__22920);
var colls = cljs.core.rest(arglist__22920);
return G__22918__delegate(f,c1,c2,c3,colls);
});
G__22918.cljs$core$IFn$_invoke$arity$variadic = G__22918__delegate;
return G__22918;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__22921 = null;
if (arguments.length > 4) {
var G__22922__i = 0, G__22922__a = new Array(arguments.length -  4);
while (G__22922__i < G__22922__a.length) {G__22922__a[G__22922__i] = arguments[G__22922__i + 4]; ++G__22922__i;}
G__22921 = new cljs.core.IndexedSeq(G__22922__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__22924 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22924) : pred.call(null,G__22924));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__22939 = m__$1;
if(G__22939){
var bit__13306__auto__ = (G__22939.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13306__auto__) || (G__22939.cljs$core$ILookup$)){
return true;
} else {
if((!G__22939.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22939);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22939);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__22940 = sentinel;
var G__22941 = m__$2;
var G__22942 = cljs.core.next(ks__$1);
sentinel = G__22940;
m__$1 = G__22941;
ks__$1 = G__22942;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__22943,v){
var vec__22948 = p__22943;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22948,(0),null);
var ks = cljs.core.nthnext(vec__22948,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__22949,f){
var vec__22987 = p__22949;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22987,(0),null);
var ks = cljs.core.nthnext(vec__22987,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22988 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22988) : f.call(null,G__22988));
})());
}
});
var update_in__4 = (function (m,p__22950,f,a){
var vec__22989 = p__22950;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22989,(0),null);
var ks = cljs.core.nthnext(vec__22989,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22990 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22991 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22990,G__22991) : f.call(null,G__22990,G__22991));
})());
}
});
var update_in__5 = (function (m,p__22951,f,a,b){
var vec__22992 = p__22951;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22992,(0),null);
var ks = cljs.core.nthnext(vec__22992,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22993 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22994 = a;
var G__22995 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22993,G__22994,G__22995) : f.call(null,G__22993,G__22994,G__22995));
})());
}
});
var update_in__6 = (function (m,p__22952,f,a,b,c){
var vec__22996 = p__22952;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22996,(0),null);
var ks = cljs.core.nthnext(vec__22996,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22997 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22998 = a;
var G__22999 = b;
var G__23000 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22997,G__22998,G__22999,G__23000) : f.call(null,G__22997,G__22998,G__22999,G__23000));
})());
}
});
var update_in__7 = (function() { 
var G__23002__delegate = function (m,p__22953,f,a,b,c,args){
var vec__23001 = p__22953;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23001,(0),null);
var ks = cljs.core.nthnext(vec__23001,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__23002 = function (m,p__22953,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__23003__i = 0, G__23003__a = new Array(arguments.length -  6);
while (G__23003__i < G__23003__a.length) {G__23003__a[G__23003__i] = arguments[G__23003__i + 6]; ++G__23003__i;}
  args = new cljs.core.IndexedSeq(G__23003__a,0);
} 
return G__23002__delegate.call(this,m,p__22953,f,a,b,c,args);};
G__23002.cljs$lang$maxFixedArity = 6;
G__23002.cljs$lang$applyTo = (function (arglist__23004){
var m = cljs.core.first(arglist__23004);
arglist__23004 = cljs.core.next(arglist__23004);
var p__22953 = cljs.core.first(arglist__23004);
arglist__23004 = cljs.core.next(arglist__23004);
var f = cljs.core.first(arglist__23004);
arglist__23004 = cljs.core.next(arglist__23004);
var a = cljs.core.first(arglist__23004);
arglist__23004 = cljs.core.next(arglist__23004);
var b = cljs.core.first(arglist__23004);
arglist__23004 = cljs.core.next(arglist__23004);
var c = cljs.core.first(arglist__23004);
var args = cljs.core.rest(arglist__23004);
return G__23002__delegate(m,p__22953,f,a,b,c,args);
});
G__23002.cljs$core$IFn$_invoke$arity$variadic = G__23002__delegate;
return G__23002;
})()
;
update_in = function(m,p__22953,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__22953,f);
case 4:
return update_in__4.call(this,m,p__22953,f,a);
case 5:
return update_in__5.call(this,m,p__22953,f,a,b);
case 6:
return update_in__6.call(this,m,p__22953,f,a,b,c);
default:
var G__23005 = null;
if (arguments.length > 6) {
var G__23006__i = 0, G__23006__a = new Array(arguments.length -  6);
while (G__23006__i < G__23006__a.length) {G__23006__a[G__23006__i] = arguments[G__23006__i + 6]; ++G__23006__i;}
G__23005 = new cljs.core.IndexedSeq(G__23006__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__22953,f,a,b,c, G__23005);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23017 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23017) : f.call(null,G__23017));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23018 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23019 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23018,G__23019) : f.call(null,G__23018,G__23019));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23020 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23021 = x;
var G__23022 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23020,G__23021,G__23022) : f.call(null,G__23020,G__23021,G__23022));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23023 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23024 = x;
var G__23025 = y;
var G__23026 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23023,G__23024,G__23025,G__23026) : f.call(null,G__23023,G__23024,G__23025,G__23026));
})());
});
var update__7 = (function() { 
var G__23027__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__23027 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__23028__i = 0, G__23028__a = new Array(arguments.length -  6);
while (G__23028__i < G__23028__a.length) {G__23028__a[G__23028__i] = arguments[G__23028__i + 6]; ++G__23028__i;}
  more = new cljs.core.IndexedSeq(G__23028__a,0);
} 
return G__23027__delegate.call(this,m,k,f,x,y,z,more);};
G__23027.cljs$lang$maxFixedArity = 6;
G__23027.cljs$lang$applyTo = (function (arglist__23029){
var m = cljs.core.first(arglist__23029);
arglist__23029 = cljs.core.next(arglist__23029);
var k = cljs.core.first(arglist__23029);
arglist__23029 = cljs.core.next(arglist__23029);
var f = cljs.core.first(arglist__23029);
arglist__23029 = cljs.core.next(arglist__23029);
var x = cljs.core.first(arglist__23029);
arglist__23029 = cljs.core.next(arglist__23029);
var y = cljs.core.first(arglist__23029);
arglist__23029 = cljs.core.next(arglist__23029);
var z = cljs.core.first(arglist__23029);
var more = cljs.core.rest(arglist__23029);
return G__23027__delegate(m,k,f,x,y,z,more);
});
G__23027.cljs$core$IFn$_invoke$arity$variadic = G__23027__delegate;
return G__23027;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__23030 = null;
if (arguments.length > 6) {
var G__23031__i = 0, G__23031__a = new Array(arguments.length -  6);
while (G__23031__i < G__23031__a.length) {G__23031__a[G__23031__i] = arguments[G__23031__i + 6]; ++G__23031__i;}
G__23030 = new cljs.core.IndexedSeq(G__23031__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__23030);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__23032 = (ll - (5));
var G__23033 = r;
ll = G__23032;
ret = G__23033;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23038 = cljs.core.pv_aget(node,(0));
var G__23039 = (level - (5));
node = G__23038;
level = G__23039;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23040 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__23041 = (level - (5));
node = G__23040;
level = G__23041;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23051 = init__$2;
var G__23052 = (j + i);
var G__23053 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23051,G__23052,G__23053) : f.call(null,G__23051,G__23052,G__23053));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23064 = (j + (1));
var G__23065 = init__$3;
j = G__23064;
init__$2 = G__23065;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23054 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23054) : cljs.core.deref.call(null,G__23054));
} else {
var G__23066 = (i + len);
var G__23067 = init__$2;
i = G__23066;
init__$1 = G__23067;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__23055 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__23055) : cljs.core.tv_editable_root.call(null,G__23055));
})(),(function (){var G__23056 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__23056) : cljs.core.tv_editable_tail.call(null,G__23056));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23057 = init__$2;
var G__23058 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23057,G__23058) : f.call(null,G__23057,G__23058));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23068 = (j + (1));
var G__23069 = init__$3;
j = G__23068;
init__$2 = G__23069;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23059 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23059) : cljs.core.deref.call(null,G__23059));
} else {
var G__23070 = (i + len);
var G__23071 = init__$2;
i = G__23070;
init__$1 = G__23071;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__23060 = coll__$1;
var G__23061 = cljs.core.first_array_for_longvec(coll__$1);
var G__23062 = (0);
var G__23063 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23060,G__23061,G__23062,G__23063) : cljs.core.chunked_seq.call(null,G__23060,G__23061,G__23062,G__23063));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13512__auto___23072 = len;
var i_23073 = (0);
while(true){
if((i_23073 < n__13512__auto___23072)){
(new_tail[i_23073] = (self__.tail[i_23073]));

var G__23074 = (i_23073 + (1));
i_23073 = G__23074;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__23075 = null;
var G__23075__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23075__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23075 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23075__2.call(this,self__,k);
case 3:
return G__23075__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23075.cljs$core$IFn$_invoke$arity$2 = G__23075__2;
G__23075.cljs$core$IFn$_invoke$arity$3 = G__23075__3;
return G__23075;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args23050){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23050)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__23076 = (i + (1));
var G__23077 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__23076;
out = G__23077;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23078__i = 0, G__23078__a = new Array(arguments.length -  0);
while (G__23078__i < G__23078__a.length) {G__23078__a[G__23078__i] = arguments[G__23078__i + 0]; ++G__23078__i;}
  args = new cljs.core.IndexedSeq(G__23078__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__23079){
var args = cljs.core.seq(arglist__23079);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23080 = self__.vec;
var G__23081 = self__.node;
var G__23082 = self__.i;
var G__23083 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23080,G__23081,G__23082,G__23083) : cljs.core.chunked_seq.call(null,G__23080,G__23081,G__23082,G__23083));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__23084 = self__.vec;
var G__23085 = (self__.i + self__.off);
var G__23086 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23084,G__23085,G__23086) : cljs.core.subvec.call(null,G__23084,G__23085,G__23086));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__23087 = self__.vec;
var G__23088 = (self__.i + self__.off);
var G__23089 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23087,G__23088,G__23089) : cljs.core.subvec.call(null,G__23087,G__23088,G__23089));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23090 = self__.vec;
var G__23091 = self__.node;
var G__23092 = self__.i;
var G__23093 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23090,G__23091,G__23092,G__23093) : cljs.core.chunked_seq.call(null,G__23090,G__23091,G__23092,G__23093));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23094 = self__.vec;
var G__23095 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23096 = end;
var G__23097 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23094,G__23095,G__23096,G__23097) : cljs.core.chunked_seq.call(null,G__23094,G__23095,G__23096,G__23097));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__23098 = self__.vec;
var G__23099 = self__.node;
var G__23100 = self__.i;
var G__23101 = self__.off;
var G__23102 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__23098,G__23099,G__23100,G__23101,G__23102) : cljs.core.chunked_seq.call(null,G__23098,G__23099,G__23100,G__23101,G__23102));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23103 = self__.vec;
var G__23104 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23105 = end;
var G__23106 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23103,G__23104,G__23105,G__23106) : cljs.core.chunked_seq.call(null,G__23103,G__23104,G__23105,G__23106));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__23108 = self__.meta;
var G__23109 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__23110 = self__.start;
var G__23111 = (function (){var x__12942__auto__ = self__.end;
var y__12943__auto__ = (v_pos + (1));
return ((x__12942__auto__ > y__12943__auto__) ? x__12942__auto__ : y__12943__auto__);
})();
var G__23112 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23108,G__23109,G__23110,G__23111,G__23112) : cljs.core.build_subvec.call(null,G__23108,G__23109,G__23110,G__23111,G__23112));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__23113 = self__.meta;
var G__23114 = self__.v;
var G__23115 = self__.start;
var G__23116 = (self__.end - (1));
var G__23117 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23113,G__23114,G__23115,G__23116,G__23117) : cljs.core.build_subvec.call(null,G__23113,G__23114,G__23115,G__23116,G__23117));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__23119 = meta__$1;
var G__23120 = self__.v;
var G__23121 = self__.start;
var G__23122 = self__.end;
var G__23123 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23119,G__23120,G__23121,G__23122,G__23123) : cljs.core.build_subvec.call(null,G__23119,G__23120,G__23121,G__23122,G__23123));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23124 = self__.meta;
var G__23125 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__23126 = self__.start;
var G__23127 = (self__.end + (1));
var G__23128 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23124,G__23125,G__23126,G__23127,G__23128) : cljs.core.build_subvec.call(null,G__23124,G__23125,G__23126,G__23127,G__23128));
});

cljs.core.Subvec.prototype.call = (function() {
var G__23129 = null;
var G__23129__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23129__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23129 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23129__2.call(this,self__,k);
case 3:
return G__23129__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23129.cljs$core$IFn$_invoke$arity$2 = G__23129__2;
G__23129.cljs$core$IFn$_invoke$arity$3 = G__23129__3;
return G__23129;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args23107){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23107)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__23130 = meta;
var G__23131 = v.v;
var G__23132 = (v.start + start);
var G__23133 = (v.start + end);
var G__23134 = __hash;
meta = G__23130;
v = G__23131;
start = G__23132;
end = G__23133;
__hash = G__23134;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj23141 = {};
return obj23141;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__23149 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__23150 = (level - (5));
node = G__23149;
level = G__23150;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__23154 = null;
var G__23154__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23154__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23154 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23154__2.call(this,self__,k);
case 3:
return G__23154__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23154.cljs$core$IFn$_invoke$arity$2 = G__23154__2;
G__23154.cljs$core$IFn$_invoke$arity$3 = G__23154__3;
return G__23154;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args23151){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23151)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12625__auto__ = self__.front;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12625__auto__ = self__.rear;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__23155 = (i + incr);
i = G__23155;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__23156 = (i + (1));
var G__23157 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__23156;
out = G__23157;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj23161 = {};
return obj23161;
})();
var l = ks.length;
var i_23162 = (0);
while(true){
if((i_23162 < l)){
var k_23163 = (ks[i_23162]);
(new_obj[k_23163] = (obj[k_23163]));

var G__23164 = (i_23162 + (1));
i_23162 = G__23164;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12613__auto__ = (function (){var G__23168 = k;
return goog.isString(G__23168);
})();
if(cljs.core.truth_(and__12613__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12613__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__23169 = init__$1;
var G__23170 = k;
var G__23171 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23169,G__23170,G__23171) : f.call(null,G__23169,G__23170,G__23171));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23172 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23172) : cljs.core.deref.call(null,G__23172));
} else {
var G__23178 = cljs.core.rest(keys__$1);
var G__23179 = init__$2;
keys__$1 = G__23178;
init__$1 = G__23179;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12613__auto__ = (function (){var G__23174 = k;
return goog.isString(G__23174);
})();
if(cljs.core.truth_(and__12613__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12613__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__23175 = k;
return goog.isString(G__23175);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12613__auto__ = (function (){var G__23177 = k;
return goog.isString(G__23177);
})();
if(cljs.core.truth_(and__12613__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12613__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__23165_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__23165_SHARP_,(self__.strobj[p1__23165_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__23180 = null;
var G__23180__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23180__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23180 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23180__2.call(this,self__,k);
case 3:
return G__23180__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23180.cljs$core$IFn$_invoke$arity$2 = G__23180__2;
G__23180.cljs$core$IFn$_invoke$arity$3 = G__23180__3;
return G__23180;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args23166){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23166)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj23182 = {};
return obj23182;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__23183 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23183,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23183,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__23184 = (i + (2));
i = G__23184;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__23185 = (i + (2));
i = G__23185;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__23186 = (i + (2));
i = G__23186;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__23187 = (i + (2));
i = G__23187;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__23188 = (i + (2));
i = G__23188;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12625__auto__ = (function (){var G__23192 = k;
return goog.isString(G__23192);
})();
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_23193 = (0);
while(true){
if((i_23193 < l)){
(narr[i_23193] = (arr[i_23193]));

var G__23194 = (i_23193 + (1));
i_23193 = G__23194;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23196 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23196) : cljs.core.keys.call(null,G__23196));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23197 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23197) : cljs.core.vals.call(null,G__23197));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23198 = cljs.core.seq(coll);
var chunk__23199 = null;
var count__23200 = (0);
var i__23201 = (0);
while(true){
if((i__23201 < count__23200)){
var vec__23202 = chunk__23199.cljs$core$IIndexed$_nth$arity$2(null,i__23201);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23202,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23202,(1),null);
var G__23203_23216 = v;
var G__23204_23217 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23203_23216,G__23204_23217) : f.call(null,G__23203_23216,G__23204_23217));

var G__23218 = seq__23198;
var G__23219 = chunk__23199;
var G__23220 = count__23200;
var G__23221 = (i__23201 + (1));
seq__23198 = G__23218;
chunk__23199 = G__23219;
count__23200 = G__23220;
i__23201 = G__23221;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23198);
if(temp__4126__auto__){
var seq__23198__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23198__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23198__$1);
var G__23222 = cljs.core.chunk_rest(seq__23198__$1);
var G__23223 = c__13412__auto__;
var G__23224 = cljs.core.count(c__13412__auto__);
var G__23225 = (0);
seq__23198 = G__23222;
chunk__23199 = G__23223;
count__23200 = G__23224;
i__23201 = G__23225;
continue;
} else {
var vec__23205 = cljs.core.first(seq__23198__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23205,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23205,(1),null);
var G__23206_23226 = v;
var G__23207_23227 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23206_23226,G__23207_23227) : f.call(null,G__23206_23226,G__23207_23227));

var G__23228 = cljs.core.next(seq__23198__$1);
var G__23229 = null;
var G__23230 = (0);
var G__23231 = (0);
seq__23198 = G__23228;
chunk__23199 = G__23229;
count__23200 = G__23230;
i__23201 = G__23231;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__23208 = init__$1;
var G__23209 = (self__.arr[i]);
var G__23210 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23208,G__23209,G__23210) : f.call(null,G__23208,G__23209,G__23210));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23211 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23211) : cljs.core.deref.call(null,G__23211));
} else {
var G__23232 = (i + (2));
var G__23233 = init__$2;
i = G__23232;
init__$1 = G__23233;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__23212 = other;
if(G__23212){
var bit__13299__auto__ = (G__23212.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13299__auto__) || (G__23212.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__23234 = (i + (2));
i = G__23234;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj23214 = {};
return obj23214;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__23235 = (s + (2));
var G__23236 = d;
s = G__23235;
d = G__23236;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__23237 = (s + (2));
var G__23238 = (d + (2));
s = G__23237;
d = G__23238;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__23215 = cljs.core.aclone(self__.arr);
(G__23215[(idx + (1))] = v);

return G__23215;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23239 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23240 = cljs.core.next(es);
ret = G__23239;
es = G__23240;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__23241 = null;
var G__23241__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23241__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23241 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23241__2.call(this,self__,k);
case 3:
return G__23241__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23241.cljs$core$IFn$_invoke$arity$2 = G__23241__2;
G__23241.cljs$core$IFn$_invoke$arity$3 = G__23241__3;
return G__23241;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args23195){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23195)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23242 = (i + (2));
var G__23243 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23242;
ret = G__23243;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__23244_23252 = self__.arr;
G__23244_23252.pop();

G__23244_23252.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__23245 = self__.len;
var G__23246 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__23245,G__23246) : cljs.core.array__GT_transient_hash_map.call(null,G__23245,G__23246));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__23247 = o;
if(G__23247){
var bit__13306__auto__ = (G__23247.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13306__auto__) || (G__23247.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23247.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23247);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23247);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__23248 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23248) : cljs.core.key.call(null,G__23248));
})(),(function (){var G__23249 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23249) : cljs.core.val.call(null,G__23249));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23253 = cljs.core.next(es);
var G__23254 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__23250 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23250) : cljs.core.key.call(null,G__23250));
})(),(function (){var G__23251 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23251) : cljs.core.val.call(null,G__23251));
})());
es = G__23253;
tcoll__$2 = G__23254;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__23255 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__23256 = (i + (2));
out = G__23255;
i = G__23256;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__23259 = cljs.core.aclone(arr);
(G__23259[i] = a);

return G__23259;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__23260 = cljs.core.aclone(arr);
(G__23260[i] = a);

(G__23260[j] = b);

return G__23260;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__23265 = init__$1;
var G__23266 = k;
var G__23267 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23265,G__23266,G__23267) : f.call(null,G__23265,G__23266,G__23267));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23268 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23268) : cljs.core.deref.call(null,G__23268));
} else {
var G__23269 = (i + (2));
var G__23270 = init__$2;
i = G__23269;
init__$1 = G__23270;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23271 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__23271) : cljs.core.create_inode_seq.call(null,G__23271));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_23285 = (0);
var j_23286 = (0);
while(true){
if((i_23285 < (32))){
if((((self__.bitmap >>> i_23285) & (1)) === (0))){
var G__23287 = (i_23285 + (1));
var G__23288 = j_23286;
i_23285 = G__23287;
j_23286 = G__23288;
continue;
} else {
(nodes[i_23285] = ((!(((self__.arr[j_23286]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_23286])),(self__.arr[j_23286]),(self__.arr[(j_23286 + (1))]),added_leaf_QMARK_):(self__.arr[(j_23286 + (1))])));

var G__23289 = (i_23285 + (1));
var G__23290 = (j_23286 + (2));
i_23285 = G__23289;
j_23286 = G__23290;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__23272 = edit__$1;
var G__23273 = (shift + (5));
var G__23274 = key_or_nil;
var G__23275 = val_or_node;
var G__23276 = hash;
var G__23277 = key;
var G__23278 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278) : cljs.core.create_node.call(null,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_23291 = (0);
var j_23292 = (0);
while(true){
if((i_23291 < (32))){
if((((self__.bitmap >>> i_23291) & (1)) === (0))){
var G__23293 = (i_23291 + (1));
var G__23294 = j_23292;
i_23291 = G__23293;
j_23292 = G__23294;
continue;
} else {
(nodes[i_23291] = ((!(((self__.arr[j_23292]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_23292])),(self__.arr[j_23292]),(self__.arr[(j_23292 + (1))]),added_leaf_QMARK_):(self__.arr[(j_23292 + (1))])));

var G__23295 = (i_23291 + (1));
var G__23296 = (j_23292 + (2));
i_23291 = G__23295;
j_23292 = G__23296;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__23279 = (shift + (5));
var G__23280 = key_or_nil;
var G__23281 = val_or_node;
var G__23282 = hash;
var G__23283 = key;
var G__23284 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__23279,G__23280,G__23281,G__23282,G__23283,G__23284) : cljs.core.create_node.call(null,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__23297 = (i + (1));
var G__23298 = (j + (2));
var G__23299 = (bitmap | ((1) << i));
i = G__23297;
j = G__23298;
bitmap = G__23299;
continue;
} else {
var G__23300 = (i + (1));
var G__23301 = j;
var G__23302 = bitmap;
i = G__23300;
j = G__23301;
bitmap = G__23302;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23303 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__23303) : cljs.core.create_array_node_seq.call(null,G__23303));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23304 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23304) : cljs.core.deref.call(null,G__23304));
} else {
var G__23305 = (i + (1));
var G__23306 = init__$2;
i = G__23305;
init__$1 = G__23306;
continue;
}
} else {
var G__23307 = (i + (1));
var G__23308 = init__$1;
i = G__23307;
init__$1 = G__23308;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__23309 = (i + (2));
i = G__23309;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23310 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__23310) : cljs.core.create_inode_seq.call(null,G__23310));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__23311 = self__.nodes;
var G__23312 = (self__.i + (2));
var G__23313 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__23311,G__23312,G__23313) : cljs.core.create_inode_seq.call(null,G__23311,G__23312,G__23313));
} else {
var G__23314 = self__.nodes;
var G__23315 = self__.i;
var G__23316 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__23314,G__23315,G__23316) : cljs.core.create_inode_seq.call(null,G__23314,G__23315,G__23316));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__23320 = (j + (2));
j = G__23320;
continue;
}
} else {
var G__23321 = (j + (2));
j = G__23321;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23322 = null;
var G__23323 = self__.nodes;
var G__23324 = self__.i;
var G__23325 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__23322,G__23323,G__23324,G__23325) : cljs.core.create_array_node_seq.call(null,G__23322,G__23323,G__23324,G__23325));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__23330 = (j + (1));
j = G__23330;
continue;
}
} else {
var G__23331 = (j + (1));
j = G__23331;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23333 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23333) : cljs.core.keys.call(null,G__23333));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23334 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23334) : cljs.core.vals.call(null,G__23334));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23335 = cljs.core.seq(coll);
var chunk__23336 = null;
var count__23337 = (0);
var i__23338 = (0);
while(true){
if((i__23338 < count__23337)){
var vec__23339 = chunk__23336.cljs$core$IIndexed$_nth$arity$2(null,i__23338);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23339,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23339,(1),null);
var G__23340_23351 = v;
var G__23341_23352 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23340_23351,G__23341_23352) : f.call(null,G__23340_23351,G__23341_23352));

var G__23353 = seq__23335;
var G__23354 = chunk__23336;
var G__23355 = count__23337;
var G__23356 = (i__23338 + (1));
seq__23335 = G__23353;
chunk__23336 = G__23354;
count__23337 = G__23355;
i__23338 = G__23356;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23335);
if(temp__4126__auto__){
var seq__23335__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23335__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23335__$1);
var G__23357 = cljs.core.chunk_rest(seq__23335__$1);
var G__23358 = c__13412__auto__;
var G__23359 = cljs.core.count(c__13412__auto__);
var G__23360 = (0);
seq__23335 = G__23357;
chunk__23336 = G__23358;
count__23337 = G__23359;
i__23338 = G__23360;
continue;
} else {
var vec__23342 = cljs.core.first(seq__23335__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23342,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23342,(1),null);
var G__23343_23361 = v;
var G__23344_23362 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23343_23361,G__23344_23362) : f.call(null,G__23343_23361,G__23344_23362));

var G__23363 = cljs.core.next(seq__23335__$1);
var G__23364 = null;
var G__23365 = (0);
var G__23366 = (0);
seq__23335 = G__23363;
chunk__23336 = G__23364;
count__23337 = G__23365;
i__23338 = G__23366;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__23345 = init;
var G__23346 = null;
var G__23347 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23345,G__23346,G__23347) : f.call(null,G__23345,G__23346,G__23347));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23348 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23348) : cljs.core.deref.call(null,G__23348));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj23350 = {};
return obj23350;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23367 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23368 = cljs.core.next(es);
ret = G__23367;
es = G__23368;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__23369 = null;
var G__23369__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23369__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23369 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23369__2.call(this,self__,k);
case 3:
return G__23369__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23369.cljs$core$IFn$_invoke$arity$2 = G__23369__2;
G__23369.cljs$core$IFn$_invoke$arity$3 = G__23369__3;
return G__23369;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args23332){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23332)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23370 = (i + (2));
var G__23371 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23370;
ret = G__23371;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23372 = (i + (1));
var G__23373 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__23372;
out = G__23373;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__23374 = o;
if(G__23374){
var bit__13306__auto__ = (G__23374.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13306__auto__) || (G__23374.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23374.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23374);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23374);
}
})()){
return tcoll.assoc_BANG_((function (){var G__23375 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23375) : cljs.core.key.call(null,G__23375));
})(),(function (){var G__23376 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23376) : cljs.core.val.call(null,G__23376));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23379 = cljs.core.next(es);
var G__23380 = tcoll__$1.assoc_BANG_((function (){var G__23377 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23377) : cljs.core.key.call(null,G__23377));
})(),(function (){var G__23378 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23378) : cljs.core.val.call(null,G__23378));
})());
es = G__23379;
tcoll__$1 = G__23380;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__23381 = ((ascending_QMARK_)?t.left:t.right);
var G__23382 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__23381;
stack__$1 = G__23382;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23395 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23395) : cljs.core.deref.call(null,G__23395));
} else {
var init__$2 = (function (){var G__23396 = init__$1;
var G__23397 = node.key;
var G__23398 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23396,G__23397,G__23398) : f.call(null,G__23396,G__23397,G__23398));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23399 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23399) : cljs.core.deref.call(null,G__23399));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__23400 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23400) : cljs.core.deref.call(null,G__23400));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__23402 = null;
var G__23402__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23402__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23402 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23402__2.call(this,self__,k);
case 3:
return G__23402__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23402.cljs$core$IFn$_invoke$arity$2 = G__23402__2;
G__23402.cljs$core$IFn$_invoke$arity$3 = G__23402__3;
return G__23402;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args23401){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23401)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__23404 = null;
var G__23404__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23404__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23404 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23404__2.call(this,self__,k);
case 3:
return G__23404__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23404.cljs$core$IFn$_invoke$arity$2 = G__23404__2;
G__23404.cljs$core$IFn$_invoke$arity$3 = G__23404__3;
return G__23404;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args23403){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23403)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__23417 = k;
var G__23418 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23417,G__23418) : comp.call(null,G__23417,G__23418));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__23437 = k;
var G__23438 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23437,G__23438) : comp.call(null,G__23437,G__23438));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__23449 = k;
var G__23450 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23449,G__23450) : comp.call(null,G__23449,G__23450));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23452 = cljs.core.seq(coll);
var chunk__23453 = null;
var count__23454 = (0);
var i__23455 = (0);
while(true){
if((i__23455 < count__23454)){
var vec__23456 = chunk__23453.cljs$core$IIndexed$_nth$arity$2(null,i__23455);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23456,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23456,(1),null);
var G__23457_23469 = v;
var G__23458_23470 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23457_23469,G__23458_23470) : f.call(null,G__23457_23469,G__23458_23470));

var G__23471 = seq__23452;
var G__23472 = chunk__23453;
var G__23473 = count__23454;
var G__23474 = (i__23455 + (1));
seq__23452 = G__23471;
chunk__23453 = G__23472;
count__23454 = G__23473;
i__23455 = G__23474;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23452);
if(temp__4126__auto__){
var seq__23452__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23452__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23452__$1);
var G__23475 = cljs.core.chunk_rest(seq__23452__$1);
var G__23476 = c__13412__auto__;
var G__23477 = cljs.core.count(c__13412__auto__);
var G__23478 = (0);
seq__23452 = G__23475;
chunk__23453 = G__23476;
count__23454 = G__23477;
i__23455 = G__23478;
continue;
} else {
var vec__23459 = cljs.core.first(seq__23452__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23459,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23459,(1),null);
var G__23460_23479 = v;
var G__23461_23480 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23460_23479,G__23461_23480) : f.call(null,G__23460_23479,G__23461_23480));

var G__23481 = cljs.core.next(seq__23452__$1);
var G__23482 = null;
var G__23483 = (0);
var G__23484 = (0);
seq__23452 = G__23481;
chunk__23453 = G__23482;
count__23454 = G__23483;
i__23455 = G__23484;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23462 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23462) : cljs.core.keys.call(null,G__23462));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23463 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23463) : cljs.core.vals.call(null,G__23463));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__23464 = k;
var G__23465 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23464,G__23465) : self__.comp.call(null,G__23464,G__23465));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__23485 = t.left;
t = G__23485;
continue;
} else {
var G__23486 = t.right;
t = G__23486;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23487 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23488 = cljs.core.next(es);
ret = G__23487;
es = G__23488;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__23489 = null;
var G__23489__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23489__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23489 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23489__2.call(this,self__,k);
case 3:
return G__23489__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23489.cljs$core$IFn$_invoke$arity$2 = G__23489__2;
G__23489.cljs$core$IFn$_invoke$arity$3 = G__23489__3;
return G__23489;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args23451){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23451)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__23466 = k;
var G__23467 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23466,G__23467) : self__.comp.call(null,G__23466,G__23467));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__23490 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__23491 = t.left;
stack = G__23490;
t = G__23491;
continue;
} else {
var G__23492 = stack;
var G__23493 = t.right;
stack = G__23492;
t = G__23493;
continue;
}
} else {
if((c > (0))){
var G__23494 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__23495 = t.right;
stack = G__23494;
t = G__23495;
continue;
} else {
var G__23496 = stack;
var G__23497 = t.left;
stack = G__23496;
t = G__23497;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__23468 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23468) : cljs.core.key.call(null,G__23468));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__23498 = cljs.core.nnext(in$);
var G__23499 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23498;
out = G__23499;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23500__i = 0, G__23500__a = new Array(arguments.length -  0);
while (G__23500__i < G__23500__a.length) {G__23500__a[G__23500__i] = arguments[G__23500__i + 0]; ++G__23500__i;}
  keyvals = new cljs.core.IndexedSeq(G__23500__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__23501){
var keyvals = cljs.core.seq(arglist__23501);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23502__i = 0, G__23502__a = new Array(arguments.length -  0);
while (G__23502__i < G__23502__a.length) {G__23502__a[G__23502__i] = arguments[G__23502__i + 0]; ++G__23502__i;}
  keyvals = new cljs.core.IndexedSeq(G__23502__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__23503){
var keyvals = cljs.core.seq(arglist__23503);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj23507 = {};
return obj23507;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__23508 = cljs.core.nnext(kvs);
kvs = G__23508;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23509__i = 0, G__23509__a = new Array(arguments.length -  0);
while (G__23509__i < G__23509__a.length) {G__23509__a[G__23509__i] = arguments[G__23509__i + 0]; ++G__23509__i;}
  keyvals = new cljs.core.IndexedSeq(G__23509__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__23510){
var keyvals = cljs.core.seq(arglist__23510);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__23511 = cljs.core.nnext(in$);
var G__23512 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23511;
out = G__23512;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23513__i = 0, G__23513__a = new Array(arguments.length -  0);
while (G__23513__i < G__23513__a.length) {G__23513__a[G__23513__i] = arguments[G__23513__i + 0]; ++G__23513__i;}
  keyvals = new cljs.core.IndexedSeq(G__23513__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__23514){
var keyvals = cljs.core.seq(arglist__23514);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__23515 = cljs.core.nnext(in$);
var G__23516 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23515;
out = G__23516;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__23517__i = 0, G__23517__a = new Array(arguments.length -  1);
while (G__23517__i < G__23517__a.length) {G__23517__a[G__23517__i] = arguments[G__23517__i + 1]; ++G__23517__i;}
  keyvals = new cljs.core.IndexedSeq(G__23517__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__23518){
var comparator = cljs.core.first(arglist__23518);
var keyvals = cljs.core.rest(arglist__23518);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23519 = self__.mseq;
if(G__23519){
var bit__13306__auto__ = (G__23519.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13306__auto__) || (G__23519.cljs$core$INext$)){
return true;
} else {
if((!G__23519.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23519);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23519);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23520 = self__.mseq;
if(G__23520){
var bit__13306__auto__ = (G__23520.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13306__auto__) || (G__23520.cljs$core$INext$)){
return true;
} else {
if((!G__23520.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23520);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23520);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23521 = self__.mseq;
if(G__23521){
var bit__13306__auto__ = (G__23521.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13306__auto__) || (G__23521.cljs$core$INext$)){
return true;
} else {
if((!G__23521.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23521);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23521);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23522 = self__.mseq;
if(G__23522){
var bit__13306__auto__ = (G__23522.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13306__auto__) || (G__23522.cljs$core$INext$)){
return true;
} else {
if((!G__23522.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23522);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23522);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__23523_SHARP_,p2__23524_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12625__auto__ = p1__23523_SHARP_;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__23524_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__23525__i = 0, G__23525__a = new Array(arguments.length -  0);
while (G__23525__i < G__23525__a.length) {G__23525__a[G__23525__i] = arguments[G__23525__i + 0]; ++G__23525__i;}
  maps = new cljs.core.IndexedSeq(G__23525__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__23526){
var maps = cljs.core.seq(arglist__23526);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23529 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23530 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23529,G__23530) : f.call(null,G__23529,G__23530));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12625__auto__ = m1;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__23531__i = 0, G__23531__a = new Array(arguments.length -  1);
while (G__23531__i < G__23531__a.length) {G__23531__a[G__23531__i] = arguments[G__23531__i + 1]; ++G__23531__i;}
  maps = new cljs.core.IndexedSeq(G__23531__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__23532){
var f = cljs.core.first(arglist__23532);
var maps = cljs.core.rest(arglist__23532);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__23533 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__23534 = cljs.core.next(keys);
ret = G__23533;
keys = G__23534;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23537 = cljs.core.seq(coll);
var chunk__23538 = null;
var count__23539 = (0);
var i__23540 = (0);
while(true){
if((i__23540 < count__23539)){
var vec__23541 = chunk__23538.cljs$core$IIndexed$_nth$arity$2(null,i__23540);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23541,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23541,(1),null);
var G__23542_23547 = v;
var G__23543_23548 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23542_23547,G__23543_23548) : f.call(null,G__23542_23547,G__23543_23548));

var G__23549 = seq__23537;
var G__23550 = chunk__23538;
var G__23551 = count__23539;
var G__23552 = (i__23540 + (1));
seq__23537 = G__23549;
chunk__23538 = G__23550;
count__23539 = G__23551;
i__23540 = G__23552;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23537);
if(temp__4126__auto__){
var seq__23537__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23537__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23537__$1);
var G__23553 = cljs.core.chunk_rest(seq__23537__$1);
var G__23554 = c__13412__auto__;
var G__23555 = cljs.core.count(c__13412__auto__);
var G__23556 = (0);
seq__23537 = G__23553;
chunk__23538 = G__23554;
count__23539 = G__23555;
i__23540 = G__23556;
continue;
} else {
var vec__23544 = cljs.core.first(seq__23537__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23544,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23544,(1),null);
var G__23545_23557 = v;
var G__23546_23558 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23545_23557,G__23546_23558) : f.call(null,G__23545_23557,G__23546_23558));

var G__23559 = cljs.core.next(seq__23537__$1);
var G__23560 = null;
var G__23561 = (0);
var G__23562 = (0);
seq__23537 = G__23559;
chunk__23538 = G__23560;
count__23539 = G__23561;
i__23540 = G__23562;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23535_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23535_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__23563 = null;
var G__23563__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23563__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23563 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23563__2.call(this,self__,k);
case 3:
return G__23563__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23563.cljs$core$IFn$_invoke$arity$2 = G__23563__2;
G__23563.cljs$core$IFn$_invoke$arity$3 = G__23563__3;
return G__23563;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args23536){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23536)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23564 = (i + (1));
var G__23565 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__23564;
out = G__23565;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__23566 = (i + (1));
var G__23567 = cljs.core._conj_BANG_(out,(items[i]));
i = G__23566;
out = G__23567;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__23569 = null;
var G__23569__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__23569__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__23569 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23569__2.call(this,self__,k);
case 3:
return G__23569__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23569.cljs$core$IFn$_invoke$arity$2 = G__23569__2;
G__23569.cljs$core$IFn$_invoke$arity$3 = G__23569__3;
return G__23569;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args23568){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23568)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23572 = cljs.core.seq(coll);
var chunk__23573 = null;
var count__23574 = (0);
var i__23575 = (0);
while(true){
if((i__23575 < count__23574)){
var vec__23576 = chunk__23573.cljs$core$IIndexed$_nth$arity$2(null,i__23575);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23576,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23576,(1),null);
var G__23577_23582 = v;
var G__23578_23583 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23577_23582,G__23578_23583) : f.call(null,G__23577_23582,G__23578_23583));

var G__23584 = seq__23572;
var G__23585 = chunk__23573;
var G__23586 = count__23574;
var G__23587 = (i__23575 + (1));
seq__23572 = G__23584;
chunk__23573 = G__23585;
count__23574 = G__23586;
i__23575 = G__23587;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23572);
if(temp__4126__auto__){
var seq__23572__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23572__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23572__$1);
var G__23588 = cljs.core.chunk_rest(seq__23572__$1);
var G__23589 = c__13412__auto__;
var G__23590 = cljs.core.count(c__13412__auto__);
var G__23591 = (0);
seq__23572 = G__23588;
chunk__23573 = G__23589;
count__23574 = G__23590;
i__23575 = G__23591;
continue;
} else {
var vec__23579 = cljs.core.first(seq__23572__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23579,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23579,(1),null);
var G__23580_23592 = v;
var G__23581_23593 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23580_23592,G__23581_23593) : f.call(null,G__23580_23592,G__23581_23593));

var G__23594 = cljs.core.next(seq__23572__$1);
var G__23595 = null;
var G__23596 = (0);
var G__23597 = (0);
seq__23572 = G__23594;
chunk__23573 = G__23595;
count__23574 = G__23596;
i__23575 = G__23597;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23570_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23570_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__23598 = null;
var G__23598__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23598__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23598 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23598__2.call(this,self__,k);
case 3:
return G__23598__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23598.cljs$core$IFn$_invoke$arity$2 = G__23598__2;
G__23598.cljs$core$IFn$_invoke$arity$3 = G__23598__3;
return G__23598;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args23571){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23571)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13506__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13506__auto__.length)){
var G__23599 = (i + (1));
var G__23600 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__23599;
res = G__23600;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__23601 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__23602 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__23601;
out = G__23602;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__23603__delegate = function (keys){
return cljs.core.set(keys);
};
var G__23603 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23604__i = 0, G__23604__a = new Array(arguments.length -  0);
while (G__23604__i < G__23604__a.length) {G__23604__a[G__23604__i] = arguments[G__23604__i + 0]; ++G__23604__i;}
  keys = new cljs.core.IndexedSeq(G__23604__a,0);
} 
return G__23603__delegate.call(this,keys);};
G__23603.cljs$lang$maxFixedArity = 0;
G__23603.cljs$lang$applyTo = (function (arglist__23605){
var keys = cljs.core.seq(arglist__23605);
return G__23603__delegate(keys);
});
G__23603.cljs$core$IFn$_invoke$arity$variadic = G__23603__delegate;
return G__23603;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__23606 = null;
if (arguments.length > 0) {
var G__23607__i = 0, G__23607__a = new Array(arguments.length -  0);
while (G__23607__i < G__23607__a.length) {G__23607__a[G__23607__i] = arguments[G__23607__i + 0]; ++G__23607__i;}
G__23606 = new cljs.core.IndexedSeq(G__23607__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__23606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23608__i = 0, G__23608__a = new Array(arguments.length -  0);
while (G__23608__i < G__23608__a.length) {G__23608__a[G__23608__i] = arguments[G__23608__i + 0]; ++G__23608__i;}
  keys = new cljs.core.IndexedSeq(G__23608__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__23609){
var keys = cljs.core.seq(arglist__23609);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__23610__i = 0, G__23610__a = new Array(arguments.length -  1);
while (G__23610__i < G__23610__a.length) {G__23610__a[G__23610__i] = arguments[G__23610__i + 1]; ++G__23610__i;}
  keys = new cljs.core.IndexedSeq(G__23610__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__23611){
var comparator = cljs.core.first(arglist__23611);
var keys = cljs.core.rest(arglist__23611);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__23612_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23612_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__23612_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23613_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23613_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__23613_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__23634 = null;
var G__23634__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23634__1 = (function (result){
var G__23624 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23624) : rf.call(null,G__23624));
});
var G__23634__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__23625 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23625) : cljs.core.deref.call(null,G__23625));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__23626 = result;
var G__23627 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23626,G__23627) : rf.call(null,G__23626,G__23627));
}
});
G__23634 = function(result,input){
switch(arguments.length){
case 0:
return G__23634__0.call(this);
case 1:
return G__23634__1.call(this,result);
case 2:
return G__23634__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23634.cljs$core$IFn$_invoke$arity$0 = G__23634__0;
G__23634.cljs$core$IFn$_invoke$arity$1 = G__23634__1;
G__23634.cljs$core$IFn$_invoke$arity$2 = G__23634__2;
return G__23634;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__23632,seen__$1){
while(true){
var vec__23633 = p__23632;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23633,(0),null);
var xs__$1 = vec__23633;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__23635 = cljs.core.rest(s);
var G__23636 = seen__$1;
p__23632 = G__23635;
seen__$1 = G__23636;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__23637 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__23638 = cljs.core.next(s__$1);
ret = G__23637;
s__$1 = G__23638;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__23640 = x;
if(G__23640){
var bit__13299__auto__ = (G__23640.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13299__auto__) || (G__23640.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__23641 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__23642 = cljs.core.next(ks);
var G__23643 = cljs.core.next(vs);
map = G__23641;
ks = G__23642;
vs = G__23643;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__23654 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23654) : k.call(null,G__23654));
})() > (function (){var G__23655 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23655) : k.call(null,G__23655));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__23656__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23644_SHARP_,p2__23645_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__23644_SHARP_,p2__23645_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23656 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23657__i = 0, G__23657__a = new Array(arguments.length -  3);
while (G__23657__i < G__23657__a.length) {G__23657__a[G__23657__i] = arguments[G__23657__i + 3]; ++G__23657__i;}
  more = new cljs.core.IndexedSeq(G__23657__a,0);
} 
return G__23656__delegate.call(this,k,x,y,more);};
G__23656.cljs$lang$maxFixedArity = 3;
G__23656.cljs$lang$applyTo = (function (arglist__23658){
var k = cljs.core.first(arglist__23658);
arglist__23658 = cljs.core.next(arglist__23658);
var x = cljs.core.first(arglist__23658);
arglist__23658 = cljs.core.next(arglist__23658);
var y = cljs.core.first(arglist__23658);
var more = cljs.core.rest(arglist__23658);
return G__23656__delegate(k,x,y,more);
});
G__23656.cljs$core$IFn$_invoke$arity$variadic = G__23656__delegate;
return G__23656;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__23659 = null;
if (arguments.length > 3) {
var G__23660__i = 0, G__23660__a = new Array(arguments.length -  3);
while (G__23660__i < G__23660__a.length) {G__23660__a[G__23660__i] = arguments[G__23660__i + 3]; ++G__23660__i;}
G__23659 = new cljs.core.IndexedSeq(G__23660__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__23671 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23671) : k.call(null,G__23671));
})() < (function (){var G__23672 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23672) : k.call(null,G__23672));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__23673__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23661_SHARP_,p2__23662_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__23661_SHARP_,p2__23662_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23673 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23674__i = 0, G__23674__a = new Array(arguments.length -  3);
while (G__23674__i < G__23674__a.length) {G__23674__a[G__23674__i] = arguments[G__23674__i + 3]; ++G__23674__i;}
  more = new cljs.core.IndexedSeq(G__23674__a,0);
} 
return G__23673__delegate.call(this,k,x,y,more);};
G__23673.cljs$lang$maxFixedArity = 3;
G__23673.cljs$lang$applyTo = (function (arglist__23675){
var k = cljs.core.first(arglist__23675);
arglist__23675 = cljs.core.next(arglist__23675);
var x = cljs.core.first(arglist__23675);
arglist__23675 = cljs.core.next(arglist__23675);
var y = cljs.core.first(arglist__23675);
var more = cljs.core.rest(arglist__23675);
return G__23673__delegate(k,x,y,more);
});
G__23673.cljs$core$IFn$_invoke$arity$variadic = G__23673__delegate;
return G__23673;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__23676 = null;
if (arguments.length > 3) {
var G__23677__i = 0, G__23677__a = new Array(arguments.length -  3);
while (G__23677__i < G__23677__a.length) {G__23677__a[G__23677__i] = arguments[G__23677__i + 3]; ++G__23677__i;}
G__23676 = new cljs.core.IndexedSeq(G__23677__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__23694 = null;
var G__23694__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23694__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23689 = result;
var G__23690 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23689,G__23690) : rf.call(null,G__23689,G__23690));
})());
})());
var G__23691 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23691) : rf.call(null,G__23691));
});
var G__23694__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__23692 = result;
var G__23693 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23692,G__23693) : rf.call(null,G__23692,G__23693));
} else {
return result;
}
});
G__23694 = function(result,input){
switch(arguments.length){
case 0:
return G__23694__0.call(this);
case 1:
return G__23694__1.call(this,result);
case 2:
return G__23694__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23694.cljs$core$IFn$_invoke$arity$0 = G__23694__0;
G__23694.cljs$core$IFn$_invoke$arity$1 = G__23694__1;
G__23694.cljs$core$IFn$_invoke$arity$2 = G__23694__2;
return G__23694;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__23707 = null;
var G__23707__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23707__1 = (function (result){
var G__23702 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23702) : rf.call(null,G__23702));
});
var G__23707__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23703 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23703) : pred.call(null,G__23703));
})())){
var G__23704 = result;
var G__23705 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23704,G__23705) : rf.call(null,G__23704,G__23705));
} else {
return cljs.core.reduced(result);
}
});
G__23707 = function(result,input){
switch(arguments.length){
case 0:
return G__23707__0.call(this);
case 1:
return G__23707__1.call(this,result);
case 2:
return G__23707__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23707.cljs$core$IFn$_invoke$arity$0 = G__23707__0;
G__23707.cljs$core$IFn$_invoke$arity$1 = G__23707__1;
G__23707.cljs$core$IFn$_invoke$arity$2 = G__23707__2;
return G__23707;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__23706 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23706) : pred.call(null,G__23706));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__23712 = (function (){var G__23714 = cljs.core._entry_key(sc,e);
var G__23715 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23714,G__23715) : comp.call(null,G__23714,G__23715));
})();
var G__23713 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__23712,G__23713) : test.call(null,G__23712,G__23713));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23719 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23719,(0),null);
var s = vec__23719;
if(cljs.core.truth_((function (){var G__23720 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__23720) : include.call(null,G__23720));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23721 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23721,(0),null);
var s = vec__23721;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23725 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23725,(0),null);
var s = vec__23725;
if(cljs.core.truth_((function (){var G__23726 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__23726) : include.call(null,G__23726));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23727 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23727,(0),null);
var s = vec__23727;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__23728 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__23728) : Math.ceil.call(null,G__23728));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13046__auto__ = self__.__hash;
if(!((h__13046__auto__ == null))){
return h__13046__auto__;
} else {
var h__13046__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13046__auto____$1;

return h__13046__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__23729 = ret;
var G__23730 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23729,G__23730) : f.call(null,G__23729,G__23730));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__23731 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23731) : cljs.core.deref.call(null,G__23731));
} else {
var G__23732 = (i + self__.step);
var G__23733 = ret__$1;
i = G__23732;
ret = G__23733;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23751 = null;
var G__23751__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23751__1 = (function (result){
var G__23748 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23748) : rf.call(null,G__23748));
});
var G__23751__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__23749 = result;
var G__23750 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23749,G__23750) : rf.call(null,G__23749,G__23750));
} else {
return result;
}
});
G__23751 = function(result,input){
switch(arguments.length){
case 0:
return G__23751__0.call(this);
case 1:
return G__23751__1.call(this,result);
case 2:
return G__23751__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23751.cljs$core$IFn$_invoke$arity$0 = G__23751__0;
G__23751.cljs$core$IFn$_invoke$arity$1 = G__23751__1;
G__23751.cljs$core$IFn$_invoke$arity$2 = G__23751__2;
return G__23751;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__23773 = null;
var G__23773__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23773__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23764 = result;
var G__23765 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23764,G__23765) : rf.call(null,G__23764,G__23765));
})());
})());
var G__23766 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23766) : rf.call(null,G__23766));
});
var G__23773__2 = (function (result,input){
var pval = (function (){var G__23767 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23767) : cljs.core.deref.call(null,G__23767));
})();
var val = (function (){var G__23768 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23768) : f.call(null,G__23768));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__23769 = result;
var G__23770 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23769,G__23770) : rf.call(null,G__23769,G__23770));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__23773 = function(result,input){
switch(arguments.length){
case 0:
return G__23773__0.call(this);
case 1:
return G__23773__1.call(this,result);
case 2:
return G__23773__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23773.cljs$core$IFn$_invoke$arity$0 = G__23773__0;
G__23773.cljs$core$IFn$_invoke$arity$1 = G__23773__1;
G__23773.cljs$core$IFn$_invoke$arity$2 = G__23773__2;
return G__23773;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__23771 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23771) : f.call(null,G__23771));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__23752_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__23772 = p1__23752_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23772) : f.call(null,G__23772));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__23782 = init;
var G__23783 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23782,G__23783) : f.call(null,G__23782,G__23783));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__23878 = null;
var G__23878__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__23878__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23836 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23836) : f.call(null,G__23836));
})()],null));
});
var G__23878__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23837 = x;
var G__23838 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23837,G__23838) : f.call(null,G__23837,G__23838));
})()],null));
});
var G__23878__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23839 = x;
var G__23840 = y;
var G__23841 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23839,G__23840,G__23841) : f.call(null,G__23839,G__23840,G__23841));
})()],null));
});
var G__23878__4 = (function() { 
var G__23879__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__23879 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23880__i = 0, G__23880__a = new Array(arguments.length -  3);
while (G__23880__i < G__23880__a.length) {G__23880__a[G__23880__i] = arguments[G__23880__i + 3]; ++G__23880__i;}
  args = new cljs.core.IndexedSeq(G__23880__a,0);
} 
return G__23879__delegate.call(this,x,y,z,args);};
G__23879.cljs$lang$maxFixedArity = 3;
G__23879.cljs$lang$applyTo = (function (arglist__23881){
var x = cljs.core.first(arglist__23881);
arglist__23881 = cljs.core.next(arglist__23881);
var y = cljs.core.first(arglist__23881);
arglist__23881 = cljs.core.next(arglist__23881);
var z = cljs.core.first(arglist__23881);
var args = cljs.core.rest(arglist__23881);
return G__23879__delegate(x,y,z,args);
});
G__23879.cljs$core$IFn$_invoke$arity$variadic = G__23879__delegate;
return G__23879;
})()
;
G__23878 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23878__0.call(this);
case 1:
return G__23878__1.call(this,x);
case 2:
return G__23878__2.call(this,x,y);
case 3:
return G__23878__3.call(this,x,y,z);
default:
var G__23882 = null;
if (arguments.length > 3) {
var G__23883__i = 0, G__23883__a = new Array(arguments.length -  3);
while (G__23883__i < G__23883__a.length) {G__23883__a[G__23883__i] = arguments[G__23883__i + 3]; ++G__23883__i;}
G__23882 = new cljs.core.IndexedSeq(G__23883__a,0);
}
return G__23878__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23882);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23878.cljs$lang$maxFixedArity = 3;
G__23878.cljs$lang$applyTo = G__23878__4.cljs$lang$applyTo;
G__23878.cljs$core$IFn$_invoke$arity$0 = G__23878__0;
G__23878.cljs$core$IFn$_invoke$arity$1 = G__23878__1;
G__23878.cljs$core$IFn$_invoke$arity$2 = G__23878__2;
G__23878.cljs$core$IFn$_invoke$arity$3 = G__23878__3;
G__23878.cljs$core$IFn$_invoke$arity$variadic = G__23878__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23878;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__23884 = null;
var G__23884__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__23884__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23842 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23842) : f.call(null,G__23842));
})(),(function (){var G__23843 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23843) : g.call(null,G__23843));
})()],null));
});
var G__23884__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23844 = x;
var G__23845 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23844,G__23845) : f.call(null,G__23844,G__23845));
})(),(function (){var G__23846 = x;
var G__23847 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23846,G__23847) : g.call(null,G__23846,G__23847));
})()],null));
});
var G__23884__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23848 = x;
var G__23849 = y;
var G__23850 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23848,G__23849,G__23850) : f.call(null,G__23848,G__23849,G__23850));
})(),(function (){var G__23851 = x;
var G__23852 = y;
var G__23853 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23851,G__23852,G__23853) : g.call(null,G__23851,G__23852,G__23853));
})()],null));
});
var G__23884__4 = (function() { 
var G__23885__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__23885 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23886__i = 0, G__23886__a = new Array(arguments.length -  3);
while (G__23886__i < G__23886__a.length) {G__23886__a[G__23886__i] = arguments[G__23886__i + 3]; ++G__23886__i;}
  args = new cljs.core.IndexedSeq(G__23886__a,0);
} 
return G__23885__delegate.call(this,x,y,z,args);};
G__23885.cljs$lang$maxFixedArity = 3;
G__23885.cljs$lang$applyTo = (function (arglist__23887){
var x = cljs.core.first(arglist__23887);
arglist__23887 = cljs.core.next(arglist__23887);
var y = cljs.core.first(arglist__23887);
arglist__23887 = cljs.core.next(arglist__23887);
var z = cljs.core.first(arglist__23887);
var args = cljs.core.rest(arglist__23887);
return G__23885__delegate(x,y,z,args);
});
G__23885.cljs$core$IFn$_invoke$arity$variadic = G__23885__delegate;
return G__23885;
})()
;
G__23884 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23884__0.call(this);
case 1:
return G__23884__1.call(this,x);
case 2:
return G__23884__2.call(this,x,y);
case 3:
return G__23884__3.call(this,x,y,z);
default:
var G__23888 = null;
if (arguments.length > 3) {
var G__23889__i = 0, G__23889__a = new Array(arguments.length -  3);
while (G__23889__i < G__23889__a.length) {G__23889__a[G__23889__i] = arguments[G__23889__i + 3]; ++G__23889__i;}
G__23888 = new cljs.core.IndexedSeq(G__23889__a,0);
}
return G__23884__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23884.cljs$lang$maxFixedArity = 3;
G__23884.cljs$lang$applyTo = G__23884__4.cljs$lang$applyTo;
G__23884.cljs$core$IFn$_invoke$arity$0 = G__23884__0;
G__23884.cljs$core$IFn$_invoke$arity$1 = G__23884__1;
G__23884.cljs$core$IFn$_invoke$arity$2 = G__23884__2;
G__23884.cljs$core$IFn$_invoke$arity$3 = G__23884__3;
G__23884.cljs$core$IFn$_invoke$arity$variadic = G__23884__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23884;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__23890 = null;
var G__23890__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__23890__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23854 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23854) : f.call(null,G__23854));
})(),(function (){var G__23855 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23855) : g.call(null,G__23855));
})(),(function (){var G__23856 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23856) : h.call(null,G__23856));
})()],null));
});
var G__23890__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23857 = x;
var G__23858 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23857,G__23858) : f.call(null,G__23857,G__23858));
})(),(function (){var G__23859 = x;
var G__23860 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23859,G__23860) : g.call(null,G__23859,G__23860));
})(),(function (){var G__23861 = x;
var G__23862 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23861,G__23862) : h.call(null,G__23861,G__23862));
})()],null));
});
var G__23890__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23863 = x;
var G__23864 = y;
var G__23865 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23863,G__23864,G__23865) : f.call(null,G__23863,G__23864,G__23865));
})(),(function (){var G__23866 = x;
var G__23867 = y;
var G__23868 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23866,G__23867,G__23868) : g.call(null,G__23866,G__23867,G__23868));
})(),(function (){var G__23869 = x;
var G__23870 = y;
var G__23871 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23869,G__23870,G__23871) : h.call(null,G__23869,G__23870,G__23871));
})()],null));
});
var G__23890__4 = (function() { 
var G__23891__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__23891 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23892__i = 0, G__23892__a = new Array(arguments.length -  3);
while (G__23892__i < G__23892__a.length) {G__23892__a[G__23892__i] = arguments[G__23892__i + 3]; ++G__23892__i;}
  args = new cljs.core.IndexedSeq(G__23892__a,0);
} 
return G__23891__delegate.call(this,x,y,z,args);};
G__23891.cljs$lang$maxFixedArity = 3;
G__23891.cljs$lang$applyTo = (function (arglist__23893){
var x = cljs.core.first(arglist__23893);
arglist__23893 = cljs.core.next(arglist__23893);
var y = cljs.core.first(arglist__23893);
arglist__23893 = cljs.core.next(arglist__23893);
var z = cljs.core.first(arglist__23893);
var args = cljs.core.rest(arglist__23893);
return G__23891__delegate(x,y,z,args);
});
G__23891.cljs$core$IFn$_invoke$arity$variadic = G__23891__delegate;
return G__23891;
})()
;
G__23890 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23890__0.call(this);
case 1:
return G__23890__1.call(this,x);
case 2:
return G__23890__2.call(this,x,y);
case 3:
return G__23890__3.call(this,x,y,z);
default:
var G__23894 = null;
if (arguments.length > 3) {
var G__23895__i = 0, G__23895__a = new Array(arguments.length -  3);
while (G__23895__i < G__23895__a.length) {G__23895__a[G__23895__i] = arguments[G__23895__i + 3]; ++G__23895__i;}
G__23894 = new cljs.core.IndexedSeq(G__23895__a,0);
}
return G__23890__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23890.cljs$lang$maxFixedArity = 3;
G__23890.cljs$lang$applyTo = G__23890__4.cljs$lang$applyTo;
G__23890.cljs$core$IFn$_invoke$arity$0 = G__23890__0;
G__23890.cljs$core$IFn$_invoke$arity$1 = G__23890__1;
G__23890.cljs$core$IFn$_invoke$arity$2 = G__23890__2;
G__23890.cljs$core$IFn$_invoke$arity$3 = G__23890__3;
G__23890.cljs$core$IFn$_invoke$arity$variadic = G__23890__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23890;
})()
});
var juxt__4 = (function() { 
var G__23896__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__23897 = null;
var G__23897__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23784_SHARP_,p2__23785_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23784_SHARP_,(function (){return (p2__23785_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23785_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23785_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23897__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23786_SHARP_,p2__23787_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23786_SHARP_,(function (){var G__23872 = x;
return (p2__23787_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23787_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23872) : p2__23787_SHARP_.call(null,G__23872));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23897__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23788_SHARP_,p2__23789_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23788_SHARP_,(function (){var G__23873 = x;
var G__23874 = y;
return (p2__23789_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23789_SHARP_.cljs$core$IFn$_invoke$arity$2(G__23873,G__23874) : p2__23789_SHARP_.call(null,G__23873,G__23874));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23897__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23790_SHARP_,p2__23791_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23790_SHARP_,(function (){var G__23875 = x;
var G__23876 = y;
var G__23877 = z;
return (p2__23791_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23791_SHARP_.cljs$core$IFn$_invoke$arity$3(G__23875,G__23876,G__23877) : p2__23791_SHARP_.call(null,G__23875,G__23876,G__23877));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23897__4 = (function() { 
var G__23898__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23792_SHARP_,p2__23793_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23792_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23793_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__23898 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23899__i = 0, G__23899__a = new Array(arguments.length -  3);
while (G__23899__i < G__23899__a.length) {G__23899__a[G__23899__i] = arguments[G__23899__i + 3]; ++G__23899__i;}
  args = new cljs.core.IndexedSeq(G__23899__a,0);
} 
return G__23898__delegate.call(this,x,y,z,args);};
G__23898.cljs$lang$maxFixedArity = 3;
G__23898.cljs$lang$applyTo = (function (arglist__23900){
var x = cljs.core.first(arglist__23900);
arglist__23900 = cljs.core.next(arglist__23900);
var y = cljs.core.first(arglist__23900);
arglist__23900 = cljs.core.next(arglist__23900);
var z = cljs.core.first(arglist__23900);
var args = cljs.core.rest(arglist__23900);
return G__23898__delegate(x,y,z,args);
});
G__23898.cljs$core$IFn$_invoke$arity$variadic = G__23898__delegate;
return G__23898;
})()
;
G__23897 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23897__0.call(this);
case 1:
return G__23897__1.call(this,x);
case 2:
return G__23897__2.call(this,x,y);
case 3:
return G__23897__3.call(this,x,y,z);
default:
var G__23901 = null;
if (arguments.length > 3) {
var G__23902__i = 0, G__23902__a = new Array(arguments.length -  3);
while (G__23902__i < G__23902__a.length) {G__23902__a[G__23902__i] = arguments[G__23902__i + 3]; ++G__23902__i;}
G__23901 = new cljs.core.IndexedSeq(G__23902__a,0);
}
return G__23897__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23897.cljs$lang$maxFixedArity = 3;
G__23897.cljs$lang$applyTo = G__23897__4.cljs$lang$applyTo;
G__23897.cljs$core$IFn$_invoke$arity$0 = G__23897__0;
G__23897.cljs$core$IFn$_invoke$arity$1 = G__23897__1;
G__23897.cljs$core$IFn$_invoke$arity$2 = G__23897__2;
G__23897.cljs$core$IFn$_invoke$arity$3 = G__23897__3;
G__23897.cljs$core$IFn$_invoke$arity$variadic = G__23897__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23897;
})()
;})(fs__$1))
};
var G__23896 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23903__i = 0, G__23903__a = new Array(arguments.length -  3);
while (G__23903__i < G__23903__a.length) {G__23903__a[G__23903__i] = arguments[G__23903__i + 3]; ++G__23903__i;}
  fs = new cljs.core.IndexedSeq(G__23903__a,0);
} 
return G__23896__delegate.call(this,f,g,h,fs);};
G__23896.cljs$lang$maxFixedArity = 3;
G__23896.cljs$lang$applyTo = (function (arglist__23904){
var f = cljs.core.first(arglist__23904);
arglist__23904 = cljs.core.next(arglist__23904);
var g = cljs.core.first(arglist__23904);
arglist__23904 = cljs.core.next(arglist__23904);
var h = cljs.core.first(arglist__23904);
var fs = cljs.core.rest(arglist__23904);
return G__23896__delegate(f,g,h,fs);
});
G__23896.cljs$core$IFn$_invoke$arity$variadic = G__23896__delegate;
return G__23896;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__23905 = null;
if (arguments.length > 3) {
var G__23906__i = 0, G__23906__a = new Array(arguments.length -  3);
while (G__23906__i < G__23906__a.length) {G__23906__a[G__23906__i] = arguments[G__23906__i + 3]; ++G__23906__i;}
G__23905 = new cljs.core.IndexedSeq(G__23906__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__23905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__23907 = cljs.core.next(coll);
coll = G__23907;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__23908 = (n - (1));
var G__23909 = cljs.core.next(coll);
n = G__23908;
coll = G__23909;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__23913 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23913,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23913,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23913,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_23921 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__23922_23928 = cljs.core.first(coll);
var G__23923_23929 = writer;
var G__23924_23930 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23922_23928,G__23923_23929,G__23924_23930) : print_one.call(null,G__23922_23928,G__23923_23929,G__23924_23930));
} else {
}

var coll_23931__$1 = cljs.core.next(coll);
var n_23932 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_23931__$1) && (((n_23932 == null)) || (!((n_23932 === (0)))))){
cljs.core._write(writer,sep);

var G__23925_23933 = cljs.core.first(coll_23931__$1);
var G__23926_23934 = writer;
var G__23927_23935 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23925_23933,G__23926_23934,G__23927_23935) : print_one.call(null,G__23925_23933,G__23926_23934,G__23927_23935));

var G__23936 = cljs.core.next(coll_23931__$1);
var G__23937 = (n_23932 - (1));
coll_23931__$1 = G__23936;
n_23932 = G__23937;
continue;
} else {
if((cljs.core.seq(coll_23931__$1)) && ((n_23932 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23921;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__23942 = cljs.core.seq(ss);
var chunk__23943 = null;
var count__23944 = (0);
var i__23945 = (0);
while(true){
if((i__23945 < count__23944)){
var s = chunk__23943.cljs$core$IIndexed$_nth$arity$2(null,i__23945);
cljs.core._write(writer,s);

var G__23946 = seq__23942;
var G__23947 = chunk__23943;
var G__23948 = count__23944;
var G__23949 = (i__23945 + (1));
seq__23942 = G__23946;
chunk__23943 = G__23947;
count__23944 = G__23948;
i__23945 = G__23949;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23942);
if(temp__4126__auto__){
var seq__23942__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23942__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23942__$1);
var G__23950 = cljs.core.chunk_rest(seq__23942__$1);
var G__23951 = c__13412__auto__;
var G__23952 = cljs.core.count(c__13412__auto__);
var G__23953 = (0);
seq__23942 = G__23950;
chunk__23943 = G__23951;
count__23944 = G__23952;
i__23945 = G__23953;
continue;
} else {
var s = cljs.core.first(seq__23942__$1);
cljs.core._write(writer,s);

var G__23954 = cljs.core.next(seq__23942__$1);
var G__23955 = null;
var G__23956 = (0);
var G__23957 = (0);
seq__23942 = G__23954;
chunk__23943 = G__23955;
count__23944 = G__23956;
i__23945 = G__23957;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__23958__i = 0, G__23958__a = new Array(arguments.length -  1);
while (G__23958__i < G__23958__a.length) {G__23958__a[G__23958__i] = arguments[G__23958__i + 1]; ++G__23958__i;}
  ss = new cljs.core.IndexedSeq(G__23958__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__23959){
var writer = cljs.core.first(arglist__23959);
var ss = cljs.core.rest(arglist__23959);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj23961 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj23961;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__23964 = "[\\\\\"\b\f\n\r\t]";
var G__23965 = "g";
return RegExp(G__23964,G__23965);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12613__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12613__auto__)){
var and__12613__auto____$1 = (function (){var G__23979 = obj;
if(G__23979){
var bit__13306__auto__ = (G__23979.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13306__auto__) || (G__23979.cljs$core$IMeta$)){
return true;
} else {
if((!G__23979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23979);
}
})();
if(and__12613__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__23980 = obj;
if(G__23980){
var bit__13299__auto__ = (G__23980.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13299__auto__) || (G__23980.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__23981 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__23982 = pr_writer;
var G__23983 = writer;
var G__23984 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23981,G__23982,G__23983,G__23984) : cljs.core.print_map.call(null,G__23981,G__23982,G__23983,G__23984));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__23985 = obj;
return goog.isString(G__23985);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__23987 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__23987;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__23986 = obj;
if(G__23986){
var bit__13306__auto__ = (G__23986.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13306__auto__) || (G__23986.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__23986.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23986);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23986);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__23992 = cljs.core.seq(cljs.core.next(objs));
var chunk__23993 = null;
var count__23994 = (0);
var i__23995 = (0);
while(true){
if((i__23995 < count__23994)){
var obj = chunk__23993.cljs$core$IIndexed$_nth$arity$2(null,i__23995);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23996 = seq__23992;
var G__23997 = chunk__23993;
var G__23998 = count__23994;
var G__23999 = (i__23995 + (1));
seq__23992 = G__23996;
chunk__23993 = G__23997;
count__23994 = G__23998;
i__23995 = G__23999;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23992);
if(temp__4126__auto__){
var seq__23992__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23992__$1)){
var c__13412__auto__ = cljs.core.chunk_first(seq__23992__$1);
var G__24000 = cljs.core.chunk_rest(seq__23992__$1);
var G__24001 = c__13412__auto__;
var G__24002 = cljs.core.count(c__13412__auto__);
var G__24003 = (0);
seq__23992 = G__24000;
chunk__23993 = G__24001;
count__23994 = G__24002;
i__23995 = G__24003;
continue;
} else {
var obj = cljs.core.first(seq__23992__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24004 = cljs.core.next(seq__23992__$1);
var G__24005 = null;
var G__24006 = (0);
var G__24007 = (0);
seq__23992 = G__24004;
chunk__23993 = G__24005;
count__23994 = G__24006;
i__23995 = G__24007;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24008__i = 0, G__24008__a = new Array(arguments.length -  0);
while (G__24008__i < G__24008__a.length) {G__24008__a[G__24008__i] = arguments[G__24008__i + 0]; ++G__24008__i;}
  objs = new cljs.core.IndexedSeq(G__24008__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__24009){
var objs = cljs.core.seq(arglist__24009);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24010__i = 0, G__24010__a = new Array(arguments.length -  0);
while (G__24010__i < G__24010__a.length) {G__24010__a[G__24010__i] = arguments[G__24010__i + 0]; ++G__24010__i;}
  objs = new cljs.core.IndexedSeq(G__24010__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__24011){
var objs = cljs.core.seq(arglist__24011);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24012__i = 0, G__24012__a = new Array(arguments.length -  0);
while (G__24012__i < G__24012__a.length) {G__24012__a[G__24012__i] = arguments[G__24012__i + 0]; ++G__24012__i;}
  objs = new cljs.core.IndexedSeq(G__24012__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__24013){
var objs = cljs.core.seq(arglist__24013);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24014__i = 0, G__24014__a = new Array(arguments.length -  0);
while (G__24014__i < G__24014__a.length) {G__24014__a[G__24014__i] = arguments[G__24014__i + 0]; ++G__24014__i;}
  objs = new cljs.core.IndexedSeq(G__24014__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__24015){
var objs = cljs.core.seq(arglist__24015);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24016__i = 0, G__24016__a = new Array(arguments.length -  0);
while (G__24016__i < G__24016__a.length) {G__24016__a[G__24016__i] = arguments[G__24016__i + 0]; ++G__24016__i;}
  objs = new cljs.core.IndexedSeq(G__24016__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__24017){
var objs = cljs.core.seq(arglist__24017);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24018__i = 0, G__24018__a = new Array(arguments.length -  0);
while (G__24018__i < G__24018__a.length) {G__24018__a[G__24018__i] = arguments[G__24018__i + 0]; ++G__24018__i;}
  objs = new cljs.core.IndexedSeq(G__24018__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__24019){
var objs = cljs.core.seq(arglist__24019);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24020__i = 0, G__24020__a = new Array(arguments.length -  0);
while (G__24020__i < G__24020__a.length) {G__24020__a[G__24020__i] = arguments[G__24020__i + 0]; ++G__24020__i;}
  objs = new cljs.core.IndexedSeq(G__24020__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__24021){
var objs = cljs.core.seq(arglist__24021);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24022__i = 0, G__24022__a = new Array(arguments.length -  0);
while (G__24022__i < G__24022__a.length) {G__24022__a[G__24022__i] = arguments[G__24022__i + 0]; ++G__24022__i;}
  objs = new cljs.core.IndexedSeq(G__24022__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__24023){
var objs = cljs.core.seq(arglist__24023);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__24030_24036 = cljs.core.key(e);
var G__24031_24037 = w;
var G__24032_24038 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24030_24036,G__24031_24037,G__24032_24038) : print_one.call(null,G__24030_24036,G__24031_24037,G__24032_24038));

cljs.core._write(w," ");

var G__24033 = cljs.core.val(e);
var G__24034 = w;
var G__24035 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24033,G__24034,G__24035) : print_one.call(null,G__24033,G__24034,G__24035));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__24039__i = 0, G__24039__a = new Array(arguments.length -  2);
while (G__24039__i < G__24039__a.length) {G__24039__a[G__24039__i] = arguments[G__24039__i + 2]; ++G__24039__i;}
  args = new cljs.core.IndexedSeq(G__24039__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__24040){
var iref = cljs.core.first(arglist__24040);
arglist__24040 = cljs.core.next(arglist__24040);
var f = cljs.core.first(arglist__24040);
var args = cljs.core.rest(arglist__24040);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__24043 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24043) : cljs.core.atom.call(null,G__24043));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__24045 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24045) : cljs.core.deref.call(null,G__24045));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__24046_SHARP_,p2__24047_SHARP_){
var ret = (function (){var G__24050 = p1__24046_SHARP_;
var G__24051 = p2__24047_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24050,G__24051) : rf.call(null,G__24050,G__24051));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__24054 = null;
var G__24054__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24054__1 = (function (result){
var G__24053 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24053) : rf.call(null,G__24053));
});
var G__24054__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__24054 = function(result,input){
switch(arguments.length){
case 0:
return G__24054__0.call(this);
case 1:
return G__24054__1.call(this,result);
case 2:
return G__24054__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24054.cljs$core$IFn$_invoke$arity$0 = G__24054__0;
G__24054.cljs$core$IFn$_invoke$arity$1 = G__24054__1;
G__24054.cljs$core$IFn$_invoke$arity$2 = G__24054__2;
return G__24054;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__24063 = null;
var G__24063__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24063__1 = (function (result){
var G__24059 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24059) : rf.call(null,G__24059));
});
var G__24063__2 = (function (result,input){
var prior = (function (){var G__24060 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24060) : cljs.core.deref.call(null,G__24060));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__24061 = result;
var G__24062 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24061,G__24062) : rf.call(null,G__24061,G__24062));
}
});
G__24063 = function(result,input){
switch(arguments.length){
case 0:
return G__24063__0.call(this);
case 1:
return G__24063__1.call(this,result);
case 2:
return G__24063__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24063.cljs$core$IFn$_invoke$arity$0 = G__24063__0;
G__24063.cljs$core$IFn$_invoke$arity$1 = G__24063__1;
G__24063.cljs$core$IFn$_invoke$arity$2 = G__24063__2;
return G__24063;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13603__auto__ = this;
return cljs.core.es6_iterator(this__13603__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24065_SHARP_,p2__24064_SHARP_){
var G__24067 = p2__24064_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__24067) : proc.call(null,G__24067));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj24069 = {};
return obj24069;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12613__auto__ = x;
if(and__12613__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12613__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13269__auto__ = (((x == null))?null:x);
return (function (){var or__12625__auto__ = (cljs.core._clj__GT_js[(function (){var G__24073 = x__13269__auto__;
return goog.typeOf(G__24073);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12613__auto__ = x;
if(and__12613__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12613__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13269__auto__ = (((x == null))?null:x);
return (function (){var or__12625__auto__ = (cljs.core._key__GT_js[(function (){var G__24077 = x__13269__auto__;
return goog.typeOf(G__24077);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__24080 = k;
if(G__24080){
var bit__13306__auto__ = null;
if(cljs.core.truth_((function (){var or__12625__auto__ = bit__13306__auto__;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return G__24080.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24080.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24080);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24080);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__24081 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__24081) : cljs.core.clj__GT_js.call(null,G__24081));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__24097 = x;
if(G__24097){
var bit__13306__auto__ = null;
if(cljs.core.truth_((function (){var or__12625__auto__ = bit__13306__auto__;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return G__24097.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24097.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24097);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24097);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj24099 = {};
return obj24099;
})();
var seq__24100_24110 = cljs.core.seq(x);
var chunk__24101_24111 = null;
var count__24102_24112 = (0);
var i__24103_24113 = (0);
while(true){
if((i__24103_24113 < count__24102_24112)){
var vec__24104_24114 = chunk__24101_24111.cljs$core$IIndexed$_nth$arity$2(null,i__24103_24113);
var k_24115 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24104_24114,(0),null);
var v_24116 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24104_24114,(1),null);
(m[cljs.core.key__GT_js(k_24115)] = clj__GT_js(v_24116));

var G__24117 = seq__24100_24110;
var G__24118 = chunk__24101_24111;
var G__24119 = count__24102_24112;
var G__24120 = (i__24103_24113 + (1));
seq__24100_24110 = G__24117;
chunk__24101_24111 = G__24118;
count__24102_24112 = G__24119;
i__24103_24113 = G__24120;
continue;
} else {
var temp__4126__auto___24121 = cljs.core.seq(seq__24100_24110);
if(temp__4126__auto___24121){
var seq__24100_24122__$1 = temp__4126__auto___24121;
if(cljs.core.chunked_seq_QMARK_(seq__24100_24122__$1)){
var c__13412__auto___24123 = cljs.core.chunk_first(seq__24100_24122__$1);
var G__24124 = cljs.core.chunk_rest(seq__24100_24122__$1);
var G__24125 = c__13412__auto___24123;
var G__24126 = cljs.core.count(c__13412__auto___24123);
var G__24127 = (0);
seq__24100_24110 = G__24124;
chunk__24101_24111 = G__24125;
count__24102_24112 = G__24126;
i__24103_24113 = G__24127;
continue;
} else {
var vec__24105_24128 = cljs.core.first(seq__24100_24122__$1);
var k_24129 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24105_24128,(0),null);
var v_24130 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24105_24128,(1),null);
(m[cljs.core.key__GT_js(k_24129)] = clj__GT_js(v_24130));

var G__24131 = cljs.core.next(seq__24100_24122__$1);
var G__24132 = null;
var G__24133 = (0);
var G__24134 = (0);
seq__24100_24110 = G__24131;
chunk__24101_24111 = G__24132;
count__24102_24112 = G__24133;
i__24103_24113 = G__24134;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__24106_24135 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__24107_24136 = null;
var count__24108_24137 = (0);
var i__24109_24138 = (0);
while(true){
if((i__24109_24138 < count__24108_24137)){
var x_24139__$1 = chunk__24107_24136.cljs$core$IIndexed$_nth$arity$2(null,i__24109_24138);
arr.push(x_24139__$1);

var G__24140 = seq__24106_24135;
var G__24141 = chunk__24107_24136;
var G__24142 = count__24108_24137;
var G__24143 = (i__24109_24138 + (1));
seq__24106_24135 = G__24140;
chunk__24107_24136 = G__24141;
count__24108_24137 = G__24142;
i__24109_24138 = G__24143;
continue;
} else {
var temp__4126__auto___24144 = cljs.core.seq(seq__24106_24135);
if(temp__4126__auto___24144){
var seq__24106_24145__$1 = temp__4126__auto___24144;
if(cljs.core.chunked_seq_QMARK_(seq__24106_24145__$1)){
var c__13412__auto___24146 = cljs.core.chunk_first(seq__24106_24145__$1);
var G__24147 = cljs.core.chunk_rest(seq__24106_24145__$1);
var G__24148 = c__13412__auto___24146;
var G__24149 = cljs.core.count(c__13412__auto___24146);
var G__24150 = (0);
seq__24106_24135 = G__24147;
chunk__24107_24136 = G__24148;
count__24108_24137 = G__24149;
i__24109_24138 = G__24150;
continue;
} else {
var x_24151__$1 = cljs.core.first(seq__24106_24145__$1);
arr.push(x_24151__$1);

var G__24152 = cljs.core.next(seq__24106_24145__$1);
var G__24153 = null;
var G__24154 = (0);
var G__24155 = (0);
seq__24106_24135 = G__24152;
chunk__24107_24136 = G__24153;
count__24108_24137 = G__24154;
i__24109_24138 = G__24155;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj24157 = {};
return obj24157;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12613__auto__ = x;
if(and__12613__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12613__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13269__auto__ = (((x == null))?null:x);
return (function (){var or__12625__auto__ = (cljs.core._js__GT_clj[(function (){var G__24161 = x__13269__auto__;
return goog.typeOf(G__24161);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__24218__delegate = function (x,opts){
var map__24191 = opts;
var map__24191__$1 = ((cljs.core.seq_QMARK_(map__24191))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24191):map__24191);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24191__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__24191,map__24191__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__24207 = x__$1;
if(G__24207){
var bit__13306__auto__ = null;
if(cljs.core.truth_((function (){var or__12625__auto__ = bit__13306__auto__;
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return G__24207.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__24207.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__24207);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__24207);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__13381__auto__ = ((function (map__24191,map__24191__$1,keywordize_keys,keyfn){
return (function iter__24208(s__24209){
return (new cljs.core.LazySeq(null,((function (map__24191,map__24191__$1,keywordize_keys,keyfn){
return (function (){
var s__24209__$1 = s__24209;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__24209__$1);
if(temp__4126__auto__){
var s__24209__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__24209__$2)){
var c__13379__auto__ = cljs.core.chunk_first(s__24209__$2);
var size__13380__auto__ = cljs.core.count(c__13379__auto__);
var b__24211 = cljs.core.chunk_buffer(size__13380__auto__);
if((function (){var i__24210 = (0);
while(true){
if((i__24210 < size__13380__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__13379__auto__,i__24210);
cljs.core.chunk_append(b__24211,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__24216 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24216) : keyfn.call(null,G__24216));
})(),thisfn((x__$1[k]))], null));

var G__24219 = (i__24210 + (1));
i__24210 = G__24219;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__24211),iter__24208(cljs.core.chunk_rest(s__24209__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__24211),null);
}
} else {
var k = cljs.core.first(s__24209__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__24217 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24217) : keyfn.call(null,G__24217));
})(),thisfn((x__$1[k]))], null),iter__24208(cljs.core.rest(s__24209__$2)));
}
} else {
return null;
}
break;
}
});})(map__24191,map__24191__$1,keywordize_keys,keyfn))
,null,null));
});})(map__24191,map__24191__$1,keywordize_keys,keyfn))
;
return iter__13381__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__24191,map__24191__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__24218 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__24220__i = 0, G__24220__a = new Array(arguments.length -  1);
while (G__24220__i < G__24220__a.length) {G__24220__a[G__24220__i] = arguments[G__24220__i + 1]; ++G__24220__i;}
  opts = new cljs.core.IndexedSeq(G__24220__a,0);
} 
return G__24218__delegate.call(this,x,opts);};
G__24218.cljs$lang$maxFixedArity = 1;
G__24218.cljs$lang$applyTo = (function (arglist__24221){
var x = cljs.core.first(arglist__24221);
var opts = cljs.core.rest(arglist__24221);
return G__24218__delegate(x,opts);
});
G__24218.cljs$core$IFn$_invoke$arity$variadic = G__24218__delegate;
return G__24218;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__24222 = null;
if (arguments.length > 1) {
var G__24223__i = 0, G__24223__a = new Array(arguments.length -  1);
while (G__24223__i < G__24223__a.length) {G__24223__a[G__24223__i] = arguments[G__24223__i + 1]; ++G__24223__i;}
G__24222 = new cljs.core.IndexedSeq(G__24223__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__24226 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24226) : cljs.core.atom.call(null,G__24226));
})();
return ((function (mem){
return (function() { 
var G__24228__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__24227 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24227) : cljs.core.deref.call(null,G__24227));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__24228 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24229__i = 0, G__24229__a = new Array(arguments.length -  0);
while (G__24229__i < G__24229__a.length) {G__24229__a[G__24229__i] = arguments[G__24229__i + 0]; ++G__24229__i;}
  args = new cljs.core.IndexedSeq(G__24229__a,0);
} 
return G__24228__delegate.call(this,args);};
G__24228.cljs$lang$maxFixedArity = 0;
G__24228.cljs$lang$applyTo = (function (arglist__24230){
var args = cljs.core.seq(arglist__24230);
return G__24228__delegate(args);
});
G__24228.cljs$core$IFn$_invoke$arity$variadic = G__24228__delegate;
return G__24228;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__24232 = ret;
f = G__24232;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__24233__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__24233 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__24234__i = 0, G__24234__a = new Array(arguments.length -  1);
while (G__24234__i < G__24234__a.length) {G__24234__a[G__24234__i] = arguments[G__24234__i + 1]; ++G__24234__i;}
  args = new cljs.core.IndexedSeq(G__24234__a,0);
} 
return G__24233__delegate.call(this,f,args);};
G__24233.cljs$lang$maxFixedArity = 1;
G__24233.cljs$lang$applyTo = (function (arglist__24235){
var f = cljs.core.first(arglist__24235);
var args = cljs.core.rest(arglist__24235);
return G__24233__delegate(f,args);
});
G__24233.cljs$core$IFn$_invoke$arity$variadic = G__24233__delegate;
return G__24233;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__24236 = null;
if (arguments.length > 1) {
var G__24237__i = 0, G__24237__a = new Array(arguments.length -  1);
while (G__24237__i < G__24237__a.length) {G__24237__a[G__24237__i] = arguments[G__24237__i + 1]; ++G__24237__i;}
G__24236 = new cljs.core.IndexedSeq(G__24237__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__24240 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24240) : Math.floor.call(null,G__24240));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__24242 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24242) : f.call(null,G__24242));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__24244 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24244) : cljs.core.atom.call(null,G__24244));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__24245__i = 0, G__24245__a = new Array(arguments.length -  1);
while (G__24245__i < G__24245__a.length) {G__24245__a[G__24245__i] = arguments[G__24245__i + 1]; ++G__24245__i;}
  args = new cljs.core.IndexedSeq(G__24245__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__24246){
var f = cljs.core.first(arglist__24246);
var args = cljs.core.rest(arglist__24246);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24311 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24311) : cljs.core.deref.call(null,G__24311));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12625__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
var and__12613__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12613__auto__){
var and__12613__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12613__auto____$1){
var and__12613__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12613__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__24336 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__24334 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__24334) : child.call(null,G__24334));
})(),(function (){var G__24335 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__24335) : parent.call(null,G__24335));
})());
var G__24337 = (i + (1));
ret = G__24336;
i = G__24337;
continue;
}
break;
}
} else {
return and__12613__auto____$2;
}
} else {
return and__12613__auto____$1;
}
} else {
return and__12613__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__24341 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24341) : cljs.core.deref.call(null,G__24341));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__24345 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24345) : cljs.core.deref.call(null,G__24345));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__24349 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24349) : cljs.core.deref.call(null,G__24349));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__24358 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__24358) : targets.call(null,G__24358));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__24359 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__24359) : sources.call(null,G__24359));
})()));
});})(tp,td,ta))
;
var or__12625__auto__ = ((cljs.core.contains_QMARK_((function (){var G__24363 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__24363) : tp.call(null,G__24363));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__24364 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24364) : ta.call(null,G__24364));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__24365 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24365) : ta.call(null,G__24365));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__24372 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24372) : parentMap.call(null,G__24372));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__24373 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24373) : parentMap.call(null,G__24373));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__24366_SHARP_){
return cljs.core.cons(cljs.core.first(p1__24366_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__24366_SHARP_),cljs.core.second(p1__24366_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__24374 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24374) : parentMap.call(null,G__24374));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__24367_SHARP_,p2__24368_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__24367_SHARP_,p2__24368_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__24377 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24377) : cljs.core.deref.call(null,G__24377));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__24378 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24378) : cljs.core.deref.call(null,G__24378));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__24394 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24394) : cljs.core.deref.call(null,G__24394));
})().call(null,x);
var or__12625__auto__ = (cljs.core.truth_((function (){var and__12613__auto__ = xprefs;
if(cljs.core.truth_(and__12613__auto__)){
var G__24396 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__24396) : xprefs.call(null,G__24396));
} else {
return and__12613__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__24397 = cljs.core.rest(ps);
ps = G__24397;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12625__auto____$1)){
return or__12625__auto____$1;
} else {
var or__12625__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__24398 = cljs.core.rest(ps);
ps = G__24398;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12625__auto____$2)){
return or__12625__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12625__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12625__auto__)){
return or__12625__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__24412){
var vec__24413 = p__24412;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24413,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24413,(1),null);
var e = vec__24413;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24414 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24414) : cljs.core.deref.call(null,G__24414));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12625__auto__ = (be == null);
if(or__12625__auto__){
return or__12625__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__24415 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24415) : cljs.core.deref.call(null,G__24415));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24416 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24416) : cljs.core.deref.call(null,G__24416));
})(),(function (){var G__24417 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24417) : cljs.core.deref.call(null,G__24417));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj24419 = {};
return obj24419;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._reset[(function (){var G__24423 = x__13269__auto__;
return goog.typeOf(G__24423);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._reset["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._add_method[(function (){var G__24427 = x__13269__auto__;
return goog.typeOf(G__24427);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._add_method["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._remove_method[(function (){var G__24431 = x__13269__auto__;
return goog.typeOf(G__24431);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._prefer_method[(function (){var G__24435 = x__13269__auto__;
return goog.typeOf(G__24435);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._get_method[(function (){var G__24439 = x__13269__auto__;
return goog.typeOf(G__24439);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._get_method["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._methods[(function (){var G__24443 = x__13269__auto__;
return goog.typeOf(G__24443);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._methods["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12613__auto__ = mf;
if(and__12613__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12613__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13269__auto__ = (((mf == null))?null:mf);
return (function (){var or__12625__auto__ = (cljs.core._prefers[(function (){var G__24447 = x__13269__auto__;
return goog.typeOf(G__24447);
})()]);
if(or__12625__auto__){
return or__12625__auto__;
} else {
var or__12625__auto____$1 = (cljs.core._prefers["_"]);
if(or__12625__auto____$1){
return or__12625__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24449 = this$__$1;
return goog.getUid(G__24449);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24450 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24450) : cljs.core.deref.call(null,G__24450));
})(),(function (){var G__24451 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24451) : cljs.core.deref.call(null,G__24451));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__24452 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24452) : cljs.core.deref.call(null,G__24452));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__24453 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24453) : cljs.core.deref.call(null,G__24453));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__24454 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24454) : cljs.core.deref.call(null,G__24454));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__24455 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24455) : cljs.core.deref.call(null,G__24455));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__25296 = null;
var G__25296__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__25296__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24456 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24456) : self__.dispatch_fn.call(null,G__24456));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24457 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24457) : target_fn.call(null,G__24457));
});
var G__25296__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24458 = a;
var G__24459 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24458,G__24459) : self__.dispatch_fn.call(null,G__24458,G__24459));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24460 = a;
var G__24461 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24460,G__24461) : target_fn.call(null,G__24460,G__24461));
});
var G__25296__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24462 = a;
var G__24463 = b;
var G__24464 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24462,G__24463,G__24464) : self__.dispatch_fn.call(null,G__24462,G__24463,G__24464));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24465 = a;
var G__24466 = b;
var G__24467 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24465,G__24466,G__24467) : target_fn.call(null,G__24465,G__24466,G__24467));
});
var G__25296__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24468 = a;
var G__24469 = b;
var G__24470 = c;
var G__24471 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24468,G__24469,G__24470,G__24471) : self__.dispatch_fn.call(null,G__24468,G__24469,G__24470,G__24471));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24472 = a;
var G__24473 = b;
var G__24474 = c;
var G__24475 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24472,G__24473,G__24474,G__24475) : target_fn.call(null,G__24472,G__24473,G__24474,G__24475));
});
var G__25296__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24476 = a;
var G__24477 = b;
var G__24478 = c;
var G__24479 = d;
var G__24480 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24476,G__24477,G__24478,G__24479,G__24480) : self__.dispatch_fn.call(null,G__24476,G__24477,G__24478,G__24479,G__24480));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24481 = a;
var G__24482 = b;
var G__24483 = c;
var G__24484 = d;
var G__24485 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24481,G__24482,G__24483,G__24484,G__24485) : target_fn.call(null,G__24481,G__24482,G__24483,G__24484,G__24485));
});
var G__25296__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24486 = a;
var G__24487 = b;
var G__24488 = c;
var G__24489 = d;
var G__24490 = e;
var G__24491 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24486,G__24487,G__24488,G__24489,G__24490,G__24491) : self__.dispatch_fn.call(null,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24492 = a;
var G__24493 = b;
var G__24494 = c;
var G__24495 = d;
var G__24496 = e;
var G__24497 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24492,G__24493,G__24494,G__24495,G__24496,G__24497) : target_fn.call(null,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497));
});
var G__25296__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24498 = a;
var G__24499 = b;
var G__24500 = c;
var G__24501 = d;
var G__24502 = e;
var G__24503 = f;
var G__24504 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504) : self__.dispatch_fn.call(null,G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24505 = a;
var G__24506 = b;
var G__24507 = c;
var G__24508 = d;
var G__24509 = e;
var G__24510 = f;
var G__24511 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511) : target_fn.call(null,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511));
});
var G__25296__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24512 = a;
var G__24513 = b;
var G__24514 = c;
var G__24515 = d;
var G__24516 = e;
var G__24517 = f;
var G__24518 = g;
var G__24519 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519) : self__.dispatch_fn.call(null,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24520 = a;
var G__24521 = b;
var G__24522 = c;
var G__24523 = d;
var G__24524 = e;
var G__24525 = f;
var G__24526 = g;
var G__24527 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24520,G__24521,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527) : target_fn.call(null,G__24520,G__24521,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527));
});
var G__25296__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24528 = a;
var G__24529 = b;
var G__24530 = c;
var G__24531 = d;
var G__24532 = e;
var G__24533 = f;
var G__24534 = g;
var G__24535 = h;
var G__24536 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536) : self__.dispatch_fn.call(null,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24537 = a;
var G__24538 = b;
var G__24539 = c;
var G__24540 = d;
var G__24541 = e;
var G__24542 = f;
var G__24543 = g;
var G__24544 = h;
var G__24545 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24537,G__24538,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545) : target_fn.call(null,G__24537,G__24538,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545));
});
var G__25296__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24546 = a;
var G__24547 = b;
var G__24548 = c;
var G__24549 = d;
var G__24550 = e;
var G__24551 = f;
var G__24552 = g;
var G__24553 = h;
var G__24554 = i;
var G__24555 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24546,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553,G__24554,G__24555) : self__.dispatch_fn.call(null,G__24546,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553,G__24554,G__24555));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24556 = a;
var G__24557 = b;
var G__24558 = c;
var G__24559 = d;
var G__24560 = e;
var G__24561 = f;
var G__24562 = g;
var G__24563 = h;
var G__24564 = i;
var G__24565 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564,G__24565) : target_fn.call(null,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564,G__24565));
});
var G__25296__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24566 = a;
var G__24567 = b;
var G__24568 = c;
var G__24569 = d;
var G__24570 = e;
var G__24571 = f;
var G__24572 = g;
var G__24573 = h;
var G__24574 = i;
var G__24575 = j;
var G__24576 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24566,G__24567,G__24568,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576) : self__.dispatch_fn.call(null,G__24566,G__24567,G__24568,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24577 = a;
var G__24578 = b;
var G__24579 = c;
var G__24580 = d;
var G__24581 = e;
var G__24582 = f;
var G__24583 = g;
var G__24584 = h;
var G__24585 = i;
var G__24586 = j;
var G__24587 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583,G__24584,G__24585,G__24586,G__24587) : target_fn.call(null,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583,G__24584,G__24585,G__24586,G__24587));
});
var G__25296__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24588 = a;
var G__24589 = b;
var G__24590 = c;
var G__24591 = d;
var G__24592 = e;
var G__24593 = f;
var G__24594 = g;
var G__24595 = h;
var G__24596 = i;
var G__24597 = j;
var G__24598 = k;
var G__24599 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599) : self__.dispatch_fn.call(null,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24600 = a;
var G__24601 = b;
var G__24602 = c;
var G__24603 = d;
var G__24604 = e;
var G__24605 = f;
var G__24606 = g;
var G__24607 = h;
var G__24608 = i;
var G__24609 = j;
var G__24610 = k;
var G__24611 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24600,G__24601,G__24602,G__24603,G__24604,G__24605,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611) : target_fn.call(null,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611));
});
var G__25296__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24612 = a;
var G__24613 = b;
var G__24614 = c;
var G__24615 = d;
var G__24616 = e;
var G__24617 = f;
var G__24618 = g;
var G__24619 = h;
var G__24620 = i;
var G__24621 = j;
var G__24622 = k;
var G__24623 = l;
var G__24624 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24612,G__24613,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624) : self__.dispatch_fn.call(null,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24625 = a;
var G__24626 = b;
var G__24627 = c;
var G__24628 = d;
var G__24629 = e;
var G__24630 = f;
var G__24631 = g;
var G__24632 = h;
var G__24633 = i;
var G__24634 = j;
var G__24635 = k;
var G__24636 = l;
var G__24637 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24625,G__24626,G__24627,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637) : target_fn.call(null,G__24625,G__24626,G__24627,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637));
});
var G__25296__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24638 = a;
var G__24639 = b;
var G__24640 = c;
var G__24641 = d;
var G__24642 = e;
var G__24643 = f;
var G__24644 = g;
var G__24645 = h;
var G__24646 = i;
var G__24647 = j;
var G__24648 = k;
var G__24649 = l;
var G__24650 = m;
var G__24651 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24638,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651) : self__.dispatch_fn.call(null,G__24638,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24652 = a;
var G__24653 = b;
var G__24654 = c;
var G__24655 = d;
var G__24656 = e;
var G__24657 = f;
var G__24658 = g;
var G__24659 = h;
var G__24660 = i;
var G__24661 = j;
var G__24662 = k;
var G__24663 = l;
var G__24664 = m;
var G__24665 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24652,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662,G__24663,G__24664,G__24665) : target_fn.call(null,G__24652,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662,G__24663,G__24664,G__24665));
});
var G__25296__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24666 = a;
var G__24667 = b;
var G__24668 = c;
var G__24669 = d;
var G__24670 = e;
var G__24671 = f;
var G__24672 = g;
var G__24673 = h;
var G__24674 = i;
var G__24675 = j;
var G__24676 = k;
var G__24677 = l;
var G__24678 = m;
var G__24679 = n;
var G__24680 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24666,G__24667,G__24668,G__24669,G__24670,G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680) : self__.dispatch_fn.call(null,G__24666,G__24667,G__24668,G__24669,G__24670,G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24681 = a;
var G__24682 = b;
var G__24683 = c;
var G__24684 = d;
var G__24685 = e;
var G__24686 = f;
var G__24687 = g;
var G__24688 = h;
var G__24689 = i;
var G__24690 = j;
var G__24691 = k;
var G__24692 = l;
var G__24693 = m;
var G__24694 = n;
var G__24695 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695) : target_fn.call(null,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695));
});
var G__25296__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24696 = a;
var G__24697 = b;
var G__24698 = c;
var G__24699 = d;
var G__24700 = e;
var G__24701 = f;
var G__24702 = g;
var G__24703 = h;
var G__24704 = i;
var G__24705 = j;
var G__24706 = k;
var G__24707 = l;
var G__24708 = m;
var G__24709 = n;
var G__24710 = o;
var G__24711 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711) : self__.dispatch_fn.call(null,G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24712 = a;
var G__24713 = b;
var G__24714 = c;
var G__24715 = d;
var G__24716 = e;
var G__24717 = f;
var G__24718 = g;
var G__24719 = h;
var G__24720 = i;
var G__24721 = j;
var G__24722 = k;
var G__24723 = l;
var G__24724 = m;
var G__24725 = n;
var G__24726 = o;
var G__24727 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24712,G__24713,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727) : target_fn.call(null,G__24712,G__24713,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727));
});
var G__25296__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24728 = a;
var G__24729 = b;
var G__24730 = c;
var G__24731 = d;
var G__24732 = e;
var G__24733 = f;
var G__24734 = g;
var G__24735 = h;
var G__24736 = i;
var G__24737 = j;
var G__24738 = k;
var G__24739 = l;
var G__24740 = m;
var G__24741 = n;
var G__24742 = o;
var G__24743 = p;
var G__24744 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24728,G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744) : self__.dispatch_fn.call(null,G__24728,G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24745 = a;
var G__24746 = b;
var G__24747 = c;
var G__24748 = d;
var G__24749 = e;
var G__24750 = f;
var G__24751 = g;
var G__24752 = h;
var G__24753 = i;
var G__24754 = j;
var G__24755 = k;
var G__24756 = l;
var G__24757 = m;
var G__24758 = n;
var G__24759 = o;
var G__24760 = p;
var G__24761 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24745,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761) : target_fn.call(null,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761));
});
var G__25296__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24762 = a;
var G__24763 = b;
var G__24764 = c;
var G__24765 = d;
var G__24766 = e;
var G__24767 = f;
var G__24768 = g;
var G__24769 = h;
var G__24770 = i;
var G__24771 = j;
var G__24772 = k;
var G__24773 = l;
var G__24774 = m;
var G__24775 = n;
var G__24776 = o;
var G__24777 = p;
var G__24778 = q;
var G__24779 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779) : self__.dispatch_fn.call(null,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24780 = a;
var G__24781 = b;
var G__24782 = c;
var G__24783 = d;
var G__24784 = e;
var G__24785 = f;
var G__24786 = g;
var G__24787 = h;
var G__24788 = i;
var G__24789 = j;
var G__24790 = k;
var G__24791 = l;
var G__24792 = m;
var G__24793 = n;
var G__24794 = o;
var G__24795 = p;
var G__24796 = q;
var G__24797 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797) : target_fn.call(null,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797));
});
var G__25296__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24798 = a;
var G__24799 = b;
var G__24800 = c;
var G__24801 = d;
var G__24802 = e;
var G__24803 = f;
var G__24804 = g;
var G__24805 = h;
var G__24806 = i;
var G__24807 = j;
var G__24808 = k;
var G__24809 = l;
var G__24810 = m;
var G__24811 = n;
var G__24812 = o;
var G__24813 = p;
var G__24814 = q;
var G__24815 = r;
var G__24816 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816) : self__.dispatch_fn.call(null,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24817 = a;
var G__24818 = b;
var G__24819 = c;
var G__24820 = d;
var G__24821 = e;
var G__24822 = f;
var G__24823 = g;
var G__24824 = h;
var G__24825 = i;
var G__24826 = j;
var G__24827 = k;
var G__24828 = l;
var G__24829 = m;
var G__24830 = n;
var G__24831 = o;
var G__24832 = p;
var G__24833 = q;
var G__24834 = r;
var G__24835 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835) : target_fn.call(null,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835));
});
var G__25296__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24836 = a;
var G__24837 = b;
var G__24838 = c;
var G__24839 = d;
var G__24840 = e;
var G__24841 = f;
var G__24842 = g;
var G__24843 = h;
var G__24844 = i;
var G__24845 = j;
var G__24846 = k;
var G__24847 = l;
var G__24848 = m;
var G__24849 = n;
var G__24850 = o;
var G__24851 = p;
var G__24852 = q;
var G__24853 = r;
var G__24854 = s;
var G__24855 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855) : self__.dispatch_fn.call(null,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24856 = a;
var G__24857 = b;
var G__24858 = c;
var G__24859 = d;
var G__24860 = e;
var G__24861 = f;
var G__24862 = g;
var G__24863 = h;
var G__24864 = i;
var G__24865 = j;
var G__24866 = k;
var G__24867 = l;
var G__24868 = m;
var G__24869 = n;
var G__24870 = o;
var G__24871 = p;
var G__24872 = q;
var G__24873 = r;
var G__24874 = s;
var G__24875 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875) : target_fn.call(null,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875));
});
var G__25296__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__25296 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25296__1.call(this,self__);
case 2:
return G__25296__2.call(this,self__,a);
case 3:
return G__25296__3.call(this,self__,a,b);
case 4:
return G__25296__4.call(this,self__,a,b,c);
case 5:
return G__25296__5.call(this,self__,a,b,c,d);
case 6:
return G__25296__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25296__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25296__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25296__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25296__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25296__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25296__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25296__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25296__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25296__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25296__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25296__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25296__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25296__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25296__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25296__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25296__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25296.cljs$core$IFn$_invoke$arity$1 = G__25296__1;
G__25296.cljs$core$IFn$_invoke$arity$2 = G__25296__2;
G__25296.cljs$core$IFn$_invoke$arity$3 = G__25296__3;
G__25296.cljs$core$IFn$_invoke$arity$4 = G__25296__4;
G__25296.cljs$core$IFn$_invoke$arity$5 = G__25296__5;
G__25296.cljs$core$IFn$_invoke$arity$6 = G__25296__6;
G__25296.cljs$core$IFn$_invoke$arity$7 = G__25296__7;
G__25296.cljs$core$IFn$_invoke$arity$8 = G__25296__8;
G__25296.cljs$core$IFn$_invoke$arity$9 = G__25296__9;
G__25296.cljs$core$IFn$_invoke$arity$10 = G__25296__10;
G__25296.cljs$core$IFn$_invoke$arity$11 = G__25296__11;
G__25296.cljs$core$IFn$_invoke$arity$12 = G__25296__12;
G__25296.cljs$core$IFn$_invoke$arity$13 = G__25296__13;
G__25296.cljs$core$IFn$_invoke$arity$14 = G__25296__14;
G__25296.cljs$core$IFn$_invoke$arity$15 = G__25296__15;
G__25296.cljs$core$IFn$_invoke$arity$16 = G__25296__16;
G__25296.cljs$core$IFn$_invoke$arity$17 = G__25296__17;
G__25296.cljs$core$IFn$_invoke$arity$18 = G__25296__18;
G__25296.cljs$core$IFn$_invoke$arity$19 = G__25296__19;
G__25296.cljs$core$IFn$_invoke$arity$20 = G__25296__20;
G__25296.cljs$core$IFn$_invoke$arity$21 = G__25296__21;
G__25296.cljs$core$IFn$_invoke$arity$22 = G__25296__22;
return G__25296;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args24448){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24448)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24876 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24876) : self__.dispatch_fn.call(null,G__24876));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24877 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24877) : target_fn.call(null,G__24877));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24878 = a;
var G__24879 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24878,G__24879) : self__.dispatch_fn.call(null,G__24878,G__24879));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24880 = a;
var G__24881 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24880,G__24881) : target_fn.call(null,G__24880,G__24881));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24882 = a;
var G__24883 = b;
var G__24884 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24882,G__24883,G__24884) : self__.dispatch_fn.call(null,G__24882,G__24883,G__24884));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24885 = a;
var G__24886 = b;
var G__24887 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24885,G__24886,G__24887) : target_fn.call(null,G__24885,G__24886,G__24887));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24888 = a;
var G__24889 = b;
var G__24890 = c;
var G__24891 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24888,G__24889,G__24890,G__24891) : self__.dispatch_fn.call(null,G__24888,G__24889,G__24890,G__24891));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24892 = a;
var G__24893 = b;
var G__24894 = c;
var G__24895 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24892,G__24893,G__24894,G__24895) : target_fn.call(null,G__24892,G__24893,G__24894,G__24895));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24896 = a;
var G__24897 = b;
var G__24898 = c;
var G__24899 = d;
var G__24900 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24896,G__24897,G__24898,G__24899,G__24900) : self__.dispatch_fn.call(null,G__24896,G__24897,G__24898,G__24899,G__24900));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24901 = a;
var G__24902 = b;
var G__24903 = c;
var G__24904 = d;
var G__24905 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24901,G__24902,G__24903,G__24904,G__24905) : target_fn.call(null,G__24901,G__24902,G__24903,G__24904,G__24905));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24906 = a;
var G__24907 = b;
var G__24908 = c;
var G__24909 = d;
var G__24910 = e;
var G__24911 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24906,G__24907,G__24908,G__24909,G__24910,G__24911) : self__.dispatch_fn.call(null,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24912 = a;
var G__24913 = b;
var G__24914 = c;
var G__24915 = d;
var G__24916 = e;
var G__24917 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24912,G__24913,G__24914,G__24915,G__24916,G__24917) : target_fn.call(null,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24918 = a;
var G__24919 = b;
var G__24920 = c;
var G__24921 = d;
var G__24922 = e;
var G__24923 = f;
var G__24924 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924) : self__.dispatch_fn.call(null,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24925 = a;
var G__24926 = b;
var G__24927 = c;
var G__24928 = d;
var G__24929 = e;
var G__24930 = f;
var G__24931 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931) : target_fn.call(null,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24932 = a;
var G__24933 = b;
var G__24934 = c;
var G__24935 = d;
var G__24936 = e;
var G__24937 = f;
var G__24938 = g;
var G__24939 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939) : self__.dispatch_fn.call(null,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24940 = a;
var G__24941 = b;
var G__24942 = c;
var G__24943 = d;
var G__24944 = e;
var G__24945 = f;
var G__24946 = g;
var G__24947 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24940,G__24941,G__24942,G__24943,G__24944,G__24945,G__24946,G__24947) : target_fn.call(null,G__24940,G__24941,G__24942,G__24943,G__24944,G__24945,G__24946,G__24947));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24948 = a;
var G__24949 = b;
var G__24950 = c;
var G__24951 = d;
var G__24952 = e;
var G__24953 = f;
var G__24954 = g;
var G__24955 = h;
var G__24956 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956) : self__.dispatch_fn.call(null,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24957 = a;
var G__24958 = b;
var G__24959 = c;
var G__24960 = d;
var G__24961 = e;
var G__24962 = f;
var G__24963 = g;
var G__24964 = h;
var G__24965 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965) : target_fn.call(null,G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24966 = a;
var G__24967 = b;
var G__24968 = c;
var G__24969 = d;
var G__24970 = e;
var G__24971 = f;
var G__24972 = g;
var G__24973 = h;
var G__24974 = i;
var G__24975 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975) : self__.dispatch_fn.call(null,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24976 = a;
var G__24977 = b;
var G__24978 = c;
var G__24979 = d;
var G__24980 = e;
var G__24981 = f;
var G__24982 = g;
var G__24983 = h;
var G__24984 = i;
var G__24985 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985) : target_fn.call(null,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24986 = a;
var G__24987 = b;
var G__24988 = c;
var G__24989 = d;
var G__24990 = e;
var G__24991 = f;
var G__24992 = g;
var G__24993 = h;
var G__24994 = i;
var G__24995 = j;
var G__24996 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996) : self__.dispatch_fn.call(null,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24997 = a;
var G__24998 = b;
var G__24999 = c;
var G__25000 = d;
var G__25001 = e;
var G__25002 = f;
var G__25003 = g;
var G__25004 = h;
var G__25005 = i;
var G__25006 = j;
var G__25007 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24997,G__24998,G__24999,G__25000,G__25001,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007) : target_fn.call(null,G__24997,G__24998,G__24999,G__25000,G__25001,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25008 = a;
var G__25009 = b;
var G__25010 = c;
var G__25011 = d;
var G__25012 = e;
var G__25013 = f;
var G__25014 = g;
var G__25015 = h;
var G__25016 = i;
var G__25017 = j;
var G__25018 = k;
var G__25019 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019) : self__.dispatch_fn.call(null,G__25008,G__25009,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25020 = a;
var G__25021 = b;
var G__25022 = c;
var G__25023 = d;
var G__25024 = e;
var G__25025 = f;
var G__25026 = g;
var G__25027 = h;
var G__25028 = i;
var G__25029 = j;
var G__25030 = k;
var G__25031 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030,G__25031) : target_fn.call(null,G__25020,G__25021,G__25022,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030,G__25031));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25032 = a;
var G__25033 = b;
var G__25034 = c;
var G__25035 = d;
var G__25036 = e;
var G__25037 = f;
var G__25038 = g;
var G__25039 = h;
var G__25040 = i;
var G__25041 = j;
var G__25042 = k;
var G__25043 = l;
var G__25044 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044) : self__.dispatch_fn.call(null,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25045 = a;
var G__25046 = b;
var G__25047 = c;
var G__25048 = d;
var G__25049 = e;
var G__25050 = f;
var G__25051 = g;
var G__25052 = h;
var G__25053 = i;
var G__25054 = j;
var G__25055 = k;
var G__25056 = l;
var G__25057 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057) : target_fn.call(null,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25058 = a;
var G__25059 = b;
var G__25060 = c;
var G__25061 = d;
var G__25062 = e;
var G__25063 = f;
var G__25064 = g;
var G__25065 = h;
var G__25066 = i;
var G__25067 = j;
var G__25068 = k;
var G__25069 = l;
var G__25070 = m;
var G__25071 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071) : self__.dispatch_fn.call(null,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25072 = a;
var G__25073 = b;
var G__25074 = c;
var G__25075 = d;
var G__25076 = e;
var G__25077 = f;
var G__25078 = g;
var G__25079 = h;
var G__25080 = i;
var G__25081 = j;
var G__25082 = k;
var G__25083 = l;
var G__25084 = m;
var G__25085 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085) : target_fn.call(null,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25086 = a;
var G__25087 = b;
var G__25088 = c;
var G__25089 = d;
var G__25090 = e;
var G__25091 = f;
var G__25092 = g;
var G__25093 = h;
var G__25094 = i;
var G__25095 = j;
var G__25096 = k;
var G__25097 = l;
var G__25098 = m;
var G__25099 = n;
var G__25100 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100) : self__.dispatch_fn.call(null,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25101 = a;
var G__25102 = b;
var G__25103 = c;
var G__25104 = d;
var G__25105 = e;
var G__25106 = f;
var G__25107 = g;
var G__25108 = h;
var G__25109 = i;
var G__25110 = j;
var G__25111 = k;
var G__25112 = l;
var G__25113 = m;
var G__25114 = n;
var G__25115 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115) : target_fn.call(null,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25116 = a;
var G__25117 = b;
var G__25118 = c;
var G__25119 = d;
var G__25120 = e;
var G__25121 = f;
var G__25122 = g;
var G__25123 = h;
var G__25124 = i;
var G__25125 = j;
var G__25126 = k;
var G__25127 = l;
var G__25128 = m;
var G__25129 = n;
var G__25130 = o;
var G__25131 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131) : self__.dispatch_fn.call(null,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25132 = a;
var G__25133 = b;
var G__25134 = c;
var G__25135 = d;
var G__25136 = e;
var G__25137 = f;
var G__25138 = g;
var G__25139 = h;
var G__25140 = i;
var G__25141 = j;
var G__25142 = k;
var G__25143 = l;
var G__25144 = m;
var G__25145 = n;
var G__25146 = o;
var G__25147 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147) : target_fn.call(null,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25148 = a;
var G__25149 = b;
var G__25150 = c;
var G__25151 = d;
var G__25152 = e;
var G__25153 = f;
var G__25154 = g;
var G__25155 = h;
var G__25156 = i;
var G__25157 = j;
var G__25158 = k;
var G__25159 = l;
var G__25160 = m;
var G__25161 = n;
var G__25162 = o;
var G__25163 = p;
var G__25164 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164) : self__.dispatch_fn.call(null,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25165 = a;
var G__25166 = b;
var G__25167 = c;
var G__25168 = d;
var G__25169 = e;
var G__25170 = f;
var G__25171 = g;
var G__25172 = h;
var G__25173 = i;
var G__25174 = j;
var G__25175 = k;
var G__25176 = l;
var G__25177 = m;
var G__25178 = n;
var G__25179 = o;
var G__25180 = p;
var G__25181 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181) : target_fn.call(null,G__25165,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25182 = a;
var G__25183 = b;
var G__25184 = c;
var G__25185 = d;
var G__25186 = e;
var G__25187 = f;
var G__25188 = g;
var G__25189 = h;
var G__25190 = i;
var G__25191 = j;
var G__25192 = k;
var G__25193 = l;
var G__25194 = m;
var G__25195 = n;
var G__25196 = o;
var G__25197 = p;
var G__25198 = q;
var G__25199 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199) : self__.dispatch_fn.call(null,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25200 = a;
var G__25201 = b;
var G__25202 = c;
var G__25203 = d;
var G__25204 = e;
var G__25205 = f;
var G__25206 = g;
var G__25207 = h;
var G__25208 = i;
var G__25209 = j;
var G__25210 = k;
var G__25211 = l;
var G__25212 = m;
var G__25213 = n;
var G__25214 = o;
var G__25215 = p;
var G__25216 = q;
var G__25217 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25200,G__25201,G__25202,G__25203,G__25204,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213,G__25214,G__25215,G__25216,G__25217) : target_fn.call(null,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213,G__25214,G__25215,G__25216,G__25217));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25218 = a;
var G__25219 = b;
var G__25220 = c;
var G__25221 = d;
var G__25222 = e;
var G__25223 = f;
var G__25224 = g;
var G__25225 = h;
var G__25226 = i;
var G__25227 = j;
var G__25228 = k;
var G__25229 = l;
var G__25230 = m;
var G__25231 = n;
var G__25232 = o;
var G__25233 = p;
var G__25234 = q;
var G__25235 = r;
var G__25236 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25218,G__25219,G__25220,G__25221,G__25222,G__25223,G__25224,G__25225,G__25226,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236) : self__.dispatch_fn.call(null,G__25218,G__25219,G__25220,G__25221,G__25222,G__25223,G__25224,G__25225,G__25226,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25237 = a;
var G__25238 = b;
var G__25239 = c;
var G__25240 = d;
var G__25241 = e;
var G__25242 = f;
var G__25243 = g;
var G__25244 = h;
var G__25245 = i;
var G__25246 = j;
var G__25247 = k;
var G__25248 = l;
var G__25249 = m;
var G__25250 = n;
var G__25251 = o;
var G__25252 = p;
var G__25253 = q;
var G__25254 = r;
var G__25255 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250,G__25251,G__25252,G__25253,G__25254,G__25255) : target_fn.call(null,G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250,G__25251,G__25252,G__25253,G__25254,G__25255));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25256 = a;
var G__25257 = b;
var G__25258 = c;
var G__25259 = d;
var G__25260 = e;
var G__25261 = f;
var G__25262 = g;
var G__25263 = h;
var G__25264 = i;
var G__25265 = j;
var G__25266 = k;
var G__25267 = l;
var G__25268 = m;
var G__25269 = n;
var G__25270 = o;
var G__25271 = p;
var G__25272 = q;
var G__25273 = r;
var G__25274 = s;
var G__25275 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275) : self__.dispatch_fn.call(null,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25276 = a;
var G__25277 = b;
var G__25278 = c;
var G__25279 = d;
var G__25280 = e;
var G__25281 = f;
var G__25282 = g;
var G__25283 = h;
var G__25284 = i;
var G__25285 = j;
var G__25286 = k;
var G__25287 = l;
var G__25288 = m;
var G__25289 = n;
var G__25290 = o;
var G__25291 = p;
var G__25292 = q;
var G__25293 = r;
var G__25294 = s;
var G__25295 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283,G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295) : target_fn.call(null,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283,G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25297 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__25297);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13212__auto__,writer__13213__auto__,opt__13214__auto__){
return cljs.core._write(writer__13213__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__25302 = msg;
return Error(G__25302);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__25307 = x;
var G__25308 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__25307,G__25308) : pred.call(null,G__25307,G__25308));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25309 = y;
var G__25310 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__25309,G__25310) : pred.call(null,G__25309,G__25310));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map